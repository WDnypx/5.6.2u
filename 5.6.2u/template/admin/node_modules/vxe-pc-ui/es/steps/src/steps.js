import { defineVxeComponent } from '../../ui/src/comp';
import XEUtils from 'xe-utils';
import { createEvent } from '../../ui';
export default {
    name: 'VxeSteps',
    props: {},
    data() {
        const xID = XEUtils.uniqueId();
        const reactData = {};
        return {
            xID,
            reactData
        };
    },
    methods: {
        //
        // Method
        //
        dispatchEvent(type, params, evnt) {
            const $xeSteps = this;
            $xeSteps.$emit(type, createEvent(evnt, { $steps: $xeSteps }, params));
        },
        emitModel(value) {
            const $xeSteps = this;
            const { _events } = $xeSteps;
            if (_events && _events.modelValue) {
                $xeSteps.$emit('modelValue', value);
            }
            else {
                $xeSteps.$emit('model-value', value);
            }
        },
        //
        // Render
        //
        renderVN(h) {
            const $xeSteps = this;
            const slots = $xeSteps.$scopedSlots;
            const defaultSlot = slots.default;
            return h('div', {
                ref: 'refElem',
                class: 'vxe-steps'
            }, defaultSlot ? defaultSlot({}) : []);
        }
    },
    render(h) {
        return this.renderVN(h);
    }
};
