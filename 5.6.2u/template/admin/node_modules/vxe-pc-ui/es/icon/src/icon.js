import { defineVxeComponent } from '../../ui/src/comp';
import XEUtils from 'xe-utils';
import { getConfig, createEvent, globalMixins } from '../../ui';
export default {
    name: 'VxeIcon',
    mixins: [
        globalMixins.sizeMixin
    ],
    props: {
        name: String,
        className: String,
        roll: Boolean,
        status: String,
        size: {
            type: String,
            default: () => getConfig().icon.size || getConfig().size
        }
    },
    data() {
        const reactData = {};
        return {
            xID: XEUtils.uniqueId(),
            reactData
        };
    },
    computed: Object.assign({}, {}),
    methods: {
        //
        // Method
        //
        dispatchEvent(type, params, evnt) {
            const $xeIcon = this;
            $xeIcon.$emit(type, createEvent(evnt, { $icon: $xeIcon }, params));
        },
        clickEvent(evnt) {
            const $xeIcon = this;
            $xeIcon.dispatchEvent('click', {}, evnt);
        },
        //
        // Render
        //
        renderVN(h) {
            const $xeIcon = this;
            const props = $xeIcon;
            const { name, roll, status, className } = props;
            const vSize = $xeIcon.computeSize;
            return h('i', {
                class: ['vxe-icon', `vxe-icon-${name}`, `${className || ''}`, {
                        [`size--${vSize}`]: vSize,
                        [`theme--${status}`]: status,
                        roll: roll
                    }],
                on: {
                    click: $xeIcon.clickEvent
                }
            });
        }
    },
    render(h) {
        return this.renderVN(h);
    }
};
