import { defineVxeComponent } from '../../ui/src/comp';
import XEUtils from 'xe-utils';
import { getConfig, globalMixins, createEvent } from '../../ui';
export default {
    name: 'VxeLayoutContainer',
    mixins: [
        globalMixins.sizeMixin
    ],
    props: {
        vertical: Boolean,
        size: {
            type: String,
            default: () => getConfig().layoutContainer.size || getConfig().size
        }
    },
    data() {
        const xID = XEUtils.uniqueId();
        const reactData = {};
        return {
            xID,
            reactData
        };
    },
    computed: Object.assign({}, {}),
    methods: {
        //
        // Method
        //
        dispatchEvent(type, params, evnt) {
            const $xeLayoutContainer = this;
            $xeLayoutContainer.$emit(type, createEvent(evnt, { $layoutContainer: $xeLayoutContainer }, params));
        },
        //
        // Render
        //
        renderVN(h) {
            const $xeLayoutContainer = this;
            const props = $xeLayoutContainer;
            const slots = $xeLayoutContainer.$scopedSlots;
            const { vertical } = props;
            const vSize = $xeLayoutContainer.computeSize;
            const defaultSlot = slots.default;
            return h('div', {
                class: ['vxe-layout-container', {
                        [`size--${vSize}`]: vSize,
                        'is--vertical': vertical
                    }]
            }, defaultSlot ? defaultSlot({}) : []);
        }
    },
    render(h) {
        return this.renderVN(h);
    }
};
