"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _comp = require("../../ui/src/comp");
var _xeUtils = _interopRequireDefault(require("xe-utils"));
var _ui = require("../../ui");
var _breadcrumbItem = _interopRequireDefault(require("./breadcrumb-item"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
var _default2 = exports.default = /* define-vxe-component start */(0, _comp.defineVxeComponent)({
  name: 'VxeBreadcrumb',
  mixins: [_ui.globalMixins.sizeMixin],
  props: {
    separator: {
      type: String,
      default: function _default() {
        return (0, _ui.getConfig)().breadcrumb.separator;
      }
    },
    options: Array
  },
  provide: function provide() {
    var $xeBreadcrumb = this;
    return {
      $xeBreadcrumb: $xeBreadcrumb
    };
  },
  data: function data() {
    var xID = _xeUtils.default.uniqueId();
    var reactData = {};
    return {
      xID: xID,
      reactData: reactData
    };
  },
  computed: Object.assign({}, {}),
  methods: {
    //
    // Method
    //
    dispatchEvent: function dispatchEvent(type, params, evnt) {
      var $xeBreadcrumb = this;
      $xeBreadcrumb.$emit(type, (0, _ui.createEvent)(evnt, {
        $breadcrumb: $xeBreadcrumb
      }, params));
    },
    handleClickLink: function handleClickLink(evnt, option) {
      var $xeBreadcrumb = this;
      $xeBreadcrumb.dispatchEvent('click', {
        option: option
      }, evnt);
    },
    //
    // Render
    //
    renderItems: function renderItems(h) {
      var $xeBreadcrumb = this;
      var props = $xeBreadcrumb;
      var options = props.options;
      if (options && options.length) {
        return options.map(function (item) {
          return h(_breadcrumbItem.default, {
            props: {
              title: item.title,
              routerLink: item.routerLink
            }
          });
        });
      }
      return [];
    },
    renderVN: function renderVN(h) {
      var $xeBreadcrumb = this;
      var slots = $xeBreadcrumb.$scopedSlots;
      var defaultSlot = slots.default;
      return h('div', {
        ref: 'refElem',
        class: 'vxe-breadcrumb'
      }, defaultSlot ? defaultSlot({}) : $xeBreadcrumb.renderItems(h));
    }
  },
  render: function render(h) {
    return this.renderVN(h);
  }
});
/* define-vxe-component end */