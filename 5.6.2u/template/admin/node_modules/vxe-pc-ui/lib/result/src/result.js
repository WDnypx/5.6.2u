"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _comp = require("../../ui/src/comp");
var _xeUtils = _interopRequireDefault(require("xe-utils"));
var _ui = require("../../ui");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var _default = exports.default = /* define-vxe-component start */(0, _comp.defineVxeComponent)({
  name: 'VxeResult',
  props: {
    imageUrl: String,
    imageStyle: Object,
    icon: String,
    type: [String, Number],
    status: [String, Number],
    title: [String, Number],
    content: [String, Number]
  },
  data: function data() {
    var xID = _xeUtils.default.uniqueId();
    var reactData = {};
    return {
      xID: xID,
      reactData: reactData
    };
  },
  methods: {
    //
    // Method
    //
    dispatchEvent: function dispatchEvent(type, params, evnt) {
      var $xeResult = this;
      $xeResult.$emit(type, (0, _ui.createEvent)(evnt, {
        $result: $xeResult
      }, params));
    },
    //
    // Render
    //
    renderVN: function renderVN(h) {
      var $xeResult = this;
      var props = $xeResult;
      var slots = $xeResult.$scopedSlots;
      var imageUrl = props.imageUrl,
        imageStyle = props.imageStyle,
        icon = props.icon,
        title = props.title,
        type = props.type,
        content = props.content;
      var status = props.status || type;
      var slotExtra = slots.extra;
      return h('div', {
        ref: 'refElem',
        class: ['vxe-result', _defineProperty({}, "theme--".concat(status), status)]
      }, [h('div', {
        class: 'vxe-result--inner'
      }, [imageUrl ? h('div', {
        class: 'vxe-result--img-wrapper'
      }, [h('img', {
        attrs: {
          src: imageUrl
        },
        style: imageStyle
      })]) : h('div', {
        class: 'vxe-result--icon-wrapper'
      }, [h('i', {
        class: [icon, type ? (0, _ui.getIcon)()["RESULT_".concat(type).toLocaleUpperCase()] : '']
      })]), h('div', {
        class: 'vxe-result--title-wrapper'
      }, "".concat(title || '')), h('div', {
        class: 'vxe-result--content-wrapper'
      }, "".concat(content || '')), slotExtra ? h('div', {
        class: 'vxe-result--extra-wrapper'
      }, slotExtra({})) : (0, _ui.renderEmptyElement)($xeResult)])]);
    }
  },
  render: function render(h) {
    return this.renderVN(h);
  }
});
/* define-vxe-component end */