Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _comp=require("../../ui/src/comp"),_xeUtils=_interopRequireDefault(require("xe-utils")),_utils=require("../../ui/src/utils"),_ui=require("../../ui");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _defineProperty(e,t,i){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"==_typeof(e)?e:e+""}function _toPrimitive(e,t){if("object"!=_typeof(e)||!e)return e;var i=e[Symbol.toPrimitive];if(void 0===i)return("string"===t?String:Number)(e);i=i.call(e,t||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}var _default2=exports.default=(0,_comp.defineVxeComponent)({name:"VxeCheckbox",mixins:[_ui.globalMixins.sizeMixin],props:{value:[String,Number,Boolean],label:{type:[String,Number],default:null},indeterminate:Boolean,title:[String,Number],checkedValue:{type:[String,Number,Boolean],default:!0},uncheckedValue:{type:[String,Number,Boolean],default:!1},content:[String,Number],disabled:{type:Boolean,default:null},size:{type:String,default:function(){return(0,_ui.getConfig)().checkbox.size||(0,_ui.getConfig)().size}}},inject:{$xeForm:{default:null},formItemInfo:{from:"xeFormItemInfo",default:null},$xeCheckboxGroup:{default:null}},data:function(){return{xID:_xeUtils.default.uniqueId(),reactData:{}}},computed:Object.assign(Object.assign({},{}),{computeIsChecked:function(){var e=this,t=this.$xeCheckboxGroup;return t?_xeUtils.default.includes(t.value,e.label):e.value===e.checkedValue},computeIsDisabled:function(){var e,t=this,i=t.$xeCheckboxGroup,n=t.disabled,t=t.computeIsChecked;if(null===n&&i)return e=i.computeIsDisabled,i=i.computeIsMaximize,e||i&&!t;return n}}),methods:{dispatchEvent:function(e,t,i){this.$emit(e,(0,_ui.createEvent)(i,{$checkbox:this},t))},emitModel:function(e){var t=this,i=t._events;t.$emit("input",e),i&&i.modelValue?t.$emit("modelValue",e):t.$emit("model-value",e)},changeEvent:function(e){var t,i=this,n=i.$xeCheckboxGroup,o=i.$xeForm,r=i.formItemInfo,u=i.checkedValue;i.computeIsDisabled||(u={checked:t=e.target.checked,value:t=t?u:i.uncheckedValue,label:i.label},n?n.handleChecked(u,e):(i.emitModel(t),i.dispatchEvent("change",u,e),o&&r&&o.triggerItemEvent(e,r.itemConfig.field,t)))},renderVN:function(e){var t=this,i=t,n=t.$scopedSlots,o=i.label,r=t.computeSize,u=t.computeIsDisabled,l=t.computeIsChecked,c=!l&&i.indeterminate;return e("label",{key:o,class:["vxe-checkbox",_defineProperty(_defineProperty(_defineProperty(_defineProperty({},"size--".concat(r),r),"is--indeterminate",c),"is--disabled",u),"is--checked",l)],attrs:{title:i.title}},[e("input",{class:"vxe-checkbox--input",domProps:{checked:l},attrs:{type:"checkbox",disabled:u},on:{change:t.changeEvent}}),e("span",{class:["vxe-checkbox--icon",c?(0,_ui.getIcon)().CHECKBOX_INDETERMINATE:l?(0,_ui.getIcon)().CHECKBOX_CHECKED:(0,_ui.getIcon)().CHECKBOX_UNCHECKED]}),e("span",{class:"vxe-checkbox--label"},n.default?n.default({}):(0,_utils.getFuncText)(i.content))])}},render:function(e){return this.renderVN(e)}});