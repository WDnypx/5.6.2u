"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _comp = require("../../ui/src/comp");
var _ui = require("../../ui");
var _xeUtils = _interopRequireDefault(require("xe-utils"));
var _util = require("./util");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
var _default = exports.default = /* define-vxe-component start */(0, _comp.defineVxeComponent)({
  name: 'VxeOptgroup',
  mixins: [_ui.globalMixins.sizeMixin],
  props: {
    label: {
      type: [String, Number, Boolean],
      default: ''
    },
    visible: {
      type: Boolean,
      default: null
    },
    className: [String, Function],
    disabled: Boolean
  },
  inject: {
    $xeSelect: {
      default: null
    }
  },
  provide: function provide() {
    var $xeOptgroup = this;
    return {
      $xeOptgroup: $xeOptgroup
    };
  },
  data: function data() {
    var xID = _xeUtils.default.uniqueId();
    var reactData = {};
    var optionConfig = {};
    return {
      xID: xID,
      reactData: reactData,
      optionConfig: optionConfig
    };
  },
  computed: Object.assign({}, {}),
  methods: {
    //
    // Method
    //
    dispatchEvent: function dispatchEvent(type, params, evnt) {
      var $xeOptgroup = this;
      $xeOptgroup.$emit(type, (0, _ui.createEvent)(evnt, {
        $optgroup: $xeOptgroup
      }, params));
    },
    //
    // Render
    //
    renderVN: function renderVN(h) {
      var $xeOptgroup = this;
      var slots = $xeOptgroup.$scopedSlots;
      var defaultSlot = slots.default;
      return h('div', {
        ref: 'elem'
      }, defaultSlot ? defaultSlot({}) : []);
    }
  },
  created: function created() {
    var $xeOptgroup = this;
    var props = $xeOptgroup;
    var slots = $xeOptgroup.$scopedSlots;
    var $xeSelect = $xeOptgroup.$xeSelect;
    var optionConfig = (0, _util.createOption)($xeSelect, props);
    optionConfig.slots = slots;
    $xeOptgroup.optionConfig = optionConfig;
    (0, _util.watchOption)($xeOptgroup, optionConfig);
  },
  mounted: function mounted() {
    var $xeOptgroup = this;
    var optionConfig = $xeOptgroup.optionConfig;
    var $xeSelect = $xeOptgroup.$xeSelect;
    var el = $xeOptgroup.$refs.elem;
    (0, _util.assembleOption)($xeSelect, el, optionConfig);
  },
  beforeDestroy: function beforeDestroy() {
    var $xeOptgroup = this;
    var optionConfig = $xeOptgroup.optionConfig;
    var $xeSelect = $xeOptgroup.$xeSelect;
    (0, _util.destroyOption)($xeSelect, optionConfig);
  },
  render: function render(h) {
    return this.renderVN(h);
  }
});
/* define-vxe-component end */