Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _comp=require("../../ui/src/comp"),_ui=require("../../ui"),_vn=require("../../ui/src/vn"),_xeUtils=_interopRequireDefault(require("xe-utils"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _defineProperty(e,t,i){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"==_typeof(e)?e:e+""}function _toPrimitive(e,t){if("object"!=_typeof(e)||!e)return e;var i=e[Symbol.toPrimitive];if(void 0===i)return("string"===t?String:Number)(e);i=i.call(e,t||"default");if("object"!=_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}var _default2=exports.default=(0,_comp.defineVxeComponent)({name:"VxeLoading",mixins:[_ui.globalMixins.sizeMixin],props:{value:Boolean,icon:{type:String,default:function(){return(0,_ui.getConfig)().loading.icon}},showIcon:{type:Boolean,default:function(){return(0,_ui.getConfig)().loading.showIcon}},text:{type:String,default:function(){return(0,_ui.getConfig)().loading.text}},showText:{type:Boolean,default:function(){return(0,_ui.getConfig)().loading.showText}},status:String,size:{type:String,default:function(){return(0,_ui.getConfig)().loading.size||(0,_ui.getConfig)().size}}},data:function(){return{xID:_xeUtils.default.uniqueId(),reactData:{initialized:!1}}},computed:Object.assign(Object.assign({},{}),{computeLoadingIcon:function(){return this.icon||(0,_ui.getIcon)().LOADING},computeLoadingText:function(){var e=this.text;return _xeUtils.default.isString(e)?e:(0,_ui.getI18n)("vxe.loading.text")}}),watch:{value:function(){this.handleInit()}},methods:{dispatchEvent:function(e,t,i){this.$emit(e,(0,_ui.createEvent)(i,{$loading:this},t))},emitModel:function(e){var t=this,i=t._events;t.$emit("input",e),i&&i.modelValue?t.$emit("modelValue",e):t.$emit("model-value",e)},handleInit:function(){var e=this.reactData;e.initialized||(e.initialized=!!e.initialized)},renderVN:function(e){var t=this,i=t.$scopedSlots,n=t.value,o=t.showIcon,r=t.status,u=t.reactData.initialized,a=t.computeSize,l=i.default,c=i.text,i=i.icon,s=t.computeLoadingIcon,d=t.computeLoadingText;return u||n?e("div",{class:["vxe-loading",_defineProperty(_defineProperty(_defineProperty({},"size--".concat(a),a),"theme--".concat(r),r),"is--visible",n)]},l?[e("div",{class:"vxe-loading--wrapper"},(0,_vn.getSlotVNs)(l({})))]:[e("div",{class:"vxe-loading--chunk"},[o&&(i||s)?e("div",{class:"vxe-loading--icon"},i?(0,_vn.getSlotVNs)(i({})):[e("i",{class:s})]):e("div",{class:"vxe-loading--spinner"}),c||d?e("div",{class:"vxe-loading--text"},c?(0,_vn.getSlotVNs)(c({})):"".concat(d)):null])]):(0,_ui.renderEmptyElement)(t)}},render:function(e){return this.renderVN(e)}});