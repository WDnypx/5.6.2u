"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _comp = require("../../ui/src/comp");
var _xeUtils = _interopRequireDefault(require("xe-utils"));
var _ui = require("../../ui");
var _util = require("./util");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
var _default = exports.default = /* define-vxe-component start */(0, _comp.defineVxeComponent)({
  name: 'VxeTabPane',
  props: {
    title: [String, Number],
    name: [String, Number],
    icon: String,
    titleWidth: [String, Number],
    titleAlign: [String, Number],
    preload: Boolean,
    permissionCode: [String, Number]
  },
  inject: {
    $xeTabs: {
      default: null
    }
  },
  data: function data() {
    var xID = _xeUtils.default.uniqueId();
    var reactData = {};
    var tabConfig = {
      id: xID,
      title: '',
      name: '',
      icon: '',
      titleWidth: '',
      titleAlign: '',
      preload: false,
      permissionCode: '',
      slots: {}
    };
    return {
      xID: xID,
      reactData: reactData,
      tabConfig: tabConfig
    };
  },
  computed: Object.assign({}, {}),
  methods: {
    //
    // Method
    //
    dispatchEvent: function dispatchEvent(type, params, evnt) {
      var $xeTabPane = this;
      $xeTabPane.$emit(type, (0, _ui.createEvent)(evnt, {
        $tabPane: $xeTabPane
      }, params));
    },
    //
    // Render
    //
    renderVN: function renderVN(h) {
      return h('div', {
        ref: 'refElem'
      }, []);
    }
  },
  watch: {
    title: function title(val) {
      var $xeTabPane = this;
      var tabConfig = $xeTabPane.tabConfig;
      tabConfig.title = val;
    },
    name: function name(val) {
      var $xeTabPane = this;
      var tabConfig = $xeTabPane.tabConfig;
      tabConfig.name = val;
    },
    icon: function icon(val) {
      var $xeTabPane = this;
      var tabConfig = $xeTabPane.tabConfig;
      tabConfig.icon = val;
    },
    permissionCode: function permissionCode(val) {
      var $xeTabPane = this;
      var tabConfig = $xeTabPane.tabConfig;
      tabConfig.permissionCode = val;
    }
  },
  created: function created() {
    var $xeTabPane = this;
    var props = $xeTabPane;
    var slots = $xeTabPane.$scopedSlots;
    var tabConfig = $xeTabPane.tabConfig;
    Object.assign(tabConfig, {
      title: props.title,
      name: props.name,
      icon: props.icon,
      titleWidth: props.titleWidth,
      titleAlign: props.titleAlign,
      preload: props.preload,
      permissionCode: props.permissionCode,
      slots: slots
    });
  },
  mounted: function mounted() {
    var $xeTabPane = this;
    var slots = $xeTabPane.$scopedSlots;
    var $xeTabs = $xeTabPane.$xeTabs;
    var tabConfig = $xeTabPane.tabConfig;
    tabConfig.slots = slots;
    var elem = $xeTabPane.$refs.refElem;
    if ($xeTabs && elem) {
      (0, _util.assembleTabItem)($xeTabs, elem, tabConfig);
    }
  },
  beforeDestroy: function beforeDestroy() {
    var $xeTabPane = this;
    var tabConfig = $xeTabPane.tabConfig;
    var $xeTabs = $xeTabPane.$xeTabs;
    if ($xeTabs) {
      (0, _util.destroyTabItem)($xeTabs, tabConfig);
    }
  },
  render: function render(h) {
    return this.renderVN(h);
  }
});
/* define-vxe-component end */