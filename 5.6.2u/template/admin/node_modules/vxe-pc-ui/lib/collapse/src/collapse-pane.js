"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _comp = require("../../ui/src/comp");
var _xeUtils = _interopRequireDefault(require("xe-utils"));
var _ui = require("../../ui");
var _util = require("./util");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
var _default = exports.default = /* define-vxe-component start */(0, _comp.defineVxeComponent)({
  name: 'VxeCollapsePane',
  props: {
    title: [String, Number],
    name: [String, Number],
    icon: String,
    preload: Boolean,
    permissionCode: [String, Number]
  },
  inject: {
    $xeCollapse: {
      default: null
    }
  },
  data: function data() {
    var xID = _xeUtils.default.uniqueId();
    var reactData = {};
    var collapseConfig = {
      id: xID,
      title: '',
      name: '',
      icon: '',
      preload: false,
      permissionCode: '',
      slots: {}
    };
    return {
      xID: xID,
      reactData: reactData,
      collapseConfig: collapseConfig
    };
  },
  computed: Object.assign({}, {}),
  methods: {
    //
    // Method
    //
    dispatchEvent: function dispatchEvent(type, params, evnt) {
      var $xeCollapsePane = this;
      $xeCollapsePane.$emit(type, (0, _ui.createEvent)(evnt, {
        $collapsePane: $xeCollapsePane
      }, params));
    },
    //
    // Render
    //
    renderVN: function renderVN(h) {
      var $xeCollapsePane = this;
      var slots = $xeCollapsePane.$scopedSlots;
      var defaultSlot = slots.default;
      return h('div', {
        ref: 'refElem'
      }, defaultSlot ? defaultSlot({}) : []);
    }
  },
  watch: {
    title: function title(val) {
      var $xeCollapsePane = this;
      var collapseConfig = $xeCollapsePane.collapseConfig;
      collapseConfig.title = val;
    },
    name: function name(val) {
      var $xeCollapsePane = this;
      var collapseConfig = $xeCollapsePane.collapseConfig;
      collapseConfig.name = val;
    },
    icon: function icon(val) {
      var $xeCollapsePane = this;
      var collapseConfig = $xeCollapsePane.collapseConfig;
      collapseConfig.icon = val;
    },
    permissionCode: function permissionCode(val) {
      var $xeCollapsePane = this;
      var collapseConfig = $xeCollapsePane.collapseConfig;
      collapseConfig.permissionCode = val;
    }
  },
  created: function created() {
    var $xeCollapsePane = this;
    var props = $xeCollapsePane;
    var slots = $xeCollapsePane.$scopedSlots;
    var collapseConfig = $xeCollapsePane.collapseConfig;
    Object.assign(collapseConfig, {
      title: props.title,
      name: props.name,
      icon: props.icon,
      preload: props.preload,
      permissionCode: props.permissionCode,
      slots: slots
    });
  },
  mounted: function mounted() {
    var $xeCollapsePane = this;
    var $xeCollapse = $xeCollapsePane.$xeCollapse;
    var slots = $xeCollapsePane.$scopedSlots;
    var collapseConfig = $xeCollapsePane.collapseConfig;
    collapseConfig.slots = slots;
    var elem = $xeCollapsePane.$refs.refElem;
    if ($xeCollapse && elem) {
      (0, _util.assembleCollapseItem)($xeCollapse, elem, collapseConfig);
    }
  },
  beforeDestroy: function beforeDestroy() {
    var $xeCollapsePane = this;
    var $xeCollapse = $xeCollapsePane.$xeCollapse;
    var collapseConfig = $xeCollapsePane.collapseConfig;
    if ($xeCollapse) {
      (0, _util.destroyCollapseItem)($xeCollapse, collapseConfig);
    }
  },
  render: function render(h) {
    return this.renderVN(h);
  }
});
/* define-vxe-component end */