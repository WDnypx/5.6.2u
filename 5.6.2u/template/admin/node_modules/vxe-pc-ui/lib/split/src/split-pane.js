"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _comp = require("../../ui/src/comp");
var _ui = require("../../ui");
var _util = require("./util");
var _xeUtils = _interopRequireDefault(require("xe-utils"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
var _default2 = exports.default = /* define-vxe-component start */(0, _comp.defineVxeComponent)({
  name: 'VxeSplitPane',
  mixins: [_ui.globalMixins.sizeMixin],
  props: {
    name: [Number, String],
    width: [Number, String],
    height: [Number, String],
    showAction: Boolean,
    minWidth: {
      type: [Number, String],
      default: function _default() {
        return null;
      }
    },
    minHeight: {
      type: [Number, String],
      default: function _default() {
        return null;
      }
    }
  },
  inject: {
    $xeSplit: {
      default: null
    }
  },
  provide: function provide() {
    var $xeSplitItem = this;
    return {
      $xeSplitItem: $xeSplitItem
    };
  },
  data: function data() {
    var xID = _xeUtils.default.uniqueId();
    var reactData = {};
    var paneConfig = {
      id: xID,
      name: '',
      width: 0,
      height: 0,
      minWidth: 0,
      minHeight: 0,
      showAction: false,
      isVisible: true,
      isExpand: true,
      renderWidth: 0,
      resizeWidth: 0,
      foldWidth: 0,
      renderHeight: 0,
      resizeHeight: 0,
      foldHeight: 0,
      slots: {}
    };
    return {
      xID: xID,
      reactData: reactData,
      paneConfig: paneConfig
    };
  },
  computed: Object.assign({}, {}),
  watch: {
    name: function name(val) {
      var $xeSplitItem = this;
      var paneConfig = $xeSplitItem.paneConfig;
      paneConfig.name = val;
    },
    width: function width(val) {
      var $xeSplitItem = this;
      var paneConfig = $xeSplitItem.paneConfig;
      paneConfig.width = val;
    },
    height: function height(val) {
      var $xeSplitItem = this;
      var paneConfig = $xeSplitItem.paneConfig;
      paneConfig.height = val;
    },
    minWidth: function minWidth(val) {
      var $xeSplitItem = this;
      var paneConfig = $xeSplitItem.paneConfig;
      paneConfig.minWidth = val;
    },
    minHeight: function minHeight(val) {
      var $xeSplitItem = this;
      var paneConfig = $xeSplitItem.paneConfig;
      paneConfig.minHeight = val;
    },
    showAction: function showAction(val) {
      var $xeSplitItem = this;
      var paneConfig = $xeSplitItem.paneConfig;
      paneConfig.showAction = val;
    }
  },
  methods: {
    //
    // Method
    //
    dispatchEvent: function dispatchEvent(type, params, evnt) {
      var $xeSplitItem = this;
      $xeSplitItem.$emit(type, (0, _ui.createEvent)(evnt, {
        $splitPane: $xeSplitItem
      }, params));
    },
    //
    // Render
    //
    renderVN: function renderVN(h) {
      return h('div', {
        ref: 'refElem'
      });
    }
  },
  created: function created() {
    var $xeSplitItem = this;
    var props = $xeSplitItem;
    var slots = $xeSplitItem.$scopedSlots;
    var paneConfig = $xeSplitItem.paneConfig;
    Object.assign(paneConfig, {
      name: props.name,
      width: props.width,
      height: props.height,
      minWidth: props.minWidth,
      minHeight: props.minHeight,
      showAction: props.showAction,
      slots: slots
    });
  },
  mounted: function mounted() {
    var $xeSplitItem = this;
    var slots = $xeSplitItem.$scopedSlots;
    var paneConfig = $xeSplitItem.paneConfig;
    var $xeSplit = $xeSplitItem.$xeSplit;
    paneConfig.slots = slots;
    var elem = $xeSplitItem.$refs.refElem;
    if ($xeSplit && elem) {
      (0, _util.assembleSplitItem)($xeSplit, elem, paneConfig);
    }
  },
  beforeDestroy: function beforeDestroy() {
    var $xeSplitItem = this;
    var paneConfig = $xeSplitItem.paneConfig;
    var $xeSplit = $xeSplitItem.$xeSplit;
    if ($xeSplit) {
      (0, _util.destroySplitItem)($xeSplit, paneConfig);
    }
  },
  render: function render(h) {
    return this.renderVN(h);
  }
});
/* define-vxe-component end */