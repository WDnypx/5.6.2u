"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.VxeTable = exports.Table = void 0;
var _vue = _interopRequireDefault(require("vue"));
var _ui = require("../ui");
var _table = _interopRequireDefault(require("./src/table"));
require("./render");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
let isReg = false;
const VxeTable = exports.VxeTable = Object.assign({}, _table.default, {
  install(app) {
    if (typeof window !== 'undefined') {
      if (window.VxeTableExtendCellArea && window.VxeTableExtendCellArea.use) {
        window.VxeTableExtendCellArea.use(_ui.VxeUI);
      } else if (window.VXETableMixin) {
        _table.default.mixins.push(window.VXETableMixin);
        delete window.VXETableMixin;
      }
      if (window.VxeTableExtendPivotTable && window.VxeTableExtendPivotTable.use) {
        window.VxeTableExtendPivotTable.use(_ui.VxeUI);
      }
    }
    // 兼容老版本
    if (typeof window !== 'undefined' && window.VxeTableExtendCellArea && window.VxeTableExtendCellArea.init) {
      window.VxeTableExtendCellArea.init(_ui.VxeUI);
      delete window.VxeTableExtendCellArea;
      delete window.VXETablePro;
    } else if (typeof window !== 'undefined' && window.VXETablePro && window.VXETablePro.init) {
      window.VXETablePro.init(_ui.VxeUI);
      delete window.VXETablePro;
    }
    if (!_vue.default.prototype.$vxe) {
      _vue.default.prototype.$vxe = {
        t: _ui.VxeUI.t,
        _t: _ui.VxeUI._t
      };
    } else {
      _vue.default.prototype.$vxe.t = _ui.VxeUI.t;
      _vue.default.prototype.$vxe._t = _ui.VxeUI._t;
    }
    if (!isReg) {
      isReg = true;
      if (_ui.VxeUI.dynamicApp) {
        _ui.VxeUI.dynamicApp.component(_table.default.name, _table.default);
      }
    }
    app.component(_table.default.name, _table.default);
  }
});
_ui.VxeUI.component(_table.default);
const Table = exports.Table = VxeTable;
var _default = exports.default = VxeTable;