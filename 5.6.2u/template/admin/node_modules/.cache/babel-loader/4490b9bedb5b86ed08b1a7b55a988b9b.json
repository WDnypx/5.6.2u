{"remainingRequest":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\components\\uploadVideo2\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\components\\uploadVideo2\\index.vue","mtime":1735612792165},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\babel.config.js","mtime":1679965410000},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\.babelrc","mtime":1679965410000},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1753254258567},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1753254260598}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJEOi9wYy96bS9cdTY2MDZcdTY2MEVcdTk2MTRcdTdGRDRcdTc5RDFcdTYyODBcdTY3MDlcdTk2NTBcdTUxNkNcdTUzRjgvXHU2RTkwXHU3ODAxL0NSTUVCLUJaIHY1LjYuMigyMDI1MDYzMCkvdGVtcGxhdGUvYWRtaW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5LmpzIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJEOi9wYy96bS9cdTY2MDZcdTY2MEVcdTk2MTRcdTdGRDRcdTc5RDFcdTYyODBcdTY3MDlcdTk2NTBcdTUxNkNcdTUzRjgvXHU2RTkwXHU3ODAxL0NSTUVCLUJaIHY1LjYuMigyMDI1MDYzMCkvdGVtcGxhdGUvYWRtaW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5LmpzIjsKaW1wb3J0IF9yZWdlbmVyYXRvciBmcm9tICJEOi9wYy96bS9cdTY2MDZcdTY2MEVcdTk2MTRcdTdGRDRcdTc5RDFcdTYyODBcdTY3MDlcdTk2NTBcdTUxNkNcdTUzRjgvXHU2RTkwXHU3ODAxL0NSTUVCLUJaIHY1LjYuMigyMDI1MDYzMCkvdGVtcGxhdGUvYWRtaW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3JlZ2VuZXJhdG9yLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L3BjL3ptL1x1NjYwNlx1NjYwRVx1OTYxNFx1N0ZENFx1NzlEMVx1NjI4MFx1NjcwOVx1OTY1MFx1NTE2Q1x1NTNGOC9cdTZFOTBcdTc4MDEvQ1JNRUItQlogdjUuNi4yKDIwMjUwNjMwKS90ZW1wbGF0ZS9hZG1pbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnB1c2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5yZWR1Y2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuaXRlcmF0b3IuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5pdGVyYXRvci5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5pdGVyYXRvci5maW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuaXRlcmF0b3IuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5pdGVyYXRvci5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5pdGVyYXRvci5yZWR1Y2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5qc29uLnN0cmluZ2lmeS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRlc3QuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCB7IGdldENhdGVnb3J5TGlzdEFwaSwgY3JlYXRlQXBpLCBmaWxlTGlzdEFwaSwgY2F0ZWdvcnlFZGl0QXBpLCBtb3ZlQXBpLCBmaWxlVXBkYXRlQXBpLCB2aWRlb0Nsb3VkVXBsb2FkIH0gZnJvbSAnQC9hcGkvdXBsb2FkUGljdHVyZXMnOwppbXBvcnQgeyBwcm9kdWN0R2V0VGVtcEtleXNBcGksIHVwbG9hZFR5cGUgYXMgX3VwbG9hZFR5cGUgfSBmcm9tICdAL2FwaS9wcm9kdWN0JzsKaW1wb3J0IHsgdXBsb2FkQnlQaWVjZXMgfSBmcm9tICdAL3V0aWxzL3VwbG9hZCc7IC8v5byV5YWldXBsb2FkQnlQaWVjZXPmlrnms5UKCmltcG9ydCBTZXR0aW5nIGZyb20gJ0Avc2V0dGluZyc7CmltcG9ydCB7IGdldENvb2tpZXMgfSBmcm9tICdAL2xpYnMvdXRpbCc7CmltcG9ydCB1cGxvYWRJbWcgZnJvbSAnQC9jb21wb25lbnRzL3VwbG9hZEltZyc7CmltcG9ydCB7IFZ1ZVRyZWVMaXN0LCBUcmVlLCBUcmVlTm9kZSB9IGZyb20gJ3Z1ZS10cmVlLWxpc3QnOwppbXBvcnQgeyBpc1ZpZGVvVXBsb2FkIH0gZnJvbSAnQC91dGlscyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAndXBsb2FkUGljdHVyZXMnLAogIGNvbXBvbmVudHM6IHsKICAgIHVwbG9hZEltZzogdXBsb2FkSW1nLAogICAgVnVlVHJlZUxpc3Q6IFZ1ZVRyZWVMaXN0CiAgfSwKICBwcm9wczogewogICAgaXNDaG9pY2U6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnb25lJwogICAgfSwKICAgIGlzUGFnZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGlzSWZyYW1lOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgZ3JpZEJ0bjogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCiAgICBncmlkUGljOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIGlzU2hvdzogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDEKICAgIH0sCiAgICBwYWdlTGltaXQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAwCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc3BpblNob3c6IGZhbHNlLAogICAgICBmaWxlVXJsOiBTZXR0aW5nLmFwaUJhc2VVUkwgKyAnL2ZpbGUvdXBsb2FkJywKICAgICAgbW9kYWxQaWM6IGZhbHNlLAogICAgICB0cmVlRGF0YTogW10sCiAgICAgIHRyZWVEYXRhMjogW10sCiAgICAgIHBpY3RydWVMaXN0OiBbXSwKICAgICAgdXBsb2FkRGF0YToge30sCiAgICAgIC8vIOS4iuS8oOWPguaVsAogICAgICBjaGVja1BpY0xpc3Q6IFtdLAogICAgICB1cGxvYWROYW1lOiB7CiAgICAgICAgbmFtZTogJycsCiAgICAgICAgYWxsOiAxLAogICAgICAgIHR5cGU6IDEKICAgICAgfSwKICAgICAgZm9ybVZhbGlkYXRlOiB7CiAgICAgICAgaWQ6IDAKICAgICAgfSwKICAgICAgRnJvbURhdGE6IG51bGwsCiAgICAgIHRyZWVJZDogJycsCiAgICAgIGlzSnVkZ2U6IGZhbHNlLAogICAgICBidXR0b25Qcm9wczogewogICAgICAgIHR5cGU6ICdkZWZhdWx0JywKICAgICAgICBzaXplOiAnc21hbGwnCiAgICAgIH0sCiAgICAgIGZpbGVEYXRhOiB7CiAgICAgICAgcGlkOiAwLAogICAgICAgIHJlYWxfbmFtZTogJycsCiAgICAgICAgcGFnZTogMSwKICAgICAgICBsaW1pdDogdGhpcy5wYWdlTGltaXQgfHwgMTgsCiAgICAgICAgdHlwZTogMQogICAgICB9LAogICAgICB0b3RhbDogMCwKICAgICAgcGlkczogMCwKICAgICAgbGlzdDogW10sCiAgICAgIG1vZGFsVGl0bGVTczogJycsCiAgICAgIGlzU2hvd1BpYzogZmFsc2UsCiAgICAgIGhlYWRlcjoge30sCiAgICAgIGlkczogW10sCiAgICAgIC8vIOmAieS4remZhOS7tueahGlk6ZuG5ZCICiAgICAgIGxpZXRTdHlsZTogJ2xpc3QnLAogICAgICBpbWFnZVVybDogJycsCiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBtdWx0aXBsZVNlbGVjdGlvbjogW10sCiAgICAgIHBpY21hcmdpbjogJzVweCcsCiAgICAgIC8v6buY6K6k6Led56a75Y+z6L656Led56a7CiAgICAgIHZpZGVvTW9kYWw6IGZhbHNlLAogICAgICB1cGxvYWRfdHlwZTogJycsCiAgICAgIHVwbG9hZDogewogICAgICAgIHZpZGVvSW5nOiBmYWxzZSAvLyDmmK/lkKbmmL7npLrov5vluqbmnaHvvJsKICAgICAgfQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICBpZiAodGhpcy5pc1BhZ2UpIHsKICAgICAgdmFyIGhhbmcgPSBwYXJzZUludCgoZG9jdW1lbnQuYm9keS5jbGllbnRIZWlnaHQgLSB0aGlzLiRyZWZzLmltZ0xpc3RCb3guY2xpZW50SGVpZ2h0IC0gMzI1KSAvIDE4MCk7IC8v6K6h566X6KGM5pWwCiAgICAgIHZhciBjb2wgPSBwYXJzZUludCh0aGlzLiRyZWZzLmltZ0xpc3RCb3guY2xpZW50V2lkdGggLyAxNTYpOyAvL+iuoeeul+WIl+aVsAogICAgICB0aGlzLmZpbGVEYXRhLmxpbWl0ID0gY29sICogaGFuZzsgLy/orqHnrpfliIbpobXmlbDph48KICAgICAgdGhpcy5waWNtYXJnaW4gPSBwYXJzZUludCh0aGlzLiRyZWZzLmltZ0xpc3RCb3guY2xpZW50V2lkdGggLSBjb2wgKiAxNDYpIC8gKDIgKiBjb2wpICsgJ3B4JzsgLy/lubPlnYfliIbluIPorqHnrpdtYXJnaW7ot53nprsKICAgIH0KICAgIHRoaXMuZ2V0VG9rZW4oKTsKICAgIHRoaXMudXBsb2FkVHlwZSgpOwogICAgdGhpcy5nZXRMaXN0KCk7CiAgICB0aGlzLmdldEZpbGVMaXN0KCk7CiAgfSwKICBtZXRob2RzOiBfZGVmaW5lUHJvcGVydHkoX2RlZmluZVByb3BlcnR5KF9kZWZpbmVQcm9wZXJ0eShfZGVmaW5lUHJvcGVydHkoX2RlZmluZVByb3BlcnR5KF9kZWZpbmVQcm9wZXJ0eShfZGVmaW5lUHJvcGVydHkoewogICAgLy/ojrflj5bop4bpopHkuIrkvKDnsbvlnosKICAgIHVwbG9hZFR5cGU6IGZ1bmN0aW9uIHVwbG9hZFR5cGUoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgIF91cGxvYWRUeXBlKCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMudXBsb2FkX3R5cGUgPSByZXMuZGF0YS51cGxvYWRfdHlwZTsKICAgICAgfSk7CiAgICB9LAogICAgYmVmb3JlVXBsb2FkOiBmdW5jdGlvbiBiZWZvcmVVcGxvYWQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwogICAgICB0aGlzLnVwbG9hZERhdGEgPSB7fTsKICAgICAgdmFyIHByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgIF90aGlzMi4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICAgICAgcmVzb2x2ZSh0cnVlKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIHJldHVybiBwcm9taXNlOwogICAgfSwKICAgIHpoX3VwbG9hZEZpbGU6IGZ1bmN0aW9uIHpoX3VwbG9hZEZpbGUoKSB7CiAgICAgIHRoaXMuJHJlZnMucmVmaWQuY2xpY2soKTsKICAgIH0sCiAgICB6aF91cGxvYWRGaWxlX2NoYW5nZTogZnVuY3Rpb24gemhfdXBsb2FkRmlsZV9jaGFuZ2UoZXZmaWxlKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIGlmIChldmZpbGUudGFyZ2V0LmZpbGVzWzBdLnR5cGUgIT09ICd2aWRlby9tcDQnKSB7CiAgICAgICAgcmV0dXJuIHRoYXQuJG1lc3NhZ2UuZXJyb3IoJ+WPquiDveS4iuS8oG1wNOaWh+S7ticpOwogICAgICB9CiAgICAgIGNvbnNvbGUubG9nKCcxMTEnKTsKICAgICAgZGVidWdnZXI7CiAgICAgIHZhciB0eXBlcyA9IHsKICAgICAgICBrZXk6IGV2ZmlsZS50YXJnZXQuZmlsZXNbMF0ubmFtZSwKICAgICAgICBjb250ZW50VHlwZTogZXZmaWxlLnRhcmdldC5maWxlc1swXS50eXBlCiAgICAgIH07CiAgICAgIHByb2R1Y3RHZXRUZW1wS2V5c0FwaSh0eXBlcykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzLCBldmZpbGUsIHJlcy5kYXRhLnR5cGUpOwogICAgICAgIHRoYXQuJHZpZGVvQ2xvdWQudmlkZW9VcGxvYWQoewogICAgICAgICAgdHlwZTogcmVzLmRhdGEudHlwZSwKICAgICAgICAgIGV2ZmlsZTogZXZmaWxlLAogICAgICAgICAgcmVzOiByZXMsCiAgICAgICAgICB1cGxvYWRpbmc6IGZ1bmN0aW9uIHVwbG9hZGluZyhzdGF0dXMsIHByb2dyZXNzKSB7CiAgICAgICAgICAgIHRoYXQudXBsb2FkLnZpZGVvSW5nID0gc3RhdHVzOwogICAgICAgICAgfQogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgdmlkZW9DbG91ZFVwbG9hZCh7CiAgICAgICAgICAgIHBpZDogX3RoaXMzLnRyZWVJZCB8fCAwLAogICAgICAgICAgICB2aWRlb19wYXRoOiByZXMudXJsLAogICAgICAgICAgICB2aWRlb19uYW1lOiBldmZpbGUudGFyZ2V0LmZpbGVzWzBdLm5hbWUKICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICBfdGhpczMuZ2V0RmlsZUxpc3QoKTsKICAgICAgICAgIH0pOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIHRoYXQuJG1lc3NhZ2UuZXJyb3IocmVzKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgdmlkZW9TYXZlVG9Vcmw6IGZ1bmN0aW9uIHZpZGVvU2F2ZVRvVXJsKGZpbGUpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CiAgICAgIGlmIChpc1ZpZGVvVXBsb2FkKGZpbGUpKSB1cGxvYWRCeVBpZWNlcyh7CiAgICAgICAgZmlsZTogZmlsZSwKICAgICAgICAvLyDop4bpopHlrp7kvZMKICAgICAgICBwaWVjZVNpemU6IDMsCiAgICAgICAgLy8g5YiG54mH5aSn5bCPCiAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gc3VjY2VzcyhkYXRhKSB7CiAgICAgICAgICBfdGhpczQucHJvZ3Jlc3MgPSAxMDA7CiAgICAgICAgICB2aWRlb0Nsb3VkVXBsb2FkKHsKICAgICAgICAgICAgcGlkOiBfdGhpczQudHJlZUlkIHx8IDAsCiAgICAgICAgICAgIHZpZGVvX3BhdGg6IGRhdGEuZmlsZV9wYXRoLAogICAgICAgICAgICB2aWRlb19uYW1lOiBmaWxlLm5hbWUKICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICBfdGhpczQuZ2V0RmlsZUxpc3QoKTsKICAgICAgICAgICAgX3RoaXM0LiRtZXNzYWdlLnN1Y2Nlc3MoJ+inhumikeS4iuS8oOaIkOWKnycpOwogICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICBlcnJvcjogZnVuY3Rpb24gZXJyb3IoZSkgewogICAgICAgICAgX3RoaXM0LiRtZXNzYWdlLmVycm9yKGUubXNnKTsKICAgICAgICB9LAogICAgICAgIHVwbG9hZGluZzogZnVuY3Rpb24gdXBsb2FkaW5nKGNodW5rLCBhbGxDaHVuaykgewogICAgICAgICAgX3RoaXM0LnZpZGVvSW5nID0gdHJ1ZTsKICAgICAgICAgIHZhciBzdCA9IE1hdGguZmxvb3IoY2h1bmsgLyBhbGxDaHVuayAqIDEwMCk7CiAgICAgICAgICBfdGhpczQucHJvZ3Jlc3MgPSBzdDsKICAgICAgICB9CiAgICAgIH0pOwogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAogICAgcmFkaW9DaGFuZ2U6IGZ1bmN0aW9uIHJhZGlvQ2hhbmdlKCkgewogICAgICB0aGlzLmluaXREYXRhKCk7CiAgICB9LAogICAgbG9va0ltZzogZnVuY3Rpb24gbG9va0ltZyhpdGVtKSB7CiAgICAgIHRoaXMuaW1hZ2VVcmwgPSBpdGVtLmF0dF9kaXI7CiAgICAgIHRoaXMudmlkZW9Nb2RhbCA9IHRydWU7CiAgICB9LAogICAgb25EZWw6IGZ1bmN0aW9uIG9uRGVsKG5vZGUpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CiAgICAgIHZhciBtZXRob2QgPSBub2RlLmNhdGVfaWQgPyByb3V0ZURlbCA6IHJvdXRlQ2F0ZURlbDsKICAgICAgdGhpcy4kbXNnYm94KHsKICAgICAgICB0aXRsZTogJ+aPkOekuicsCiAgICAgICAgbWVzc2FnZTogJ+aYr+WQpuehruWumuWIoOmZpOivpeiPnOWNlScsCiAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogdHJ1ZSwKICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywKICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+WIoOmZpCcsCiAgICAgICAgaWNvbkNsYXNzOiAnZWwtaWNvbi13YXJuaW5nJywKICAgICAgICBjb25maXJtQnV0dG9uQ2xhc3M6ICdidG4tY3VzdG9tLWNhbmNlbCcKICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgbWV0aG9kKG5vZGUuaWQpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgX3RoaXM1LiRtZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICBub2RlLnJlbW92ZSgpOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICAgIF90aGlzNS4kbWVzc2FnZS5lcnJvcihlcnIpOwogICAgICAgIH0pOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7fSk7CiAgICB9LAogICAgb25DaGFuZ2VOYW1lOiBmdW5jdGlvbiBvbkNoYW5nZU5hbWUocGFyYW1zKSB7CiAgICAgIHZhciBfdGhpczYgPSB0aGlzOwogICAgICBpZiAocGFyYW1zLmV2ZW50VHlwZSA9PSAnYmx1cicpIHsKICAgICAgICB2YXIgZGF0YSA9IHsKICAgICAgICAgIG5hbWU6IHBhcmFtcy5uZXdOYW1lLAogICAgICAgICAgaWQ6IHBhcmFtcy5pZAogICAgICAgIH07CiAgICAgICAgaW50ZXJmYWNlRWRpdE5hbWUoZGF0YSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBfdGhpczYuJG1lc3NhZ2Uuc3VjY2VzcyhyZXMubXNnKTsKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICBfdGhpczYuJG1lc3NhZ2UuZXJyb3IoZXJyKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIC8vIOa3u+WKoOWIhuexuwogICAgYWRkU29ydDogZnVuY3Rpb24gYWRkU29ydCgpIHsKICAgICAgdGhpcy5hcHBlbmQoewogICAgICAgIGlkOiB0aGlzLnRyZWVJZCB8fCAwCiAgICAgIH0pOwogICAgfSwKICAgIC8vIOeCueWHu+iPnOWNlQogICAgY2xpY2tNZW51OiBmdW5jdGlvbiBjbGlja01lbnUoZGF0YSwgbmFtZSkgewogICAgICBpZiAobmFtZSA9PSAxKSB7CiAgICAgICAgdGhpcy5hcHBlbmQoZGF0YSk7CiAgICAgIH0gZWxzZSBpZiAobmFtZSA9PSAyKSB7CiAgICAgICAgdGhpcy5lZGl0UGljKGRhdGEpOwogICAgICB9IGVsc2UgaWYgKG5hbWUgPT0gMykgewogICAgICAgIHRoaXMucmVtb3ZlKGRhdGEsICfliIbnsbsnKTsKICAgICAgfQogICAgfSwKICAgIHVwbG9hZFN1Y2Nlc3M6IGZ1bmN0aW9uIHVwbG9hZFN1Y2Nlc3MoKSB7CiAgICAgIHRoaXMuZmlsZURhdGEucGFnZSA9IDE7CiAgICAgIHRoaXMuaW5pdERhdGEoKTsKICAgICAgdGhpcy5nZXRGaWxlTGlzdCgpOwogICAgfSwKICAgIHVwbG9hZE1vZGFsOiBmdW5jdGlvbiB1cGxvYWRNb2RhbCgpIHsKICAgICAgdGhpcy4kcmVmcy51cGxvYWQudXBsb2FkTW9kYWwgPSB0cnVlOwogICAgfSwKICAgIGVudGVyTW91c2U6IGZ1bmN0aW9uIGVudGVyTW91c2UoaXRlbSkgewogICAgICBpdGVtLnJlYWxOYW1lID0gIWl0ZW0ucmVhbE5hbWU7CiAgICB9LAogICAgZW50ZXJMZWF2ZTogZnVuY3Rpb24gZW50ZXJMZWF2ZShpdGVtKSB7CiAgICAgIGl0ZW0uaXNTaG93RWRpdCA9ICFpdGVtLmlzU2hvd0VkaXQ7CiAgICB9LAogICAgLy8g5LiK5Lyg5aS06YOodG9rZW4KICAgIGdldFRva2VuOiBmdW5jdGlvbiBnZXRUb2tlbigpIHsKICAgICAgdGhpcy5oZWFkZXJbJ0F1dGhvcmktemF0aW9uJ10gPSAnQmVhcmVyICcgKyBnZXRDb29raWVzKCd0b2tlbicpOwogICAgfSwKICAgIG1vdmVJbWc6IGZ1bmN0aW9uIG1vdmVJbWcoc3RhdHVzKSB7CiAgICAgIGlmICghc3RhdHVzKSB7CiAgICAgICAgdGhpcy5nZXRNb3ZlKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKCF0aGlzLmlkcy50b1N0cmluZygpKSB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLndhcm5pbmcoJ+ivt+WFiOmAieaLqeinhumikScpOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIHNlYXJjaEltZzogZnVuY3Rpb24gc2VhcmNoSW1nKCkge30sCiAgICAvLyDnp7vliqjliIbnsbsKICAgIGdldE1vdmU6IGZ1bmN0aW9uIGdldE1vdmUoKSB7CiAgICAgIHZhciBfdGhpczcgPSB0aGlzOwogICAgICB2YXIgZGF0YSA9IHsKICAgICAgICBwaWQ6IHRoaXMucGlkcywKICAgICAgICBpbWFnZXM6IHRoaXMuaWRzLnRvU3RyaW5nKCkKICAgICAgfTsKICAgICAgaWYgKCFkYXRhLmltYWdlcykgcmV0dXJuOwogICAgICBtb3ZlQXBpKGRhdGEpLnRoZW4oLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3IoKS5tKGZ1bmN0aW9uIF9jYWxsZWUocmVzKSB7CiAgICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yKCkudyhmdW5jdGlvbiAoX2NvbnRleHQpIHsKICAgICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQubikgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzNy4kbWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgX3RoaXM3LmdldEZpbGVMaXN0KCk7CiAgICAgICAgICAgICAgICBfdGhpczcucGlkcyA9IDA7CiAgICAgICAgICAgICAgICBfdGhpczcuY2hlY2tQaWNMaXN0ID0gW107CiAgICAgICAgICAgICAgICBfdGhpczcuaWRzID0gW107CiAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmEoMik7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sIF9jYWxsZWUpOwogICAgICAgIH0pKTsKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgIH07CiAgICAgIH0oKSkuY2F0Y2goZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzNy4kbWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgfSk7CiAgICB9LAogICAgZGVsSW1nOiBmdW5jdGlvbiBkZWxJbWcoaWQpIHsKICAgICAgdmFyIF90aGlzOCA9IHRoaXM7CiAgICAgIHZhciBpZHMgPSB7CiAgICAgICAgaWRzOiBpZAogICAgICB9OwogICAgICB2YXIgZGVsZnJvbURhdGEgPSB7CiAgICAgICAgdGl0bGU6ICfliKDpmaTpgInkuK3op4bpopEnLAogICAgICAgIHVybDogImZpbGUvZmlsZS9kZWxldGUiLAogICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgIGlkczogaWRzCiAgICAgIH07CiAgICAgIHRoaXMuJG1vZGFsU3VyZShkZWxmcm9tRGF0YSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXM4LiRtZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgX3RoaXM4LmdldEZpbGVMaXN0KCk7CiAgICAgICAgX3RoaXM4LmNoZWNrUGljTGlzdCA9IFtdOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXM4LiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDliKDpmaTop4bpopEKICAgIGVkaXRQaWNMaXN0OiBmdW5jdGlvbiBlZGl0UGljTGlzdChpZCkgewogICAgICB2YXIgX3RoaXM5ID0gdGhpczsKICAgICAgdmFyIGlkcyA9IHsKICAgICAgICBpZHM6IGlkIHx8IHRoaXMuaWRzLnRvU3RyaW5nKCkKICAgICAgfTsKICAgICAgdmFyIGRlbGZyb21EYXRhID0gewogICAgICAgIHRpdGxlOiAn5Yig6Zmk6YCJ5Lit6KeG6aKRJywKICAgICAgICB1cmw6ICJmaWxlL2ZpbGUvZGVsZXRlIiwKICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICBpZHM6IGlkcwogICAgICB9OwogICAgICB0aGlzLiRtb2RhbFN1cmUoZGVsZnJvbURhdGEpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzOS4kbWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICAgIF90aGlzOS5nZXRGaWxlTGlzdCgpOwogICAgICAgIF90aGlzOS5pbml0RGF0YSgpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXM5LiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICB9KTsKICAgIH0sCiAgICBpbml0RGF0YTogZnVuY3Rpb24gaW5pdERhdGEoKSB7CiAgICAgIHRoaXMuY2hlY2tQaWNMaXN0ID0gW107CiAgICAgIHRoaXMuaWRzID0gW107CiAgICAgIHRoaXMubXVsdGlwbGVTZWxlY3Rpb24gPSBbXTsKICAgIH0sCiAgICAvLyDpvKDmoIfnp7vlhaUg56e75Ye6CiAgICBvbk1vdXNlT3ZlcjogZnVuY3Rpb24gb25Nb3VzZU92ZXIocm9vdCwgbm9kZSwgZGF0YSkgewogICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICBkYXRhLmZsYWcgPSAhZGF0YS5mbGFnOwogICAgICBpZiAoZGF0YS5mbGFnMikgewogICAgICAgIGRhdGEuZmxhZzIgPSBmYWxzZTsKICAgICAgfQogICAgfSwKICAgIC8vIOeCueWHu+agkQogICAgYXBwZW5kQnRuOiBmdW5jdGlvbiBhcHBlbmRCdG4oZGF0YSkgewogICAgICB0aGlzLnRyZWVJZCA9IGRhdGEuaWQ7CiAgICAgIHRoaXMuZmlsZURhdGEucGFnZSA9IDE7CiAgICAgIHRoaXMuZ2V0RmlsZUxpc3QoKTsKICAgIH0sCiAgICAvLyDngrnlh7vmt7vliqAKICAgIGFwcGVuZDogZnVuY3Rpb24gYXBwZW5kKGRhdGEpIHsKICAgICAgdGhpcy50cmVlSWQgPSBkYXRhLmlkOwogICAgICB0aGlzLmdldEZyb20oKTsKICAgIH0sCiAgICAvLyDliKDpmaTliIbnsbsKICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKGRhdGEsIHRpdCkgewogICAgICB2YXIgX3RoaXMwID0gdGhpczsKICAgICAgdGhpcy50aXRzID0gdGl0OwogICAgICB2YXIgZGVsZnJvbURhdGEgPSB7CiAgICAgICAgdGl0bGU6ICfliKDpmaQgWyAnICsgZGF0YS50aXRsZSArICcgXSAnICsgJ+WIhuexuycsCiAgICAgICAgdXJsOiAiZmlsZS9jYXRlZ29yeS8iLmNvbmNhdChkYXRhLmlkKSwKICAgICAgICBtZXRob2Q6ICdERUxFVEUnLAogICAgICAgIGlkczogJycKICAgICAgfTsKICAgICAgdGhpcy4kbW9kYWxTdXJlKGRlbGZyb21EYXRhKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczAuJG1lc3NhZ2Uuc3VjY2VzcyhyZXMubXNnKTsKICAgICAgICBfdGhpczAuZ2V0TGlzdCgpOwogICAgICAgIF90aGlzMC5jaGVja1BpY0xpc3QgPSBbXTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzMC4kbWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g57yW6L6R5qCR6KGo5Y2VCiAgICBlZGl0UGljOiBmdW5jdGlvbiBlZGl0UGljKGRhdGEpIHsKICAgICAgdmFyIF90aGlzMSA9IHRoaXM7CiAgICAgIHRoaXMuJG1vZGFsRm9ybShjYXRlZ29yeUVkaXRBcGkoZGF0YS5pZCkpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfdGhpczEuZ2V0TGlzdCgpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDmkJzntKLliIbnsbsKICAgIGNoYW5nZVBhZ2U6IGZ1bmN0aW9uIGNoYW5nZVBhZ2UoKSB7CiAgICAgIHRoaXMuZ2V0TGlzdCgnc2VhcmNoJyk7CiAgICB9LAogICAgLy8g5YiG57G75YiX6KGo5qCRCiAgICBnZXRMaXN0OiBmdW5jdGlvbiBnZXRMaXN0KHR5cGUpIHsKICAgICAgdmFyIF90aGlzMTAgPSB0aGlzOwogICAgICB2YXIgZGF0YSA9IHsKICAgICAgICB0aXRsZTogJ+WFqOmDqOinhumikScsCiAgICAgICAgaWQ6ICcnLAogICAgICAgIHBpZDogMAogICAgICB9OwogICAgICBnZXRDYXRlZ29yeUxpc3RBcGkodGhpcy51cGxvYWROYW1lKS50aGVuKC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoLyojX19QVVJFX18qL19yZWdlbmVyYXRvcigpLm0oZnVuY3Rpb24gX2NhbGxlZTIocmVzKSB7CiAgICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yKCkudyhmdW5jdGlvbiAoX2NvbnRleHQyKSB7CiAgICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0Mi5uKSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWYgKHR5cGUgIT09ICdzZWFyY2gnKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzMTAudHJlZURhdGEyID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShfdG9Db25zdW1hYmxlQXJyYXkocmVzLmRhdGEubGlzdCkpKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHJlcy5kYXRhLmxpc3QudW5zaGlmdChkYXRhKTsKICAgICAgICAgICAgICAgIF90aGlzMTAudHJlZURhdGEgPSByZXMuZGF0YS5saXN0OwogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYSgyKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICAgIH0pKTsKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94MikgewogICAgICAgICAgcmV0dXJuIF9yZWYyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgfTsKICAgICAgfSgpKS5jYXRjaChmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMxMC4kbWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgfSk7CiAgICB9LAogICAgbG9hZERhdGE6IGZ1bmN0aW9uIGxvYWREYXRhKGl0ZW0sIGNhbGxiYWNrKSB7CiAgICAgIGdldENhdGVnb3J5TGlzdEFwaSh7CiAgICAgICAgcGlkOiBpdGVtLmlkCiAgICAgIH0pLnRoZW4oLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICB2YXIgX3JlZjMgPSBfYXN5bmNUb0dlbmVyYXRvcigvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yKCkubShmdW5jdGlvbiBfY2FsbGVlMyhyZXMpIHsKICAgICAgICAgIHZhciBkYXRhOwogICAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvcigpLncoZnVuY3Rpb24gKF9jb250ZXh0MykgewogICAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDMubikgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGRhdGEgPSByZXMuZGF0YS5saXN0OwogICAgICAgICAgICAgICAgY2FsbGJhY2soZGF0YSk7CiAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hKDIpOwogICAgICAgICAgICB9CiAgICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgICAgfSkpOwogICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gzKSB7CiAgICAgICAgICByZXR1cm4gX3JlZjMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICB9OwogICAgICB9KCkpLmNhdGNoKGZ1bmN0aW9uIChyZXMpIHt9KTsKICAgIH0sCiAgICBhZGRGbGFnOiBmdW5jdGlvbiBhZGRGbGFnKHRyZWVkYXRhKSB7CiAgICAgIHZhciBfdGhpczExID0gdGhpczsKICAgICAgdHJlZWRhdGEubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgX3RoaXMxMS4kc2V0KGl0ZW0sICdmbGFnJywgZmFsc2UpOwogICAgICAgIF90aGlzMTEuJHNldChpdGVtLCAnZmxhZzInLCBmYWxzZSk7CiAgICAgICAgaXRlbS5jaGlsZHJlbiAmJiBfdGhpczExLmFkZEZsYWcoaXRlbS5jaGlsZHJlbik7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOaWsOW7uuWIhuexuwogICAgYWRkOiBmdW5jdGlvbiBhZGQoKSB7CiAgICAgIHRoaXMudHJlZUlkID0gMDsKICAgICAgdGhpcy5nZXRGcm9tKCk7CiAgICB9LAogICAgc2VhcmNoRmlsZTogZnVuY3Rpb24gc2VhcmNoRmlsZSgpIHsKICAgICAgdGhpcy5maWxlRGF0YS5wYWdlID0gMTsKICAgICAgdGhpcy5nZXRGaWxlTGlzdCgpOwogICAgfSwKICAgIC8vIOaWh+S7tuWIl+ihqAogICAgZ2V0RmlsZUxpc3Q6IGZ1bmN0aW9uIGdldEZpbGVMaXN0KCkgewogICAgICB2YXIgX3RoaXMxMiA9IHRoaXM7CiAgICAgIHRoaXMuZmlsZURhdGEucGlkID0gdGhpcy50cmVlSWQ7CiAgICAgIGZpbGVMaXN0QXBpKHRoaXMuZmlsZURhdGEpLnRoZW4oLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICB2YXIgX3JlZjQgPSBfYXN5bmNUb0dlbmVyYXRvcigvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yKCkubShmdW5jdGlvbiBfY2FsbGVlNChyZXMpIHsKICAgICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3IoKS53KGZ1bmN0aW9uIChfY29udGV4dDQpIHsKICAgICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQ0Lm4pIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICByZXMuZGF0YS5saXN0LmZvckVhY2goZnVuY3Rpb24gKGVsKSB7CiAgICAgICAgICAgICAgICAgIGVsLmlzU2VsZWN0ID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgIGVsLmlzRWRpdCA9IGZhbHNlOwogICAgICAgICAgICAgICAgICBlbC5pc1Nob3dFZGl0ID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgIGVsLnJlYWxOYW1lID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgIGVsLm51bSA9IDA7CiAgICAgICAgICAgICAgICAgIF90aGlzMTIuZWRpdE5hbWUoZWwpOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBfdGhpczEyLnBpY3RydWVMaXN0ID0gcmVzLmRhdGEubGlzdDsKICAgICAgICAgICAgICAgIGlmIChfdGhpczEyLnBpY3RydWVMaXN0Lmxlbmd0aCkgewogICAgICAgICAgICAgICAgICBfdGhpczEyLmlzU2hvd1BpYyA9IGZhbHNlOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgX3RoaXMxMi5pc1Nob3dQaWMgPSB0cnVlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgX3RoaXMxMi50b3RhbCA9IHJlcy5kYXRhLmNvdW50OwogICAgICAgICAgICAgICAgX3RoaXMxMi4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAvL+ehruS/nWRvbeWKoOi9veWujOavlQogICAgICAgICAgICAgICAgICAvLyB0aGlzLnNob3dTZWxlY3REYXRhKCk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmEoMik7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgICB9KSk7CiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChfeDQpIHsKICAgICAgICAgIHJldHVybiBfcmVmNC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgIH07CiAgICAgIH0oKSkuY2F0Y2goZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzMTIuJG1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgIH0pOwogICAgfSwKICAgIHNob3dTZWxlY3REYXRhOiBmdW5jdGlvbiBzaG93U2VsZWN0RGF0YSgpIHsKICAgICAgdmFyIF90aGlzMTMgPSB0aGlzOwogICAgICBpZiAodGhpcy5tdWx0aXBsZVNlbGVjdGlvbi5sZW5ndGggPiAwKSB7CiAgICAgICAgLy8g5Yik5pat5piv5ZCm5a2Y5Zyo5Yu+6YCJ6L+H55qE5pWw5o2uCiAgICAgICAgdGhpcy5waWN0cnVlTGlzdC5mb3JFYWNoKGZ1bmN0aW9uIChyb3cpIHsKICAgICAgICAgIC8vIOiOt+WPluaVsOaNruWIl+ihqOaOpeWPo+ivt+axguWIsOeahOaVsOaNrgogICAgICAgICAgX3RoaXMxMy5tdWx0aXBsZVNlbGVjdGlvbi5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgIC8vIOWLvumAieWIsOeahOaVsOaNrgogICAgICAgICAgICBpZiAocm93LmF0dF9pZCA9PT0gaXRlbS5hdHRfaWQpIHsKICAgICAgICAgICAgICAvLyB0aGlzLiRyZWZzLnRhYmxlLnRvZ2dsZVJvd1NlbGVjdGlvbihpdGVtLCB0cnVlKTsgLy8g6Iul5pyJ6YeN5ZCI77yM5YiZ5Zue5pi+6K+l5p2h5pWw5o2uCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgZ2V0Um93S2V5OiBmdW5jdGlvbiBnZXRSb3dLZXkocm93KSB7CiAgICAgIHJldHVybiByb3cuYXR0X2lkOwogICAgfSwKICAgIC8v5a+56LGh5pWw57uE5Y676YeN77ybCiAgICB1bmlxdWU6IGZ1bmN0aW9uIHVuaXF1ZShhcnIpIHsKICAgICAgdmFyIHJlc3VsdCA9IGFyci5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgY3VycikgewogICAgICAgIHZhciB4ID0gYWNjLmZpbmQoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHJldHVybiBpdGVtLmF0dF9pZCA9PT0gY3Vyci5hdHRfaWQ7CiAgICAgICAgfSk7CiAgICAgICAgaWYgKCF4KSB7CiAgICAgICAgICByZXR1cm4gYWNjLmNvbmNhdChbY3Vycl0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gYWNjOwogICAgICAgIH0KICAgICAgfSwgW10pOwogICAgICByZXR1cm4gcmVzdWx0OwogICAgfSwKICAgIC8vICDpgInkuK3mn5DkuIDooYwKICAgIGhhbmRsZVNlbGVjdFJvdzogZnVuY3Rpb24gaGFuZGxlU2VsZWN0Um93KHNlbGVjdGlvbikgewogICAgICB2YXIgYXJyID0gdGhpcy51bmlxdWUoc2VsZWN0aW9uKTsKICAgICAgdmFyIHVuaXF1ZUFyciA9IFtdOwogICAgICB2YXIgaWRzID0gW107CiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdmFyIGl0ZW0gPSBhcnJbaV07CiAgICAgICAgaWYgKCFpZHMuaW5jbHVkZXMoaXRlbS5hdHRfaWQpKSB7CiAgICAgICAgICB1bmlxdWVBcnIucHVzaChpdGVtKTsKICAgICAgICAgIGlkcy5wdXNoKGl0ZW0uYXR0X2lkKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgdGhpcy5pZHMgPSBpZHM7CiAgICAgIHRoaXMubXVsdGlwbGVTZWxlY3Rpb24gPSB1bmlxdWVBcnI7CiAgICB9LAogICAgcGFnZUNoYW5nZTogZnVuY3Rpb24gcGFnZUNoYW5nZShpbmRleCkgewogICAgICB0aGlzLmZpbGVEYXRhLnBhZ2UgPSBpbmRleDsKICAgICAgdGhpcy5nZXRGaWxlTGlzdCgpOwogICAgICB0aGlzLmNoZWNrUGljTGlzdCA9IFtdOwogICAgfSwKICAgIC8vIOaWsOW7uuWIhuexu+ihqOWNlQogICAgZ2V0RnJvbTogZnVuY3Rpb24gZ2V0RnJvbSgpIHsKICAgICAgdmFyIF90aGlzMTQgPSB0aGlzOwogICAgICB0aGlzLiRtb2RhbEZvcm0oY3JlYXRlQXBpKHsKICAgICAgICBpZDogdGhpcy50cmVlSWQsCiAgICAgICAgdHlwZTogMQogICAgICB9KSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMxNC5nZXRMaXN0KCk7CiAgICAgIH0pOwogICAgfQogIH0sICJiZWZvcmVVcGxvYWQiLCBmdW5jdGlvbiBiZWZvcmVVcGxvYWQoZmlsZSkgewogICAgdmFyIF90aGlzMTUgPSB0aGlzOwogICAgLy8gaWYgKGZpbGUuc2l6ZSA+IDIwOTcxNTIpIHsKICAgIC8vICAgdGhpcy4kbWVzc2FnZS5lcnJvcihmaWxlLm5hbWUgKyAi5aSn5bCP6LaF6L+HMk0hIik7CiAgICAvLyB9IGVsc2UKICAgIGlmICghL2ltYWdlXC9cdysvLnRlc3QoZmlsZS50eXBlKSkgewogICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfor7fkuIrkvKDku6VqcGfjgIFqcGVn44CBcG5n562J57uT5bC+55qE6KeG6aKR5paH5Lu2Jyk7IC8vRmlsZUV4dC50b0xvd2VyQ2FzZSgpCiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICAgIHRoaXMudXBsb2FkRGF0YSA9IHsKICAgICAgcGlkOiB0aGlzLnRyZWVJZAogICAgfTsKICAgIHZhciBwcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgX3RoaXMxNS4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICAgIHJlc29sdmUodHJ1ZSk7CiAgICAgIH0pOwogICAgfSk7CiAgICByZXR1cm4gcHJvbWlzZTsKICB9KSwgImhhbmRsZVN1Y2Nlc3MiLCBmdW5jdGlvbiBoYW5kbGVTdWNjZXNzKHJlcywgZmlsZSwgZmlsZUxpc3QpIHsKICAgIGlmIChyZXMuc3RhdHVzID09PSAyMDApIHsKICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICB0aGlzLmZpbGVEYXRhLnBhZ2UgPSAxOwogICAgICB0aGlzLmdldEZpbGVMaXN0KCk7CiAgICB9IGVsc2UgewogICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgfQogIH0pLCAiY2FuY2VsIiwgZnVuY3Rpb24gY2FuY2VsKCkgewogICAgdGhpcy4kZW1pdCgnY2hhbmdlQ2FuY2VsJyk7CiAgfSksICJjaGFuZ0ltYWdlIiwgZnVuY3Rpb24gY2hhbmdJbWFnZShpdGVtLCBpbmRleCwgcm93KSB7CiAgICB2YXIgX3RoaXMxNiA9IHRoaXM7CiAgICB2YXIgYWN0aXZlSW5kZXggPSAwOwogICAgaWYgKCFpdGVtLmlzU2VsZWN0KSB7CiAgICAgIGl0ZW0uaXNTZWxlY3QgPSB0cnVlOwogICAgICB0aGlzLmNoZWNrUGljTGlzdC5wdXNoKGl0ZW0pOwogICAgfSBlbHNlIHsKICAgICAgaXRlbS5pc1NlbGVjdCA9IGZhbHNlOwogICAgICB0aGlzLmNoZWNrUGljTGlzdC5tYXAoZnVuY3Rpb24gKGVsLCBpbmRleCkgewogICAgICAgIGlmIChlbC5hdHRfaWQgPT0gaXRlbS5hdHRfaWQpIHsKICAgICAgICAgIGFjdGl2ZUluZGV4ID0gaW5kZXg7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy5jaGVja1BpY0xpc3Quc3BsaWNlKGFjdGl2ZUluZGV4LCAxKTsKICAgIH0KICAgIHRoaXMuaWRzID0gW107CiAgICB0aGlzLmNoZWNrUGljTGlzdC5tYXAoZnVuY3Rpb24gKGl0ZW0sIGkpIHsKICAgICAgX3RoaXMxNi5pZHMucHVzaChpdGVtLmF0dF9pZCk7CiAgICB9KTsKICAgIHRoaXMucGljdHJ1ZUxpc3QubWFwKGZ1bmN0aW9uIChlbCwgaSkgewogICAgICBpZiAoZWwuaXNTZWxlY3QpIHsKICAgICAgICBfdGhpczE2LmNoZWNrUGljTGlzdC5maWx0ZXIoZnVuY3Rpb24gKGVsMiwgaikgewogICAgICAgICAgaWYgKGVsLmF0dF9pZCA9PSBlbDIuYXR0X2lkKSB7CiAgICAgICAgICAgIGVsLm51bSA9IGogKyAxOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIGVsLm51bSA9IDA7CiAgICAgIH0KICAgIH0pOwogIH0pLCAiY2hlY2tQaWNzIiwgZnVuY3Rpb24gY2hlY2tQaWNzKCkgewogICAgY29uc29sZS5sb2codGhpcy5jaGVja1BpY0xpc3QsICd0aGlzLmNoZWNrUGljTGlzdCcsIHRoaXMuaXNDaG9pY2UpOwogICAgaWYgKHRoaXMuaXNDaG9pY2UgPT09ICdvbmUnKSB7CiAgICAgIGlmICh0aGlzLmNoZWNrUGljTGlzdC5sZW5ndGggPiAxKSByZXR1cm4gdGhpcy4kbWVzc2FnZS53YXJuaW5nKCfmnIDlpJrlj6rog73pgInkuIDlvKDop4bpopEnKTsKICAgICAgdGhpcy4kZW1pdCgnZ2V0VmlkZW8nLCB0aGlzLmNoZWNrUGljTGlzdFswXS5hdHRfZGlyKTsKICAgIH0gZWxzZSB7CiAgICAgIHZhciBtYXhMZW5ndGggPSB0aGlzLiRyb3V0ZS5xdWVyeS5tYXhMZW5ndGg7CiAgICAgIGlmIChtYXhMZW5ndGggIT0gdW5kZWZpbmVkICYmIHRoaXMuY2hlY2tQaWNMaXN0Lmxlbmd0aCA+IE51bWJlcihtYXhMZW5ndGgpKSByZXR1cm4gdGhpcy4kbWVzc2FnZS53YXJuaW5nKCfmnIDlpJrlj6rog73pgIknICsgbWF4TGVuZ3RoICsgJ+W8oOinhumikScpOwogICAgICB0aGlzLiRlbWl0KCdnZXRQaWNEJywgdGhpcy5jaGVja1BpY0xpc3QpOwogICAgICB0aGlzLiRlbWl0KCdnZXRWaWRlbycsIHRoaXMuY2hlY2tQaWNMaXN0KTsKICAgIH0KICB9KSwgImVkaXROYW1lIiwgZnVuY3Rpb24gZWRpdE5hbWUoaXRlbSkgewogICAgdmFyIGl0ID0gaXRlbS5yZWFsX25hbWUuc3BsaXQoJy4nKTsKICAgIHZhciBpdDEgPSBpdFsxXSA9PSB1bmRlZmluZWQgPyBbXSA6IGl0WzFdOwogICAgdmFyIGxlbiA9IGl0WzBdLmxlbmd0aCArIGl0MS5sZW5ndGg7CiAgICBpdGVtLmVkaXROYW1lID0gbGVuIDwgMTAgPyBpdGVtLnJlYWxfbmFtZSA6IGl0ZW0ucmVhbF9uYW1lLnN1YnN0cigwLCA0KSArICcuLi4nICsgaXRlbS5yZWFsX25hbWUuc3Vic3RyKC01LCA1KTsKICB9KSwgImJpbmRUeHQiLCBmdW5jdGlvbiBiaW5kVHh0KGl0ZW0pIHsKICAgIHZhciBfdGhpczE3ID0gdGhpczsKICAgIGlmIChpdGVtLnJlYWxfbmFtZSA9PSAnJykgewogICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfor7floavlhpnlhoXlrrknKTsKICAgIH0KICAgIGZpbGVVcGRhdGVBcGkoaXRlbS5hdHRfaWQsIHsKICAgICAgcmVhbF9uYW1lOiBpdGVtLnJlYWxfbmFtZQogICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIF90aGlzMTcuZWRpdE5hbWUoaXRlbSk7CiAgICAgIGl0ZW0uaXNFZGl0ID0gZmFsc2U7CiAgICAgIF90aGlzMTcuJG1lc3NhZ2Uuc3VjY2VzcyhyZXMubXNnKTsKICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICBfdGhpczE3LiRtZXNzYWdlLmVycm9yKGVycm9yLm1zZyk7CiAgICB9KTsKICB9KQp9Ow=="},{"version":3,"names":["getCategoryListApi","createApi","fileListApi","categoryEditApi","moveApi","fileUpdateApi","videoCloudUpload","productGetTempKeysApi","uploadType","uploadByPieces","Setting","getCookies","uploadImg","VueTreeList","Tree","TreeNode","isVideoUpload","name","components","props","isChoice","type","String","default","isPage","Boolean","isIframe","gridBtn","Object","gridPic","isShow","Number","pageLimit","data","spinShow","fileUrl","apiBaseURL","modalPic","treeData","treeData2","pictrueList","uploadData","checkPicList","uploadName","all","formValidate","id","FromData","treeId","isJudge","buttonProps","size","fileData","pid","real_name","page","limit","total","pids","list","modalTitleSs","isShowPic","header","ids","lietStyle","imageUrl","loading","multipleSelection","picmargin","videoModal","upload_type","upload","videoIng","mounted","hang","parseInt","document","body","clientHeight","$refs","imgListBox","col","clientWidth","getToken","getList","getFileList","methods","_defineProperty","_this","then","res","beforeUpload","_this2","promise","Promise","resolve","$nextTick","zh_uploadFile","refid","click","zh_uploadFile_change","evfile","_this3","that","target","files","$message","error","console","log","types","key","contentType","$videoCloud","videoUpload","uploading","status","progress","video_path","url","video_name","catch","videoSaveToUrl","file","_this4","pieceSize","success","file_path","e","msg","chunk","allChunk","st","Math","floor","radioChange","initData","lookImg","item","att_dir","onDel","node","_this5","method","cate_id","routeDel","routeCateDel","$msgbox","title","message","showCancelButton","cancelButtonText","confirmButtonText","iconClass","confirmButtonClass","remove","err","onChangeName","params","_this6","eventType","newName","interfaceEditName","addSort","append","clickMenu","editPic","uploadSuccess","uploadModal","enterMouse","realName","enterLeave","isShowEdit","moveImg","getMove","toString","warning","searchImg","_this7","images","_ref","_asyncToGenerator","_regenerator","m","_callee","w","_context","n","a","_x","apply","arguments","delImg","_this8","delfromData","$modalSure","editPicList","_this9","onMouseOver","root","event","preventDefault","flag","flag2","appendBtn","getFrom","tit","_this0","tits","concat","_this1","$modalForm","changePage","_this10","_ref2","_callee2","_context2","JSON","parse","stringify","_toConsumableArray","unshift","_x2","loadData","callback","_ref3","_callee3","_context3","_x3","addFlag","treedata","_this11","map","$set","children","add","searchFile","_this12","_ref4","_callee4","_context4","forEach","el","isSelect","isEdit","num","editName","length","count","_x4","showSelectData","_this13","row","att_id","getRowKey","unique","arr","result","reduce","acc","curr","x","find","handleSelectRow","selection","uniqueArr","i","includes","push","pageChange","index","_this14","_this15","test","handleSuccess","fileList","cancel","$emit","changImage","_this16","activeIndex","splice","filter","el2","j","checkPics","maxLength","$route","query","undefined","it","split","it1","len","substr","bindTxt","_this17"],"sources":["src/components/uploadVideo2/index.vue"],"sourcesContent":["<template>\n  <div class=\"Modal\">\n    <div class=\"colLeft\">\n      <div class=\"Nav\">\n        <div class=\"trees-coadd\">\n          <div v-if=\"isPage\" class=\"tree_tit\" v-db-click @click=\"addSort\">\n            <i class=\"el-icon-circle-plus\"></i>\n            添加分类\n          </div>\n          <div class=\"scollhide\">\n            <div :class=\"isPage ? 'tree' : 'isTree'\">\n              <el-tree\n                :data=\"treeData\"\n                node-key=\"id\"\n                default-expand-all\n                highlight-current\n                :expand-on-click-node=\"false\"\n                @node-click=\"appendBtn\"\n                :current-node-key=\"treeId\"\n              >\n                <span class=\"custom-tree-node\" slot-scope=\"{ data }\">\n                  <!-- <span class=\"file-name\">\n                    <i class=\"icon el-icon-folder-remove\"></i>\n                    {{ data.title }}</span\n                  > -->\n                  <!-- <span class=\"file-name\">\n                    <img v-if=\"!data.pid\" class=\"icon\" src=\"@/assets/images/file.jpg\" />\n                    <span class=\"name line1\">{{ data.title }}</span>\n                  </span> -->\n                  <div class=\"file-name\">\n                    <img v-if=\"!data.pid\" class=\"icon\" src=\"@/assets/images/file.jpg\" />\n                    <el-tooltip class=\"item\" effect=\"dark\" :content=\"data.title\" placement=\"top\">\n                      <div class=\"text line1\">\n                        {{ data.title }}\n                      </div>\n                    </el-tooltip>\n                  </div>\n                  <span>\n                    <el-dropdown @command=\"(command) => clickMenu(data, command)\">\n                      <i class=\"el-icon-more el-icon--right\"></i>\n                      <template slot=\"dropdown\">\n                        <el-dropdown-menu>\n                          <el-dropdown-item command=\"1\">新增分类</el-dropdown-item>\n                          <el-dropdown-item v-if=\"data.id\" command=\"2\">编辑分类</el-dropdown-item>\n                          <el-dropdown-item v-if=\"data.id\" command=\"3\">删除</el-dropdown-item>\n                        </el-dropdown-menu>\n                      </template>\n                    </el-dropdown>\n                  </span>\n                </span>\n              </el-tree>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"conter\">\n        <div class=\"bnt acea-row row-middle df-jcsb\">\n          <div class=\"\">\n            <el-button\n              class=\"mr14\"\n              type=\"primary\"\n              :disabled=\"checkPicList.length === 0\"\n              v-db-click\n              @click=\"checkPics\"\n              size=\"small\"\n              v-if=\"isShow !== 0\"\n              >使用选中视频</el-button\n            >\n            <!-- <el-button size=\"small\" type=\"primary\" v-db-click @click=\"uploadModal\">上传视频</el-button> -->\n            <el-button\n              class=\"mr14\"\n              v-if=\"upload_type !== '1'\"\n              type=\"primary\"\n              size=\"small\"\n              v-db-click\n              @click=\"zh_uploadFile\"\n              >上传视频</el-button\n            >\n            <el-upload\n              v-if=\"upload_type === '1'\"\n              :show-file-list=\"false\"\n              :action=\"fileUrl\"\n              :before-upload=\"videoSaveToUrl\"\n              :data=\"uploadData\"\n              :headers=\"header\"\n              :multiple=\"true\"\n              style=\"display: inline-block\"\n              accept=\".mp4\"\n            >\n              <el-button class=\"mr14\" size=\"small\" type=\"primary\">上传视频</el-button>\n            </el-upload>\n            <el-button\n              class=\"mr14\"\n              size=\"small\"\n              :disabled=\"!checkPicList.length && !ids.length\"\n              v-db-click\n              @click.stop=\"editPicList()\"\n              >删除视频</el-button\n            >\n            <el-cascader\n              v-model=\"pids\"\n              placeholder=\"视频移动至\"\n              style=\"width: 150px\"\n              class=\"treeSel\"\n              :options=\"treeData2\"\n              :props=\"{ checkStrictly: true, emitPath: false, label: 'title', value: 'id' }\"\n              clearable\n              size=\"small\"\n              @visible-change=\"moveImg\"\n            ></el-cascader>\n          </div>\n          <div>\n            <el-input\n              class=\"mr14\"\n              v-model=\"fileData.real_name\"\n              placeholder=\"请输入视频名\"\n              size=\"small\"\n              style=\"width: 150px\"\n              @change=\"searchFile\"\n            >\n              <i slot=\"suffix\" class=\"el-icon-search el-input__icon\" v-db-click @click=\"getFileList\"></i>\n            </el-input>\n            <el-radio-group class=\"mr10\" v-if=\"isPage\" v-model=\"lietStyle\" size=\"small\" @input=\"radioChange\">\n              <el-radio-button label=\"list\">\n                <i class=\"el-icon-menu\"></i>\n              </el-radio-button>\n              <el-radio-button label=\"table\">\n                <!-- <i class=\"el-icon-files\"></i> -->\n                <span class=\"iconfont iconliebiao\"></span>\n              </el-radio-button>\n            </el-radio-group>\n          </div>\n        </div>\n        <div class=\"pictrueList acea-row\" :class=\"{ 'is-modal': !isPage }\">\n          <div v-if=\"lietStyle == 'list'\" style=\"width: 100%\">\n            <div v-show=\"isShowPic\" class=\"imagesNo\">\n              <i class=\"el-icon-picture\" style=\"color: #dbdbdb; font-size: 60px\"></i>\n              <span class=\"imagesNo_sp\">视频库为空</span>\n            </div>\n            <div ref=\"imgListBox\" class=\"acea-row mb10\">\n              <div\n                class=\"pictrueList_pic mb10 mt10\"\n                v-for=\"(item, index) in pictrueList\"\n                :key=\"index\"\n                :style=\"{ margin: picmargin }\"\n                @mouseenter=\"enterMouse(item)\"\n                @mouseleave=\"enterMouse(item)\"\n              >\n                <p class=\"number\" v-if=\"item.num > 0\">\n                  <el-badge :value=\"item.num\" type=\"primary\">\n                    <a href=\"#\" class=\"demo-badge\"></a>\n                  </el-badge>\n                </p>\n                <div\n                  class=\"img\"\n                  :class=\"item.isSelect ? 'on' : ''\"\n                  v-db-click\n                  @click.stop=\"changImage(item, index, pictrueList)\"\n                >\n                  <video :src=\"item.satt_dir\" />\n                </div>\n\n                <div class=\"operate-item\" @mouseenter=\"enterLeave(item)\" @mouseleave=\"enterLeave(item)\">\n                  <p v-if=\"!item.isEdit\">\n                    {{ item.editName }}\n                  </p>\n                  <el-input size=\"small\" type=\"text\" v-model=\"item.real_name\" v-else @blur=\"bindTxt(item)\" />\n                  <div class=\"operate-height\">\n                    <span class=\"operate mr10\" v-db-click @click=\"editPicList(item.att_id)\" v-if=\"item.isShowEdit\"\n                      >删除</span\n                    >\n                    <span class=\"operate mr10\" v-db-click @click=\"item.isEdit = !item.isEdit\" v-if=\"item.isShowEdit\"\n                      >改名</span\n                    >\n                    <span class=\"operate\" v-db-click @click=\"lookImg(item)\" v-if=\"item.isShowEdit\">查看</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <el-table\n            v-if=\"lietStyle == 'table'\"\n            ref=\"table\"\n            :data=\"pictrueList\"\n            v-loading=\"loading\"\n            highlight-row\n            :row-key=\"getRowKey\"\n            @selection-change=\"handleSelectRow\"\n            no-data-text=\"暂无数据\"\n            no-filtered-data-text=\"暂无筛选结果\"\n          >\n            <el-table-column type=\"selection\" width=\"60\" :reserve-selection=\"true\"> </el-table-column>\n            <el-table-column label=\"视频名称\" min-width=\"190\">\n              <template slot-scope=\"scope\">\n                <div class=\"df-aic\">\n                  <div class=\"tabBox_img mr10\">\n                    <video :src=\"scope.row.att_dir\" @click=\"lookImg(scope.row)\" />\n                  </div>\n                  <span v-if=\"!scope.row.isEdit\" class=\"line2 real-name\">{{ scope.row.real_name }}</span>\n                  <el-input\n                    size=\"small\"\n                    type=\"text\"\n                    style=\"width: 90%\"\n                    v-model=\"scope.row.real_name\"\n                    v-else\n                    @blur=\"bindTxt(scope.row)\"\n                  />\n                </div>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"上传时间\" min-width=\"100\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.time }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" fixed=\"right\" width=\"170\">\n              <template slot-scope=\"scope\">\n                <a v-db-click @click=\"editPicList(scope.row)\">删除</a>\n                <el-divider direction=\"vertical\"></el-divider>\n                <a v-db-click @click=\"scope.row.isEdit = !scope.row.isEdit\">{{\n                  scope.row.isEdit ? '确定' : '重命名'\n                }}</a>\n                <el-divider direction=\"vertical\"></el-divider>\n                <a v-db-click @click=\"lookImg(scope.row)\">查看</a>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n        <div class=\"footer acea-row row-right\">\n          <pagination\n            v-if=\"total\"\n            :total=\"total\"\n            :pageCount=\"9\"\n            layout=\"total, prev, pager, next\"\n            :page.sync=\"fileData.page\"\n            @pagination=\"pageChange\"\n            :limit.sync=\"fileData.limit\"\n          ></pagination>\n        </div>\n      </div>\n    </div>\n    <uploadImg\n      ref=\"upload\"\n      :isPage=\"isPage\"\n      :isIframe=\"isIframe\"\n      :categoryId=\"treeId\"\n      :categoryList=\"treeData\"\n      @uploadSuccess=\"uploadSuccess\"\n    ></uploadImg>\n    <el-dialog title=\"查看视频\" append-to-body :visible.sync=\"videoModal\" width=\"1024px\">\n      <video :src=\"imageUrl\" controls />\n    </el-dialog>\n    <input type=\"file\" ref=\"refid\" style=\"display: none\" @change=\"zh_uploadFile_change\" />\n  </div>\n</template>\n\n<script>\nimport {\n  getCategoryListApi,\n  createApi,\n  fileListApi,\n  categoryEditApi,\n  moveApi,\n  fileUpdateApi,\n  videoCloudUpload,\n} from '@/api/uploadPictures';\nimport { productGetTempKeysApi, uploadType } from '@/api/product';\nimport { uploadByPieces } from '@/utils/upload'; //引入uploadByPieces方法\n\nimport Setting from '@/setting';\nimport { getCookies } from '@/libs/util';\nimport uploadImg from '@/components/uploadImg';\nimport { VueTreeList, Tree, TreeNode } from 'vue-tree-list';\nimport { isVideoUpload } from '@/utils';\nexport default {\n  name: 'uploadPictures',\n  components: { uploadImg, VueTreeList },\n  props: {\n    isChoice: {\n      type: String,\n      default: 'one',\n    },\n    isPage: {\n      type: Boolean,\n      default: false,\n    },\n    isIframe: {\n      type: Boolean,\n      default: false,\n    },\n    gridBtn: {\n      type: Object,\n      default: null,\n    },\n    gridPic: {\n      type: Object,\n      default: null,\n    },\n    isShow: {\n      type: Number,\n      default: 1,\n    },\n    pageLimit: {\n      type: Number,\n      default: 0,\n    },\n  },\n  data() {\n    return {\n      spinShow: false,\n      fileUrl: Setting.apiBaseURL + '/file/upload',\n      modalPic: false,\n      treeData: [],\n      treeData2: [],\n      pictrueList: [],\n      uploadData: {}, // 上传参数\n      checkPicList: [],\n      uploadName: {\n        name: '',\n        all: 1,\n        type: 1,\n      },\n      formValidate: { id: 0 },\n      FromData: null,\n      treeId: '',\n      isJudge: false,\n      buttonProps: {\n        type: 'default',\n        size: 'small',\n      },\n      fileData: {\n        pid: 0,\n        real_name: '',\n        page: 1,\n        limit: this.pageLimit || 18,\n        type: 1,\n      },\n      total: 0,\n      pids: 0,\n      list: [],\n      modalTitleSs: '',\n      isShowPic: false,\n      header: {},\n      ids: [], // 选中附件的id集合\n      lietStyle: 'list',\n      imageUrl: '',\n      loading: false,\n      multipleSelection: [],\n      picmargin: '5px', //默认距离右边距离\n      videoModal: false,\n      upload_type: '',\n      upload: {\n        videoIng: false, // 是否显示进度条；\n      },\n    };\n  },\n  mounted() {\n    if (this.isPage) {\n      let hang = parseInt((document.body.clientHeight - this.$refs.imgListBox.clientHeight - 325) / 180); //计算行数\n      let col = parseInt(this.$refs.imgListBox.clientWidth / 156); //计算列数\n      this.fileData.limit = col * hang; //计算分页数量\n      this.picmargin = parseInt(this.$refs.imgListBox.clientWidth - col * 146) / (2 * col) + 'px'; //平均分布计算margin距离\n    }\n    this.getToken();\n    this.uploadType();\n    this.getList();\n    this.getFileList();\n  },\n  methods: {\n    //获取视频上传类型\n    uploadType() {\n      uploadType().then((res) => {\n        this.upload_type = res.data.upload_type;\n      });\n    },\n    beforeUpload() {\n      this.uploadData = {};\n      let promise = new Promise((resolve) => {\n        this.$nextTick(function () {\n          resolve(true);\n        });\n      });\n      return promise;\n    },\n    zh_uploadFile() {\n      this.$refs.refid.click();\n    },\n    zh_uploadFile_change(evfile) {\n      let that = this;\n      if (evfile.target.files[0].type !== 'video/mp4') {\n        return that.$message.error('只能上传mp4文件');\n      }\n      console.log('111');\n      debugger;\n      let types = {\n        key: evfile.target.files[0].name,\n        contentType: evfile.target.files[0].type,\n      };\n      productGetTempKeysApi(types).then((res) => {\n        console.log(res, evfile, res.data.type);\n        that.$videoCloud\n          .videoUpload({\n            type: res.data.type,\n            evfile: evfile,\n            res: res,\n            uploading(status, progress) {\n              that.upload.videoIng = status;\n            },\n          })\n          .then((res) => {\n            videoCloudUpload({\n              pid: this.treeId || 0,\n              video_path: res.url,\n              video_name: evfile.target.files[0].name,\n            }).then((res) => {\n              this.getFileList();\n            });\n          })\n          .catch((res) => {\n            that.$message.error(res);\n          });\n      });\n    },\n    videoSaveToUrl(file) {\n      if (isVideoUpload(file))\n        uploadByPieces({\n          file: file, // 视频实体\n          pieceSize: 3, // 分片大小\n          success: (data) => {\n            this.progress = 100;\n            videoCloudUpload({\n              pid: this.treeId || 0,\n              video_path: data.file_path,\n              video_name: file.name,\n            }).then((res) => {\n              this.getFileList();\n              this.$message.success('视频上传成功');\n            });\n          },\n          error: (e) => {\n            this.$message.error(e.msg);\n          },\n          uploading: (chunk, allChunk) => {\n            this.videoIng = true;\n            let st = Math.floor((chunk / allChunk) * 100);\n            this.progress = st;\n          },\n        });\n      return false;\n    },\n    radioChange() {\n      this.initData();\n    },\n    lookImg(item) {\n      this.imageUrl = item.att_dir;\n      this.videoModal = true;\n    },\n    onDel(node) {\n      let method = node.cate_id ? routeDel : routeCateDel;\n      this.$msgbox({\n        title: '提示',\n        message: '是否确定删除该菜单',\n        showCancelButton: true,\n        cancelButtonText: '取消',\n        confirmButtonText: '删除',\n        iconClass: 'el-icon-warning',\n        confirmButtonClass: 'btn-custom-cancel',\n      })\n        .then(() => {\n          method(node.id)\n            .then((res) => {\n              this.$message.success(res.msg);\n              node.remove();\n            })\n            .catch((err) => {\n              this.$message.error(err);\n            });\n        })\n        .catch(() => {});\n    },\n\n    onChangeName(params) {\n      if (params.eventType == 'blur') {\n        let data = {\n          name: params.newName,\n          id: params.id,\n        };\n        interfaceEditName(data)\n          .then((res) => {\n            this.$message.success(res.msg);\n          })\n          .catch((err) => {\n            this.$message.error(err);\n          });\n      }\n    },\n    // 添加分类\n    addSort() {\n      this.append({ id: this.treeId || 0 });\n    },\n    // 点击菜单\n    clickMenu(data, name) {\n      if (name == 1) {\n        this.append(data);\n      } else if (name == 2) {\n        this.editPic(data);\n      } else if (name == 3) {\n        this.remove(data, '分类');\n      }\n    },\n    uploadSuccess() {\n      this.fileData.page = 1;\n      this.initData();\n      this.getFileList();\n    },\n    uploadModal() {\n      this.$refs.upload.uploadModal = true;\n    },\n    enterMouse(item) {\n      item.realName = !item.realName;\n    },\n    enterLeave(item) {\n      item.isShowEdit = !item.isShowEdit;\n    },\n    // 上传头部token\n    getToken() {\n      this.header['Authori-zation'] = 'Bearer ' + getCookies('token');\n    },\n    moveImg(status) {\n      if (!status) {\n        this.getMove();\n      } else {\n        if (!this.ids.toString()) {\n          this.$message.warning('请先选择视频');\n          return;\n        }\n      }\n    },\n    searchImg() {},\n    // 移动分类\n    getMove() {\n      let data = {\n        pid: this.pids,\n        images: this.ids.toString(),\n      };\n      if (!data.images) return;\n      moveApi(data)\n        .then(async (res) => {\n          this.$message.success(res.msg);\n          this.getFileList();\n          this.pids = 0;\n          this.checkPicList = [];\n          this.ids = [];\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    delImg(id) {\n      let ids = {\n        ids: id,\n      };\n      let delfromData = {\n        title: '删除选中视频',\n        url: `file/file/delete`,\n        method: 'POST',\n        ids: ids,\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$message.success(res.msg);\n          this.getFileList();\n          this.checkPicList = [];\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    // 删除视频\n    editPicList(id) {\n      let ids = {\n        ids: id || this.ids.toString(),\n      };\n      let delfromData = {\n        title: '删除选中视频',\n        url: `file/file/delete`,\n        method: 'POST',\n        ids: ids,\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$message.success(res.msg);\n          this.getFileList();\n          this.initData();\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    initData() {\n      this.checkPicList = [];\n      this.ids = [];\n      this.multipleSelection = [];\n    },\n    // 鼠标移入 移出\n    onMouseOver(root, node, data) {\n      event.preventDefault();\n      data.flag = !data.flag;\n      if (data.flag2) {\n        data.flag2 = false;\n      }\n    },\n    // 点击树\n    appendBtn(data) {\n      this.treeId = data.id;\n      this.fileData.page = 1;\n      this.getFileList();\n    },\n    // 点击添加\n    append(data) {\n      this.treeId = data.id;\n      this.getFrom();\n    },\n    // 删除分类\n    remove(data, tit) {\n      this.tits = tit;\n      let delfromData = {\n        title: '删除 [ ' + data.title + ' ] ' + '分类',\n        url: `file/category/${data.id}`,\n        method: 'DELETE',\n        ids: '',\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$message.success(res.msg);\n          this.getList();\n          this.checkPicList = [];\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    // 编辑树表单\n    editPic(data) {\n      this.$modalForm(categoryEditApi(data.id)).then(() => this.getList());\n    },\n    // 搜索分类\n    changePage() {\n      this.getList('search');\n    },\n    // 分类列表树\n    getList(type) {\n      let data = {\n        title: '全部视频',\n        id: '',\n        pid: 0,\n      };\n      getCategoryListApi(this.uploadName)\n        .then(async (res) => {\n          if (type !== 'search') {\n            this.treeData2 = JSON.parse(JSON.stringify([...res.data.list]));\n          }\n          res.data.list.unshift(data);\n          this.treeData = res.data.list;\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    loadData(item, callback) {\n      getCategoryListApi({\n        pid: item.id,\n      })\n        .then(async (res) => {\n          const data = res.data.list;\n          callback(data);\n        })\n        .catch((res) => {});\n    },\n    addFlag(treedata) {\n      treedata.map((item) => {\n        this.$set(item, 'flag', false);\n        this.$set(item, 'flag2', false);\n        item.children && this.addFlag(item.children);\n      });\n    },\n    // 新建分类\n    add() {\n      this.treeId = 0;\n      this.getFrom();\n    },\n    searchFile() {\n      this.fileData.page = 1;\n      this.getFileList();\n    },\n    // 文件列表\n    getFileList() {\n      this.fileData.pid = this.treeId;\n      fileListApi(this.fileData)\n        .then(async (res) => {\n          res.data.list.forEach((el) => {\n            el.isSelect = false;\n            el.isEdit = false;\n            el.isShowEdit = false;\n            el.realName = false;\n            el.num = 0;\n            this.editName(el);\n          });\n          this.pictrueList = res.data.list;\n\n          if (this.pictrueList.length) {\n            this.isShowPic = false;\n          } else {\n            this.isShowPic = true;\n          }\n          this.total = res.data.count;\n          this.$nextTick(() => {\n            //确保dom加载完毕\n            // this.showSelectData();\n          });\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    showSelectData() {\n      if (this.multipleSelection.length > 0) {\n        // 判断是否存在勾选过的数据\n        this.pictrueList.forEach((row) => {\n          // 获取数据列表接口请求到的数据\n          this.multipleSelection.forEach((item) => {\n            // 勾选到的数据\n            if (row.att_id === item.att_id) {\n              // this.$refs.table.toggleRowSelection(item, true); // 若有重合，则回显该条数据\n            }\n          });\n        });\n      }\n    },\n    getRowKey(row) {\n      return row.att_id;\n    },\n    //对象数组去重；\n    unique(arr) {\n      let result = arr.reduce((acc, curr) => {\n        const x = acc.find((item) => item.att_id === curr.att_id);\n        if (!x) {\n          return acc.concat([curr]);\n        } else {\n          return acc;\n        }\n      }, []);\n      return result;\n    },\n    //  选中某一行\n    handleSelectRow(selection) {\n      let arr = this.unique(selection);\n      const uniqueArr = [];\n      const ids = [];\n      for (let i = 0; i < arr.length; i++) {\n        const item = arr[i];\n        if (!ids.includes(item.att_id)) {\n          uniqueArr.push(item);\n          ids.push(item.att_id);\n        }\n      }\n      this.ids = ids;\n      this.multipleSelection = uniqueArr;\n    },\n    pageChange(index) {\n      this.fileData.page = index;\n      this.getFileList();\n      this.checkPicList = [];\n    },\n    // 新建分类表单\n    getFrom() {\n      this.$modalForm(createApi({ id: this.treeId, type: 1 })).then((res) => {\n        this.getList();\n      });\n    },\n    // 上传之前\n    beforeUpload(file) {\n      // if (file.size > 2097152) {\n      //   this.$message.error(file.name + \"大小超过2M!\");\n      // } else\n      if (!/image\\/\\w+/.test(file.type)) {\n        this.$message.error('请上传以jpg、jpeg、png等结尾的视频文件'); //FileExt.toLowerCase()\n        return false;\n      }\n      this.uploadData = {\n        pid: this.treeId,\n      };\n      let promise = new Promise((resolve) => {\n        this.$nextTick(function () {\n          resolve(true);\n        });\n      });\n      return promise;\n    },\n    // 上传成功\n    handleSuccess(res, file, fileList) {\n      if (res.status === 200) {\n        this.$message.success(res.msg);\n        this.fileData.page = 1;\n        this.getFileList();\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    // 关闭\n    cancel() {\n      this.$emit('changeCancel');\n    },\n    // 选中视频\n    changImage(item, index, row) {\n      let activeIndex = 0;\n      if (!item.isSelect) {\n        item.isSelect = true;\n        this.checkPicList.push(item);\n      } else {\n        item.isSelect = false;\n        this.checkPicList.map((el, index) => {\n          if (el.att_id == item.att_id) {\n            activeIndex = index;\n          }\n        });\n        this.checkPicList.splice(activeIndex, 1);\n      }\n\n      this.ids = [];\n      this.checkPicList.map((item, i) => {\n        this.ids.push(item.att_id);\n      });\n      this.pictrueList.map((el, i) => {\n        if (el.isSelect) {\n          this.checkPicList.filter((el2, j) => {\n            if (el.att_id == el2.att_id) {\n              el.num = j + 1;\n            }\n          });\n        } else {\n          el.num = 0;\n        }\n      });\n    },\n    // 点击使用选中视频\n    checkPics() {\n      console.log(this.checkPicList, 'this.checkPicList', this.isChoice);\n      if (this.isChoice === 'one') {\n        if (this.checkPicList.length > 1) return this.$message.warning('最多只能选一张视频');\n        this.$emit('getVideo', this.checkPicList[0].att_dir);\n      } else {\n        let maxLength = this.$route.query.maxLength;\n        if (maxLength != undefined && this.checkPicList.length > Number(maxLength))\n          return this.$message.warning('最多只能选' + maxLength + '张视频');\n        this.$emit('getPicD', this.checkPicList);\n        this.$emit('getVideo', this.checkPicList);\n      }\n    },\n    editName(item) {\n      let it = item.real_name.split('.');\n      let it1 = it[1] == undefined ? [] : it[1];\n      let len = it[0].length + it1.length;\n      item.editName = len < 10 ? item.real_name : item.real_name.substr(0, 4) + '...' + item.real_name.substr(-5, 5);\n    },\n    // 修改视频文字上传\n    bindTxt(item) {\n      if (item.real_name == '') {\n        this.$message.error('请填写内容');\n      }\n      fileUpdateApi(item.att_id, {\n        real_name: item.real_name,\n      })\n        .then((res) => {\n          this.editName(item);\n          item.isEdit = false;\n          this.$message.success(res.msg);\n        })\n        .catch((error) => {\n          this.$message.error(error.msg);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.nameStyle {\n  position: absolute;\n  white-space: nowrap;\n  z-index: 9;\n  background: #eee;\n  height: 20px;\n  line-height: 20px;\n  color: #555;\n  border: 1px solid #ebebeb;\n  padding: 0 5px;\n  left: 56px;\n  bottom: -18px;\n}\n\n.iconbianji1 {\n  font-size: 13px;\n}\n\n.selectTreeClass {\n  background: #d5e8fc;\n}\n.tree_tit {\n  padding-top: 7px;\n}\n.treeBox {\n  width: 100%;\n  height: 100%;\n  max-width: 180px;\n}\n.is-modal .pictrueList_pic {\n  width: 100px;\n  margin: 10px 5px !important;\n  .img {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100px;\n    height: 100px;\n    background-color: rgb(248, 248, 248);\n    padding: 2px;\n    img {\n      max-width: 96px;\n      max-height: 96px;\n      // object-fit: cover;\n    }\n    .operate-height {\n      bottom: -8px;\n    }\n  }\n}\n.pictrueList_pic {\n  position: relative;\n  width: 146px;\n  cursor: pointer;\n  // margin-right: 20px !important;\n  .img {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 146px;\n    height: 146px;\n    background-color: rgb(248, 248, 248);\n    padding: 3px;\n    video {\n      max-width: 100px;\n      max-height: 100px;\n      // object-fit: cover;\n    }\n  }\n\n  p {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    height: 20px;\n    font-size: 12px;\n    color: #515a6d;\n    text-align: center;\n  }\n\n  .number {\n    height: 33px;\n  }\n\n  .number {\n    position: absolute;\n    right: 0;\n    top: 0;\n  }\n  ::v-deep .el-badge__content.is-fixed {\n    top: 13px;\n    right: 25px;\n  }\n}\n.Nav {\n  width: 100%;\n  border-right: 1px solid #eee;\n  min-width: 220px;\n  max-width: max-content;\n}\n.trees-coadd {\n  width: 100%;\n  border-radius: 4px;\n  overflow: hidden;\n  position: relative;\n\n  .scollhide {\n    overflow-x: hidden;\n    overflow-y: scroll;\n    padding: 0px 0 10px 0;\n    box-sizing: border-box;\n\n    .isTree {\n      min-height: 374px;\n      max-height: 550px;\n      ::v-deep .file-name {\n        display: flex;\n        align-items: center;\n        .name {\n          max-width: 7em;\n        }\n        .icon {\n          width: 12px;\n          height: 12px;\n          margin-right: 8px;\n        }\n      }\n      ::v-deep .el-tree-node {\n        margin-right: 16px;\n      }\n      ::v-deep .el-tree-node__children .el-tree-node {\n        margin-right: 0;\n      }\n      ::v-deep .el-tree-node__content {\n        width: 100%;\n        height: 36px;\n      }\n      ::v-deep .custom-tree-node {\n        flex: 1;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding-right: 20px;\n        font-size: 13px;\n        font-weight: 400;\n        color: rgba(0, 0, 0, 0.6);\n        line-height: 13px;\n      }\n      ::v-deep .is-current {\n        background: #f1f9ff !important;\n        color: var(--prev-color-primary) !important;\n      }\n      ::v-deep .is-current .custom-tree-node {\n        color: var(--prev-color-primary) !important;\n      }\n    }\n  }\n\n  .scollhide::-webkit-scrollbar {\n    display: none;\n  }\n}\n\n.treeSel ::v-deep .ivu-select-dropdown-list {\n  padding: 0 5px !important;\n  box-sizing: border-box;\n  width: 200px;\n}\n.imagesNo {\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  margin: 65px 0;\n\n  .imagesNo_sp {\n    font-size: 13px;\n    color: #dbdbdb;\n    line-height: 3;\n  }\n}\n\n.Modal {\n  width: 100%;\n  height: 100%;\n  background: #fff !important;\n}\n.fill-window {\n  height: 100vh;\n}\n.colLeft {\n  padding-right: 0 !important;\n  height: 100%;\n  display: flex;\n  flex-wrap: nowrap;\n}\n\n.conter {\n  width: 100%;\n  height: 100%;\n  margin-left: 20px !important;\n  .iconliebiao {\n    font-size: 12px;\n  }\n}\n\n.conter .bnt {\n  width: 100%;\n  padding: 0 0px 20px 0px;\n  box-sizing: border-box;\n}\n\n.conter .pictrueList {\n  // width: 100%;\n  overflow-x: hidden;\n  overflow-y: auto;\n  min-height: 463px;\n}\n.conter .pictrueList.is-modal {\n  max-height: 480px;\n}\n.right-col {\n  // flex: 1;\n}\n.conter .pictrueList img {\n  max-width: 100%;\n}\n.conter .pictrueList .img.on {\n  border: 2px solid var(--prev-color-primary);\n}\n\n.conter .footer {\n  padding: 0 20px 10px 20px;\n}\n.tabBox_img {\n  display: flex;\n  align-items: center;\n  video {\n    max-width: 90px;\n    max-height: 30px;\n  }\n}\n.real-name {\n  flex: 1;\n}\n.df-aic {\n  display: flex;\n  align-items: center;\n}\n.demo-badge {\n  width: 42px;\n  height: 42px;\n  background: transparent;\n  border-radius: 6px;\n  display: inline-block;\n}\n\n.bnt ::v-deep .ivu-tree-children {\n  padding: 5px 0;\n}\n\n.card-tree {\n  background: #fff;\n  height: 72px;\n  box-sizing: border-box;\n  overflow-x: scroll; /* 设置溢出滚动 */\n  white-space: nowrap;\n  overflow-y: hidden;\n  /* 隐藏滚动条 */\n  border-radius: 4px;\n  scrollbar-width: none; /* firefox */\n  -ms-overflow-style: none; /* IE 10+ */\n}\n.card-tree::-webkit-scrollbar {\n  display: none; /* Chrome Safari */\n}\n.tabs {\n  background: #fff;\n  padding-top: 10px;\n  border-radius: 5px 5px 0 0;\n}\n.operate-item {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  margin: 5px 0;\n}\n.operate-height {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 16px;\n  position: absolute;\n  bottom: -10px;\n}\n.operate {\n  color: var(--prev-color-primary);\n  font-size: 12px;\n  white-space: nowrap;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}