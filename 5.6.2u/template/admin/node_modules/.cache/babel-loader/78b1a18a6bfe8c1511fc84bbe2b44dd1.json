{"remainingRequest":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\setting\\systemRole\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\setting\\systemRole\\index.vue","mtime":1729039381105},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\babel.config.js","mtime":1679965410000},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\.babelrc","mtime":1679965410000},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1753254258567},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1753254260598}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapState","roleListApi","roleSetStatusApi","menusListApi","roleCreateApi","roleInfoApi","name","data","spinShow","modals","total","grid","xl","lg","md","sm","xs","loading","defaultExpandAll","formValidate","status","role_name","page","limit","tableList","formInline","checked_menus","id","menusList","selectIds","modelTit","ruleValidate","required","message","trigger","type","defaultProps","children","label","computed","_objectSpread","labelWidth","isMobile","undefined","labelPosition","labelPosition2","created","getList","methods","changeExpandAll","key","$refs","tree","store","nodesMap","expanded","closed","add","getmenusList","del","row","tit","num","_this","delfromData","title","url","concat","method","ids","$modalSure","then","res","$message","success","msg","splice","catch","error","onchangeIsShow","_this2","_ref","_asyncToGenerator","_regenerator","m","_callee","w","_context","n","a","_x","apply","arguments","_this3","_ref2","_callee2","_context2","list","count","_x2","userSearchs","edit","rows","getIofo","_this4","_ref3","_callee3","_context3","menus","map","item","index","length","v","expand","_x3","_this5","_ref4","_callee4","_context4","role","rules","$nextTick","e","split","tidyRes","_x4","forChildrenChecked","arr","pid","len","j","childNode","getNode","setChecked","checked","clickDeal","currentObj","treeStatus","ccc","selected","checkedKeys","indexOf","selectedParent","uniteChildSame","selParent","parentNode","i","includes","treeList","isSelected","currentNode","parent","_this6","menu","push","initMenu","$set","_this7","checkMenus","child","String","handleSubmit","_this8","validate","valid","_toConsumableArray","getCheckedKeys","getHalfCheckedKeys","warning","_ref5","_callee5","_context5","resetFields","_x5","onCancel"],"sources":["src/pages/setting/systemRole/index.vue"],"sourcesContent":["<template>\n  <div>\n    <el-card :bordered=\"false\" shadow=\"never\" class=\"ivu-mb-16\" :body-style=\"{ padding: 0 }\">\n      <div class=\"padding-add\">\n        <el-form\n          ref=\"formValidate\"\n          :model=\"formValidate\"\n          :label-width=\"labelWidth\"\n          :label-position=\"labelPosition\"\n          @submit.native.prevent\n          inline\n        >\n          <el-form-item label=\"状态：\" label-for=\"status\">\n            <el-select\n              v-model=\"formValidate.status\"\n              placeholder=\"请选择\"\n              @change=\"userSearchs\"\n              clearable\n              class=\"form_content_width\"\n            >\n              <el-option value=\"1\" label=\"显示\"></el-option>\n              <el-option value=\"0\" label=\"不显示\"></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"身份昵称：\" label-for=\"role_name\">\n            <el-input\n              clearable\n              placeholder=\"请输入身份昵称\"\n              v-model=\"formValidate.role_name\"\n              class=\"form_content_width\"\n            />\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" v-db-click @click=\"userSearchs\">查询</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n    </el-card>\n    <el-card :bordered=\"false\" shadow=\"never\" v-loading=\"spinShow\">\n      <el-button v-auth=\"['setting-system_role-add']\" type=\"primary\" v-db-click @click=\"add('添加')\"\n        >添加身份</el-button\n      >\n      <el-table\n        :data=\"tableList\"\n        ref=\"table\"\n        class=\"mt14\"\n        v-loading=\"loading\"\n        highlight-current-row\n        no-userFrom-text=\"暂无数据\"\n        no-filtered-userFrom-text=\"暂无筛选结果\"\n      >\n        <el-table-column label=\"ID\" min-width=\"80\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.id }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"身份昵称\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.role_name }}</span>\n          </template>\n        </el-table-column>\n        <!-- <el-table-column label=\"权限\" min-width=\"1000\">\n          <template slot-scope=\"scope\">\n            <span class=\"line1\">{{ scope.row.rules }}</span>\n          </template>\n        </el-table-column> -->\n        <el-table-column label=\"状态\" min-width=\"120\">\n          <template slot-scope=\"scope\">\n            <el-switch\n              class=\"defineSwitch\"\n              :active-value=\"1\"\n              :inactive-value=\"0\"\n              v-model=\"scope.row.status\"\n              :value=\"scope.row.status\"\n              @change=\"onchangeIsShow(scope.row)\"\n              size=\"large\"\n              active-text=\"显示\"\n              inactive-text=\"隐藏\"\n            >\n            </el-switch>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" fixed=\"right\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <a v-db-click @click=\"edit(scope.row, '编辑')\">编辑</a>\n            <el-divider direction=\"vertical\"></el-divider>\n            <a v-db-click @click=\"del(scope.row, '删除', scope.$index)\">删除</a>\n          </template>\n        </el-table-column>\n      </el-table>\n      <div class=\"acea-row row-right page\">\n        <pagination\n          v-if=\"total\"\n          :total=\"total\"\n          :page.sync=\"formValidate.page\"\n          :limit.sync=\"formValidate.limit\"\n          @pagination=\"getList\"\n        />\n      </div>\n    </el-card>\n    <!-- 新增编辑-->\n    <el-dialog\n      :visible.sync=\"modals\"\n      :title=\"`${modelTit}身份`\"\n      :close-on-click-modal=\"false\"\n      :show-close=\"true\"\n      width=\"540px\"\n      @closed=\"closed\"\n    >\n      <el-form\n        ref=\"formInline\"\n        :model=\"formInline\"\n        :rules=\"ruleValidate\"\n        label-width=\"100px\"\n        :label-position=\"labelPosition2\"\n        @submit.native.prevent\n      >\n        <el-form-item label=\"身份名称：\" label-for=\"role_name\" prop=\"role_name\">\n          <el-input placeholder=\"请输入身份昵称\" v-model=\"formInline.role_name\" />\n        </el-form-item>\n        <el-form-item label=\"是否开启：\" prop=\"status\">\n          <el-radio-group v-model=\"formInline.status\">\n            <el-radio :label=\"1\">开启</el-radio>\n            <el-radio :label=\"0\">关闭</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"权限：\">\n          <div class=\"trees-coadd\">\n            <div class=\"scollhide\">\n              <div class=\"iconlist\">\n                <el-tree\n                  :data=\"menusList\"\n                  node-key=\"id\"\n                  check-strictly\n                  show-checkbox\n                  highlight-current\n                  ref=\"tree\"\n                  :default-checked-keys=\"selectIds\"\n                  :props=\"defaultProps\"\n                  @check=\"clickDeal\"\n                  :default-expand-all=\"defaultExpandAll\"\n                ></el-tree>\n              </div>\n            </div>\n            <span class=\"iconlist-btn\" @click=\"changeExpandAll\">{{ defaultExpandAll ? '折叠' : '展开' }}</span>\n          </div>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button v-db-click @click=\"onCancel\">取 消</el-button>\n        <el-button type=\"primary\" v-db-click @click=\"handleSubmit('formInline')\">提 交</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n<script>\nimport { mapState } from 'vuex';\nimport { roleListApi, roleSetStatusApi, menusListApi, roleCreateApi, roleInfoApi } from '@/api/setting';\nexport default {\n  name: 'systemrRole',\n  data() {\n    return {\n      spinShow: false,\n      modals: false,\n      total: 0,\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      loading: false,\n      defaultExpandAll: false,\n      formValidate: {\n        status: '',\n        role_name: '',\n        page: 1,\n        limit: 20,\n      },\n      tableList: [],\n      formInline: {\n        role_name: '',\n        status: 0,\n        checked_menus: [],\n        id: 0,\n      },\n      menusList: [],\n      selectIds: [],\n      modelTit: '',\n      ruleValidate: {\n        role_name: [{ required: true, message: '请输入身份昵称', trigger: 'blur' }],\n        status: [{ required: true, type: 'number', message: '请选择是否开启', trigger: 'change' }],\n        // checked_menus: [\n        //     { required: true, validator: validateStatus, trigger: 'change' }\n        // ]\n      },\n      defaultProps: {\n        children: 'children',\n        label: 'title',\n      },\n    };\n  },\n  computed: {\n    ...mapState('media', ['isMobile']),\n    labelWidth() {\n      return this.isMobile ? undefined : '80px';\n    },\n    labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    },\n    labelPosition2() {\n      return this.isMobile ? 'top' : 'right';\n    },\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    changeExpandAll() {\n      // 控制按钮点击之后失焦\n      if (this.defaultExpandAll) {\n        this.defaultExpandAll = false;\n        for (let key in this.$refs.tree.store.nodesMap) {\n          this.$refs.tree.store.nodesMap[key].expanded = false;\n        }\n      } else {\n        this.defaultExpandAll = true;\n        for (let key in this.$refs.tree.store.nodesMap) {\n          this.$refs.tree.store.nodesMap[key].expanded = true;\n        }\n      }\n    },\n    closed() {\n      this.formInline = {\n        role_name: '',\n        status: 0,\n        checked_menus: [],\n        id: 0,\n      };\n      this.selectIds = [];\n    },\n    // 添加\n    add(name) {\n      this.formInline.id = 0;\n      this.modelTit = name;\n      this.modals = true;\n      this.getmenusList();\n    },\n    // 删除\n    del(row, tit, num) {\n      let delfromData = {\n        title: tit,\n        num: num,\n        url: `setting/role/${row.id}`,\n        method: 'DELETE',\n        ids: '',\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$message.success(res.msg);\n          this.tableList.splice(num, 1);\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    // 修改是否显示\n    onchangeIsShow(row) {\n      let data = {\n        id: row.id,\n        status: row.status,\n      };\n      roleSetStatusApi(data)\n        .then(async (res) => {\n          this.$message.success(res.msg);\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    // 列表\n    getList() {\n      this.loading = true;\n      this.formValidate.status = this.formValidate.status || '';\n      roleListApi(this.formValidate)\n        .then(async (res) => {\n          let data = res.data;\n          this.tableList = data.list;\n          this.total = res.data.count;\n          this.loading = false;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$message.error(res.msg);\n        });\n    },\n    // 表格搜索\n    userSearchs() {\n      this.formValidate.page = 1;\n      this.getList();\n    },\n    // 编辑\n    edit(row, name) {\n      this.modelTit = name;\n      this.formInline.id = row.id;\n      this.modals = true;\n      this.rows = row;\n      this.getIofo(row);\n    },\n    // 菜单列表\n    getmenusList() {\n      this.spinShow = true;\n      menusListApi()\n        .then(async (res) => {\n          let data = res.data;\n          this.menusList = data.menus;\n          this.menusList.map((item, index) => {\n            if (item.title === '主页') {\n              // item.checked = true;\n              // item.disableCheckbox = true;\n              if (item.children.length) {\n                item.children.map((v) => {\n                  // v.checked = true;\n                  // v.disableCheckbox = true;\n                });\n              }\n            }\n            item.expand = false;\n          });\n          this.spinShow = false;\n        })\n        .catch((res) => {\n          this.spinShow = false;\n          this.$message.error(res.msg);\n        });\n    },\n    // 详情\n    getIofo(row) {\n      this.spinShow = true;\n      roleInfoApi(row.id)\n        .then(async (res) => {\n          let data = res.data;\n          this.formInline = data.role || this.formInline;\n          this.formInline.checked_menus = this.formInline.rules;\n          this.$nextTick((e) => {\n            this.selectIds = this.formInline.rules.split(',');\n            this.tidyRes(data.menus);\n            // this.$refs.tree.setCheckedKeys(Array(arr));\n          });\n          this.spinShow = false;\n        })\n        .catch((res) => {\n          this.spinShow = false;\n          this.$message.error(res.msg);\n        });\n    },\n    forChildrenChecked(arr, status, pid) {\n      if (arr.length) {\n        let len = arr.length;\n        for (var j = 0; j < len; j++) {\n          var childNode = this.$refs.tree.getNode(arr[j].id).data;\n          if (status) {\n            this.$refs.tree.setChecked(childNode.id, true);\n            childNode.checked = true;\n          }\n          if (!status) {\n            this.$refs.tree.setChecked(childNode.id, false);\n            childNode.checked = false;\n          }\n          if (childNode.children.length) {\n            this.forChildrenChecked(childNode.children, status);\n          }\n        }\n      }\n    },\n\n    clickDeal(currentObj, treeStatus, ccc) {\n      // 用于：父子节点严格互不关联时，父节点勾选变化时通知子节点同步变化，实现单向关联。\n      let selected = treeStatus.checkedKeys.indexOf(currentObj.id); // -1未选中\n      // 选中\n      if (selected !== -1) {\n        // 子节点只要被选中父节点就被选中\n        this.selectedParent(currentObj);\n        // 统一处理子节点为相同的勾选状态\n        this.uniteChildSame(currentObj, true);\n      } else {\n        // 未选中 处理子节点全部未选中\n        if (currentObj.children.length !== 0) {\n          this.uniteChildSame(currentObj, false);\n        }\n        let selParent = false;\n        let parentNode = currentObj.pid ? this.$refs.tree.getNode(currentObj.pid).data : undefined;\n        if (parentNode && parentNode.children.length) {\n          for (let i = 0; i < parentNode.children.length; i++) {\n            if (treeStatus.checkedKeys.includes(parentNode.children[i].id)) {\n              selParent = true;\n            }\n          }\n        }\n        if (!selParent && currentObj.pid) this.$refs.tree.setChecked(currentObj.pid, false);\n      }\n    },\n    // 统一处理子节点为相同的勾选状态\n    uniteChildSame(treeList, isSelected) {\n      this.$refs.tree.setChecked(treeList.id, isSelected);\n      for (let i = 0; i < treeList.children.length; i++) {\n        this.uniteChildSame(treeList.children[i], isSelected);\n      }\n    },\n    // 统一处理父节点为选中\n    selectedParent(currentObj) {\n      let currentNode = this.$refs.tree.getNode(currentObj);\n      if (currentNode.parent.key !== undefined) {\n        this.$refs.tree.setChecked(currentNode.parent, true);\n        this.selectedParent(currentNode.parent);\n      }\n    },\n    tidyRes(menus) {\n      let data = [];\n      menus.map((menu) => {\n        if (menu.title === '主页') {\n          menu.checked = true;\n          // menu.disabled = true;\n          if (menu.children.length) {\n            menu.children.map((v) => {\n              v.checked = true;\n            });\n          }\n          data.push(menu);\n        } else {\n          data.push(this.initMenu(menu));\n        }\n      });\n      this.$set(this, 'menusList', data);\n    },\n    initMenu(menu) {\n      let data = {},\n        checkMenus = ',' + this.formInline.checked_menus + ',';\n      data.title = menu.title;\n      data.id = menu.id;\n      data.pid = menu.pid;\n      data.children = menu.children;\n      data.checked = menu.checked;\n\n      if (menu.children && menu.children.length > 0) {\n        data.children = [];\n        menu.children.map((child) => {\n          data.children.push(this.initMenu(child));\n        });\n      } else {\n        data.checked = checkMenus.indexOf(String(',' + data.id + ',')) !== -1;\n        data.expand = !data.checked;\n      }\n      return data;\n    },\n    // 提交\n    handleSubmit(name) {\n      this.$refs[name].validate((valid) => {\n        if (valid) {\n          this.formInline.checked_menus = [\n            ...this.$refs.tree.getCheckedKeys(),\n            ...this.$refs.tree.getHalfCheckedKeys(),\n          ];\n          if (this.formInline.checked_menus.length === 0) return this.$message.warning('请至少选择一个权限');\n          roleCreateApi(this.formInline)\n            .then(async (res) => {\n              this.$message.success(res.msg);\n              this.modals = false;\n              this.getList();\n              this.$refs[name].resetFields();\n              this.formInline.checked_menus = [];\n            })\n            .catch((res) => {\n              this.$message.error(res.msg);\n            });\n        } else {\n          return false;\n        }\n      });\n    },\n    onCancel() {\n      this.$refs['formInline'].resetFields();\n      this.formInline.checked_menus = [];\n      this.selectIds = [];\n      this.modals = false;\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.trees-coadd {\n  width: 100%;\n  height: 385px;\n  display: flex;\n  .scollhide {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    margin-top: 4px;\n    overflow-y: scroll;\n  }\n  .iconlist-btn {\n    white-space: nowrap;\n    cursor: pointer;\n    color: var(--prev-color-primary);\n  }\n}\n// margin-left: 18px;\n.scollhide::-webkit-scrollbar {\n  display: none;\n}\n</style>\n"],"mappings":"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","ignoreList":[]}]}