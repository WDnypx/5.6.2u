{"remainingRequest":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\thread-loader\\dist\\cjs.js!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\app\\wechat\\reply\\follow.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\app\\wechat\\reply\\follow.vue","mtime":1731313973063},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\babel.config.js","mtime":1679965410000},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\.babelrc","mtime":1679965410000},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1753254256661},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1753254258567},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1753254260598}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvciBmcm9tICJEOi9wYy96bS9cdTY2MDZcdTY2MEVcdTk2MTRcdTdGRDRcdTc5RDFcdTYyODBcdTY3MDlcdTk2NTBcdTUxNkNcdTUzRjgvXHU2RTkwXHU3ODAxL0NSTUVCLUJaIHY1LjYuMigyMDI1MDYzMCkvdGVtcGxhdGUvYWRtaW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3JlZ2VuZXJhdG9yLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L3BjL3ptL1x1NjYwNlx1NjYwRVx1OTYxNFx1N0ZENFx1NzlEMVx1NjI4MFx1NjcwOVx1OTY1MFx1NTE2Q1x1NTNGOC9cdTZFOTBcdTc4MDEvQ1JNRUItQlogdjUuNi4yKDIwMjUwNjMwKS90ZW1wbGF0ZS9hZG1pbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmVycm9yLmNhdXNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnB1c2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgU2V0dGluZyBmcm9tICdAL3NldHRpbmcnOwppbXBvcnQgeyByZXBseUFwaSwga2V5d29yZHNpbmZvQXBpIH0gZnJvbSAnQC9hcGkvYXBwJzsKLy8gaW1wb3J0IHsgbWFwQWN0aW9ucyB9IGZyb20gJ3Z1ZXgnCmltcG9ydCBuZXdzQ2F0ZWdvcnkgZnJvbSAnQC9jb21wb25lbnRzL25ld3NDYXRlZ29yeS9pbmRleCc7CmltcG9ydCB7IGdldENvb2tpZXMgfSBmcm9tICdAL2xpYnMvdXRpbCc7CmltcG9ydCB7IGlzUGljVXBsb2FkIH0gZnJvbSAnQC91dGlscyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnZm9sbG93JywKICBjb21wb25lbnRzOiB7CiAgICBuZXdzQ2F0ZWdvcnk6IG5ld3NDYXRlZ29yeQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICB2YXIgdmFsaWRhdGVDb250ZW50ID0gZnVuY3Rpb24gdmFsaWRhdGVDb250ZW50KHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogICAgICBpZiAoX3RoaXMuZm9ybVZhbGlkYXRlLnR5cGUgPT09ICd0ZXh0JykgewogICAgICAgIGlmIChfdGhpcy5mb3JtVmFsaWRhdGUuZGF0YS5jb250ZW50ID09PSAnJykgewogICAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCfor7floavlhpnop4TliJnlhoXlrrknKSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNhbGxiYWNrKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9OwogICAgdmFyIHZhbGlkYXRlU3JjID0gZnVuY3Rpb24gdmFsaWRhdGVTcmMocnVsZSwgdmFsdWUsIGNhbGxiYWNrKSB7CiAgICAgIGlmIChfdGhpcy5mb3JtVmFsaWRhdGUudHlwZSA9PT0gJ2ltYWdlJyAmJiBfdGhpcy5mb3JtVmFsaWRhdGUuZGF0YS5zcmMgPT09ICcnKSB7CiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCfor7fkuIrkvKAnKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY2FsbGJhY2soKTsKICAgICAgfQogICAgfTsKICAgIHZhciB2YWxpZGF0ZVZhbCA9IGZ1bmN0aW9uIHZhbGlkYXRlVmFsKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogICAgICBpZiAoX3RoaXMubGFiZWxhcnIubGVuZ3RoID09PSAwKSB7CiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCfor7fovpPlhaXlkI7lm57ovaYnKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY2FsbGJhY2soKTsKICAgICAgfQogICAgfTsKICAgIHJldHVybiB7CiAgICAgIGRlbGZyb21EYXRhOiB7fSwKICAgICAgaXNTaG93OiBmYWxzZSwKICAgICAgbWF4Q29sczogNCwKICAgICAgc2Nyb2xsZXJIZWlnaHQ6ICc2MDAnLAogICAgICBjb250ZW50VG9wOiAnMTMwJywKICAgICAgY29udGVudFdpZHRoOiAnOTglJywKICAgICAgbW9kYWxzOiBmYWxzZSwKICAgICAgdmFsOiAnJywKICAgICAgZm9ybWF0SW1nOiBbJ2pwZycsICdqcGVnJywgJ3BuZycsICdibXAnLCAnZ2lmJ10sCiAgICAgIGZvcm1hdFZvaWNlOiBbJ21wMycsICd3bWEnLCAnd2F2JywgJ2FtciddLAogICAgICBoZWFkZXI6IHt9LAogICAgICBmb3JtVmFsaWRhdGU6IHsKICAgICAgICBzdGF0dXM6IC0xLAogICAgICAgIHR5cGU6ICcnLAogICAgICAgIGtleTogdGhpcy4kcm91dGUucGFyYW1zLmtleSB8fCAnJywKICAgICAgICBkYXRhOiB7CiAgICAgICAgICBjb250ZW50OiAnJywKICAgICAgICAgIHNyYzogJycsCiAgICAgICAgICBsaXN0OiBbXQogICAgICAgIH0sCiAgICAgICAgaWQ6IDAKICAgICAgfSwKICAgICAgZmlsZVVybDogU2V0dGluZy5hcGlCYXNlVVJMICsgJy9maWxlL3VwbG9hZC8xJywKICAgICAgcnVsZVZhbGlkYXRlOiB7CiAgICAgICAgdmFsOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICB2YWxpZGF0b3I6IHZhbGlkYXRlVmFsLAogICAgICAgICAgdHJpZ2dlcjogJ2NoYW5nZScKICAgICAgICB9XSwKICAgICAgICB0eXBlOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn6K+36YCJ5oup5raI5oGv57G75Z6LJywKICAgICAgICAgIHRyaWdnZXI6ICdjaGFuZ2UnCiAgICAgICAgfV0sCiAgICAgICAgY29udGVudDogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgdmFsaWRhdG9yOiB2YWxpZGF0ZUNvbnRlbnQsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XSwKICAgICAgICBzcmM6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIHZhbGlkYXRvcjogdmFsaWRhdGVTcmMsCiAgICAgICAgICB0cmlnZ2VyOiAnY2hhbmdlJwogICAgICAgIH1dCiAgICAgIH0sCiAgICAgIGxhYmVsYXJyOiBbXQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICAkcm91dGU6IGZ1bmN0aW9uICRyb3V0ZSh0bywgZnJvbSkgewogICAgICBpZiAodGhpcy4kcm91dGUucGFyYW1zLmtleSB8fCB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQgIT09ICcwJykgewogICAgICAgIHRoaXMuZm9ybVZhbGlkYXRlLmtleSA9IHRoaXMuJHJvdXRlLnBhcmFtcy5rZXk7CiAgICAgICAgdGhpcy5kZXRhaWxzKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5sYWJlbGFyciA9IFtdOwogICAgICAgIHRoaXMuJHJlZnNbJ2Zvcm1WYWxpZGF0ZSddLnJlc2V0RmllbGRzKCk7CiAgICAgIH0KICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBpbWdVcmw6IGZ1bmN0aW9uIGltZ1VybCgpIHsKICAgICAgdmFyIHNlYXJjaCA9ICcvYWRtaW5hcGkvJzsKICAgICAgdmFyIHN0YXJ0ID0gU2V0dGluZy5hcGlCYXNlVVJMLmluZGV4T2Yoc2VhcmNoKTsKICAgICAgcmV0dXJuIFNldHRpbmcuYXBpQmFzZVVSTC5zdWJzdHJpbmcoMCwgc3RhcnQpOyAvLyDmiKrlj5blrZfnrKbkuLIKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldFRva2VuKCk7CiAgICBpZiAodGhpcy4kcm91dGUucGFyYW1zLmtleSB8fCB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQgJiYgdGhpcy4kcm91dGUucGFyYW1zLmlkICE9PSAnMCcpIHsKICAgICAgdGhpcy5kZXRhaWxzKCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBiZWZvcmVVcGxvYWQ6IGZ1bmN0aW9uIGJlZm9yZVVwbG9hZChmaWxlKSB7fSwKICAgIGdldENlbnRMaXN0OiBmdW5jdGlvbiBnZXRDZW50TGlzdCh2YWwpIHsKICAgICAgdGhpcy5mb3JtVmFsaWRhdGUuZGF0YS5saXN0ID0gdmFsLm5ldzsKICAgICAgdGhpcy5tb2RhbHMgPSBmYWxzZTsKICAgIH0sCiAgICBhZGRsYWJlbDogZnVuY3Rpb24gYWRkbGFiZWwoKSB7CiAgICAgIHZhciBjb3VudCA9IHRoaXMubGFiZWxhcnIuaW5kZXhPZih0aGlzLnZhbCk7CiAgICAgIGlmIChjb3VudCA9PT0gLTEpIHsKICAgICAgICB0aGlzLmxhYmVsYXJyLnB1c2godGhpcy52YWwpOwogICAgICB9CiAgICAgIHRoaXMudmFsID0gJyc7CiAgICB9LAogICAgaGFuZGxlQ2xvc2U6IGZ1bmN0aW9uIGhhbmRsZUNsb3NlKG5hbWUpIHsKICAgICAgdmFyIGluZGV4ID0gdGhpcy5sYWJlbGFyci5pbmRleE9mKG5hbWUpOwogICAgICB0aGlzLmxhYmVsYXJyLnNwbGljZShpbmRleCwgMSk7CiAgICB9LAogICAgLy8g6K+m5oOFCiAgICBkZXRhaWxzOiBmdW5jdGlvbiBkZXRhaWxzKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKICAgICAgdmFyIHVybCA9ICcnOwogICAgICB2YXIgZGF0YSA9IHt9OwogICAgICBpZiAodGhpcy4kcm91dGUucGFyYW1zLmlkKSB7CiAgICAgICAgdXJsID0gJ2FwcC93ZWNoYXQva2V5d29yZC8nICsgdGhpcy4kcm91dGUucGFyYW1zLmlkOwogICAgICAgIGRhdGEgPSB7fTsKICAgICAgfSBlbHNlIHsKICAgICAgICB1cmwgPSAnYXBwL3dlY2hhdC9yZXBseSc7CiAgICAgICAgZGF0YSA9IHsKICAgICAgICAgIGtleTogewogICAgICAgICAgICBrZXk6IHRoaXMuZm9ybVZhbGlkYXRlLmtleQogICAgICAgICAgfQogICAgICAgIH07CiAgICAgIH0KICAgICAga2V5d29yZHNpbmZvQXBpKHVybCwgZGF0YSkudGhlbigvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoLyojX19QVVJFX18qL19yZWdlbmVyYXRvcigpLm0oZnVuY3Rpb24gX2NhbGxlZShyZXMpIHsKICAgICAgICAgIHZhciBpbmZvLCBkYXRhOwogICAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvcigpLncoZnVuY3Rpb24gKF9jb250ZXh0KSB7CiAgICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0Lm4pIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpZiAoIShyZXMuZGF0YS5pbmZvLmRhdGEgaW5zdGFuY2VvZiBBcnJheSkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubiA9IDE7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgX3RoaXMyLmZvcm1WYWxpZGF0ZS5zdGF0dXMgPSAwOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmEoMik7CiAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgICAgaW5mbyA9IHJlcy5kYXRhLmluZm8gfHwge307CiAgICAgICAgICAgICAgICBkYXRhID0gaW5mby5kYXRhIHx8IHt9OwogICAgICAgICAgICAgICAgX3RoaXMyLmZvcm1WYWxpZGF0ZSA9IHsKICAgICAgICAgICAgICAgICAgc3RhdHVzOiBpbmZvLnN0YXR1cywKICAgICAgICAgICAgICAgICAgdHlwZTogaW5mby50eXBlLAogICAgICAgICAgICAgICAgICBrZXk6IGluZm8ua2V5LAogICAgICAgICAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgICAgICAgICAgY29udGVudDogZGF0YS5jb250ZW50LAogICAgICAgICAgICAgICAgICAgIHNyYzogZGF0YS5zcmMsCiAgICAgICAgICAgICAgICAgICAgbGlzdDogZGF0YS5saXN0CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIGlkOiBpbmZvLmlkCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgaWYgKF90aGlzMi4kcm91dGUucGFyYW1zLmlkKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzMi5sYWJlbGFyciA9IF90aGlzMi5mb3JtVmFsaWRhdGUua2V5LnNwbGl0KCcsJykgfHwgW107CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmEoMik7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sIF9jYWxsZWUpOwogICAgICAgIH0pKTsKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgIH07CiAgICAgIH0oKSkuY2F0Y2goZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzMi4kbWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g6YCJ5oup5Zu+5paHCiAgICBjaGFuZ2VQaWM6IGZ1bmN0aW9uIGNoYW5nZVBpYygpIHsKICAgICAgdGhpcy5tb2RhbHMgPSB0cnVlOwogICAgfSwKICAgIC8vIOS4i+aLiemAieaLqQogICAgUnVsZUZhY3RvcjogZnVuY3Rpb24gUnVsZUZhY3Rvcih0eXBlKSB7CiAgICAgIHN3aXRjaCAodHlwZSkgewogICAgICAgIGNhc2UgJ3RleHQnOgogICAgICAgICAgdGhpcy5mb3JtVmFsaWRhdGUuZGF0YS5zcmMgPSAnJzsKICAgICAgICAgIHRoaXMuZm9ybVZhbGlkYXRlLmRhdGEubGlzdCA9IFtdOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnbmV3cyc6CiAgICAgICAgICB0aGlzLmZvcm1WYWxpZGF0ZS5kYXRhLnNyYyA9ICcnOwogICAgICAgICAgdGhpcy5mb3JtVmFsaWRhdGUuZGF0YS5jb250ZW50ID0gJyc7CiAgICAgICAgICBicmVhazsKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgdGhpcy5mb3JtVmFsaWRhdGUuZGF0YS5saXN0ID0gW107CiAgICAgICAgICB0aGlzLmZvcm1WYWxpZGF0ZS5kYXRhLmNvbnRlbnQgPSAnJzsKICAgICAgICAgIHRoaXMuZm9ybVZhbGlkYXRlLmRhdGEuc3JjID0gJyc7CiAgICAgIH0KICAgICAgLy8gdGhpcy4kcmVmc1snZm9ybVZhbGlkYXRlJ10ucmVzZXRGaWVsZHMoKTsKICAgIH0sCiAgICAvLyDkuIrkvKDlpLTpg6h0b2tlbgogICAgZ2V0VG9rZW46IGZ1bmN0aW9uIGdldFRva2VuKCkgewogICAgICB0aGlzLmhlYWRlclsnQXV0aG9yaS16YXRpb24nXSA9ICdCZWFyZXIgJyArIGdldENvb2tpZXMoJ3Rva2VuJyk7CiAgICB9LAogICAgLy8g5LiK5Lyg5oiQ5YqfCiAgICBoYW5kbGVTdWNjZXNzOiBmdW5jdGlvbiBoYW5kbGVTdWNjZXNzKHJlcywgZmlsZSkgewogICAgICBpZiAocmVzLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgdGhpcy5mb3JtVmFsaWRhdGUuZGF0YS5zcmMgPSByZXMuZGF0YS5zcmM7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgIH0KICAgIH0sCiAgICBoYW5kbGVGb3JtYXRFcnJvcjogZnVuY3Rpb24gaGFuZGxlRm9ybWF0RXJyb3IoZmlsZSkgewogICAgICBpZiAodGhpcy5mb3JtVmFsaWRhdGUudHlwZSA9PT0gJ2ltYWdlJykgewogICAgICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZygn6K+35LiK5LygYm1wL3BuZy9qcGVnL2pwZy9naWbmoLzlvI/nmoTlm77niYcnKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLndhcm5pbmcoJ+ivt+S4iuS8oG1wMy93bWEvd2F2L2FtcuagvOW8j+eahOivremfsycpOwogICAgICB9CiAgICB9LAogICAgaGFuZGxlTWF4U2l6ZTogZnVuY3Rpb24gaGFuZGxlTWF4U2l6ZShmaWxlKSB7CiAgICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZygn6K+35LiK5Lyg5paH5Lu2Mk3ku6XlhoXnmoTmlofku7YnKTsKICAgIH0sCiAgICAvLyDkv53lrZgKICAgIHN1Ym1lbnVzOiBmdW5jdGlvbiBzdWJtZW51cyhuYW1lKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwogICAgICB0aGlzLiRyZWZzW25hbWVdLnZhbGlkYXRlKGZ1bmN0aW9uICh2YWxpZCkgewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgdmFyIGRhdGEgPSB7fTsKICAgICAgICAgIGlmIChfdGhpczMuJHJvdXRlLnBhcmFtcy5pZCkgewogICAgICAgICAgICBfdGhpczMuZm9ybVZhbGlkYXRlLmtleSA9IF90aGlzMy5sYWJlbGFyci5qb2luKCcsJyk7CiAgICAgICAgICAgIGRhdGEgPSB7CiAgICAgICAgICAgICAgdXJsOiAnYXBwL3dlY2hhdC9rZXl3b3JkLycgKyBfdGhpczMuJHJvdXRlLnBhcmFtcy5pZCwKICAgICAgICAgICAgICBrZXk6IF90aGlzMy5mb3JtVmFsaWRhdGUKICAgICAgICAgICAgfTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGRhdGEgPSB7CiAgICAgICAgICAgICAgdXJsOiAnYXBwL3dlY2hhdC9rZXl3b3JkLycgKyBfdGhpczMuZm9ybVZhbGlkYXRlLmlkLAogICAgICAgICAgICAgIGtleTogX3RoaXMzLmZvcm1WYWxpZGF0ZQogICAgICAgICAgICB9OwogICAgICAgICAgfQogICAgICAgICAgcmVwbHlBcGkoZGF0YSkudGhlbigvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgICAgICB2YXIgX3JlZjIgPSBfYXN5bmNUb0dlbmVyYXRvcigvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yKCkubShmdW5jdGlvbiBfY2FsbGVlMihyZXMpIHsKICAgICAgICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yKCkudyhmdW5jdGlvbiAoX2NvbnRleHQyKSB7CiAgICAgICAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDIubikgewogICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgX3RoaXMzLm9wZXJhdGlvbigpOwogICAgICAgICAgICAgICAgICAgIF90aGlzMy4kbWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hKDIpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgICAgICAgfSkpOwogICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94MikgewogICAgICAgICAgICAgIHJldHVybiBfcmVmMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgICAgICB9OwogICAgICAgICAgfSgpKS5jYXRjaChmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgIF90aGlzMy4kbWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICAvLyDkv53lrZjmiJDlip/mk43kvZwKICAgIG9wZXJhdGlvbjogZnVuY3Rpb24gb3BlcmF0aW9uKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKICAgICAgaWYgKHRoaXMuJHJvdXRlLnBhcmFtcy5pZCAmJiB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQgPT09ICcwJykgewogICAgICAgIHRoaXMuJG1zZ2JveCh7CiAgICAgICAgICB0aXRsZTogJ+aPkOekuicsCiAgICAgICAgICBtZXNzYWdlOiAn5piv5ZCm57un57ut5re75YqgJywKICAgICAgICAgIHNob3dDYW5jZWxCdXR0b246IHRydWUsCiAgICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5ZCmJywKICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn5pivJywKICAgICAgICAgIGljb25DbGFzczogJ2VsLWljb24td2FybmluZycsCiAgICAgICAgICBjb25maXJtQnV0dG9uQ2xhc3M6ICdidG4tY3VzdG9tLWNhbmNlbCcKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICBfdGhpczQubGFiZWxhcnIgPSBbXTsKICAgICAgICAgICAgX3RoaXM0LnZhbCA9ICcnOwogICAgICAgICAgICBfdGhpczQuJHJlZnNbJ2Zvcm1WYWxpZGF0ZSddLnJlc2V0RmllbGRzKCk7CiAgICAgICAgICB9LCAxMDAwKTsKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgX3RoaXM0LiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICAgICAgcGF0aDogX3RoaXM0LiRyb3V0ZVByb1N0ciArICcvYXBwL3dlY2hhdC9yZXBseS9rZXl3b3JkJwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0sIDUwMCk7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy4kcm91dGUucGFyYW1zLmlkICYmIHRoaXMuJHJvdXRlLnBhcmFtcy5pZCAhPT0gJzAnKSB7CiAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgcGF0aDogdGhpcy4kcm91dGVQcm9TdHIgKyAnL2FwcC93ZWNoYXQvcmVwbHkva2V5d29yZCcKICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0KfTs="},null]}