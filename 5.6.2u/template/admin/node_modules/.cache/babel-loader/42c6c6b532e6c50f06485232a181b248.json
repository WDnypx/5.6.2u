{"remainingRequest":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\thread-loader\\dist\\cjs.js!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\marketing\\storeSeckill\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\marketing\\storeSeckill\\index.vue","mtime":1745474910919},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\babel.config.js","mtime":1679965410000},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\.babelrc","mtime":1679965410000},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1753254256661},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1753254258567},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1753254260598}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvciBmcm9tICJEOi9wYy96bS9cdTY2MDZcdTY2MEVcdTk2MTRcdTdGRDRcdTc5RDFcdTYyODBcdTY3MDlcdTk2NTBcdTUxNkNcdTUzRjgvXHU2RTkwXHU3ODAxL0NSTUVCLUJaIHY1LjYuMigyMDI1MDYzMCkvdGVtcGxhdGUvYWRtaW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3JlZ2VuZXJhdG9yLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L3BjL3ptL1x1NjYwNlx1NjYwRVx1OTYxNFx1N0ZENFx1NzlEMVx1NjI4MFx1NjcwOVx1OTY1MFx1NTE2Q1x1NTNGOC9cdTZFOTBcdTc4MDEvQ1JNRUItQlogdjUuNi4yKDIwMjUwNjMwKS90ZW1wbGF0ZS9hZG1pbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIkQ6L3BjL3ptL1x1NjYwNlx1NjYwRVx1OTYxNFx1N0ZENFx1NzlEMVx1NjI4MFx1NjcwOVx1OTY1MFx1NTE2Q1x1NTNGOC9cdTZFOTBcdTc4MDEvQ1JNRUItQlogdjUuNi4yKDIwMjUwNjMwKS90ZW1wbGF0ZS9hZG1pbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmpvaW4uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgeyBzZWNraWxsTGlzdEFwaSwgc2Vja2lsbFN0YXR1c0FwaSwgc3RvcmVTZWNraWxsQXBpLCBzZWNraWxsVGltZUxpc3RBcGkgfSBmcm9tICdAL2FwaS9tYXJrZXRpbmcnOwppbXBvcnQgeyBmb3JtYXREYXRlIGFzIF9mb3JtYXREYXRlIH0gZnJvbSAnQC91dGlscy92YWxpZGF0ZSc7CmltcG9ydCB7IGV4cG9ydFNlY2tpbGxMaXN0IH0gZnJvbSAnQC9hcGkvZXhwb3J0LmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdtYXJrZXRpbmdfc3RvcmVTZWNraWxsJywKICBmaWx0ZXJzOiB7CiAgICBmb3JtYXREYXRlOiBmdW5jdGlvbiBmb3JtYXREYXRlKHRpbWUpIHsKICAgICAgaWYgKHRpbWUgIT09IDApIHsKICAgICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKHRpbWUgKiAxMDAwKTsKICAgICAgICByZXR1cm4gX2Zvcm1hdERhdGUoZGF0ZSwgJ3l5eXktTU0tZGQnKTsKICAgICAgfQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBjb2x1bW5zMTogW3sKICAgICAgICB0aXRsZTogJ0lEJywKICAgICAgICBrZXk6ICdpZCcsCiAgICAgICAgd2lkdGg6IDgwCiAgICAgIH0sIHsKICAgICAgICB0aXRsZTogJ+WVhuWTgeWbvueJhycsCiAgICAgICAgc2xvdDogJ2ltYWdlJywKICAgICAgICBtaW5XaWR0aDogOTAKICAgICAgfSwgewogICAgICAgIHRpdGxlOiAn5rS75Yqo5qCH6aKYJywKICAgICAgICBrZXk6ICd0aXRsZScsCiAgICAgICAgbWluV2lkdGg6IDEzMAogICAgICB9LCB7CiAgICAgICAgdGl0bGU6ICfmtLvliqjnroDku4snLAogICAgICAgIGtleTogJ2luZm8nLAogICAgICAgIG1pbldpZHRoOiAxMDAKICAgICAgfSwgewogICAgICAgIHRpdGxlOiAn5Y6f5Lu3JywKICAgICAgICBrZXk6ICdvdF9wcmljZScsCiAgICAgICAgbWluV2lkdGg6IDEwMAogICAgICB9LCB7CiAgICAgICAgdGl0bGU6ICfnp5LmnYDku7cnLAogICAgICAgIGtleTogJ3ByaWNlJywKICAgICAgICBtaW5XaWR0aDogMTAwCiAgICAgIH0sIHsKICAgICAgICB0aXRsZTogJ+mZkOmHjycsCiAgICAgICAga2V5OiAncXVvdGFfc2hvdycsCiAgICAgICAgbWluV2lkdGg6IDEzMAogICAgICB9LCB7CiAgICAgICAgdGl0bGU6ICfpmZDph4/liankvZknLAogICAgICAgIGtleTogJ3F1b3RhJywKICAgICAgICBtaW5XaWR0aDogMTMwCiAgICAgIH0sIHsKICAgICAgICB0aXRsZTogJ+enkuadgOeKtuaAgScsCiAgICAgICAga2V5OiAnc3RhcnRfbmFtZScsCiAgICAgICAgbWluV2lkdGg6IDEwMAogICAgICB9LCB7CiAgICAgICAgdGl0bGU6ICfnu5PmnZ/ml7bpl7QnLAogICAgICAgIHNsb3Q6ICdzdG9wX3RpbWUnLAogICAgICAgIG1pbldpZHRoOiAxMDAKICAgICAgfSwgewogICAgICAgIHRpdGxlOiAn54q25oCBJywKICAgICAgICBzbG90OiAnc3RhdHVzJywKICAgICAgICBtaW5XaWR0aDogMTAwCiAgICAgIH0sIHsKICAgICAgICB0aXRsZTogJ+aTjeS9nCcsCiAgICAgICAgc2xvdDogJ2FjdGlvbicsCiAgICAgICAgZml4ZWQ6ICdyaWdodCcsCiAgICAgICAgbWluV2lkdGg6IDEzMAogICAgICB9XSwKICAgICAgdGFibGVMaXN0OiBbXSwKICAgICAgdGltZUxpc3Q6IFtdLAogICAgICBncmlkOiB7CiAgICAgICAgeGw6IDcsCiAgICAgICAgbGc6IDEwLAogICAgICAgIG1kOiAxMiwKICAgICAgICBzbTogMjQsCiAgICAgICAgeHM6IDI0CiAgICAgIH0sCiAgICAgIHRhYmxlRnJvbTogewogICAgICAgIHN0YXR1czogJycsCiAgICAgICAgc3RvcmVfbmFtZTogJycsCiAgICAgICAgcGFnZTogMSwKICAgICAgICBsaW1pdDogMTUsCiAgICAgICAgdGltZV9pZHM6IFtdLAogICAgICAgIHRpbWU6ICcnLAogICAgICAgIGFjdGl2aXR5X25hbWU6ICcnCiAgICAgIH0sCiAgICAgIHRpbWVWYWw6IFtdLAogICAgICB0b3RhbDogMAogICAgfTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcFN0YXRlKCdtZWRpYScsIFsnaXNNb2JpbGUnXSkpLCB7fSwgewogICAgbGFiZWxXaWR0aDogZnVuY3Rpb24gbGFiZWxXaWR0aCgpIHsKICAgICAgcmV0dXJuIHRoaXMuaXNNb2JpbGUgPyB1bmRlZmluZWQgOiAnODBweCc7CiAgICB9LAogICAgbGFiZWxQb3NpdGlvbjogZnVuY3Rpb24gbGFiZWxQb3NpdGlvbigpIHsKICAgICAgcmV0dXJuIHRoaXMuaXNNb2JpbGUgPyAndG9wJyA6ICdyaWdodCc7CiAgICB9CiAgfSksCiAgYWN0aXZhdGVkOiBmdW5jdGlvbiBhY3RpdmF0ZWQoKSB7CiAgICB0aGlzLmdldExpc3QoKTsKICAgIHRoaXMuc2Vja2lsbFRpbWVMaXN0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZWNraWxsVGltZUxpc3Q6IGZ1bmN0aW9uIHNlY2tpbGxUaW1lTGlzdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgc2Vja2lsbFRpbWVMaXN0QXBpKCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMudGltZUxpc3QgPSByZXMuZGF0YS5saXN0LmRhdGE7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5YW35L2T5pel5pyfCiAgICBvbmNoYW5nZVRpbWU6IGZ1bmN0aW9uIG9uY2hhbmdlVGltZShlKSB7CiAgICAgIHRoaXMudGltZVZhbCA9IGU7CiAgICAgIHRoaXMudGFibGVGcm9tLnRpbWUgPSB0aGlzLnRpbWVWYWwgPyB0aGlzLnRpbWVWYWwuam9pbignLScpIDogJyc7CiAgICAgIHRoaXMudGFibGVGcm9tLnBhZ2UgPSAxOwogICAgICBpZiAoIWVbMF0pIHsKICAgICAgICB0aGlzLnRhYmxlRnJvbS50aW1lID0gJyc7CiAgICAgIH0KICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICB9LAogICAgLy8g5re75YqgCiAgICBhZGQ6IGZ1bmN0aW9uIGFkZCgpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIHBhdGg6IHRoaXMuJHJvdXRlUHJvU3RyICsgJy9tYXJrZXRpbmcvc3RvcmVfc2Vja2lsbC9jcmVhdGUnCiAgICAgIH0pOwogICAgfSwKICAgIC8vIOWvvOWHugogICAgZXhwb3J0czogZnVuY3Rpb24gZXhwb3J0cygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcigvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yKCkubShmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciB0aCwgZmlsZWtleSwgZGF0YSwgZmlsZU5hbWUsIGV4Y2VsRGF0YSwgaSwgbGViRGF0YTsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yKCkudyhmdW5jdGlvbiAoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0Lm4pIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIHRoID0gW10sIGZpbGVrZXkgPSBbXSwgZGF0YSA9IFtdLCBmaWxlTmFtZSA9ICcnOwogICAgICAgICAgICAgIGV4Y2VsRGF0YSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoX3RoaXMyLnRhYmxlRnJvbSkpOwogICAgICAgICAgICAgIGV4Y2VsRGF0YS5wYWdlID0gMTsKICAgICAgICAgICAgICBleGNlbERhdGEubGltaXQgPSAyMDA7CiAgICAgICAgICAgICAgaSA9IDA7CiAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICBpZiAoIShpIDwgZXhjZWxEYXRhLnBhZ2UgKyAxKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubiA9IDU7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgX2NvbnRleHQubiA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5nZXRFeGNlbERhdGEoZXhjZWxEYXRhKTsKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGxlYkRhdGEgPSBfY29udGV4dC52OwogICAgICAgICAgICAgIGlmICghZmlsZU5hbWUpIGZpbGVOYW1lID0gbGViRGF0YS5maWxlbmFtZTsKICAgICAgICAgICAgICBpZiAoIWZpbGVrZXkubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICBmaWxla2V5ID0gbGViRGF0YS5maWxlS2V5OwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBpZiAoIXRoLmxlbmd0aCkgdGggPSBsZWJEYXRhLmhlYWRlcjsKICAgICAgICAgICAgICBpZiAoIWxlYkRhdGEuZXhwb3J0Lmxlbmd0aCkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubiA9IDM7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgZGF0YSA9IGRhdGEuY29uY2F0KGxlYkRhdGEuZXhwb3J0KTsKICAgICAgICAgICAgICBleGNlbERhdGEucGFnZSsrOwogICAgICAgICAgICAgIF9jb250ZXh0Lm4gPSA0OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgX3RoaXMyLiRleHBvcnRFeGNlbCh0aCwgZmlsZWtleSwgZmlsZU5hbWUsIGRhdGEpOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hKDIpOwogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgaSsrOwogICAgICAgICAgICAgIF9jb250ZXh0Lm4gPSAxOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmEoMik7CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGdldEV4Y2VsRGF0YTogZnVuY3Rpb24gZ2V0RXhjZWxEYXRhKGV4Y2VsRGF0YSkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIGV4cG9ydFNlY2tpbGxMaXN0KGV4Y2VsRGF0YSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICByZXNvbHZlKHJlcy5kYXRhKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g57yW6L6RCiAgICBlZGl0OiBmdW5jdGlvbiBlZGl0KHJvdykgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgcGF0aDogdGhpcy4kcm91dGVQcm9TdHIgKyAnL21hcmtldGluZy9zdG9yZV9zZWNraWxsL2NyZWF0ZS8nICsgcm93LmlkICsgJy8wJwogICAgICB9KTsKICAgIH0sCiAgICAvLyDkuIDplK7lpI3liLYKICAgIGNvcHk6IGZ1bmN0aW9uIGNvcHkocm93KSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBwYXRoOiB0aGlzLiRyb3V0ZVByb1N0ciArICcvbWFya2V0aW5nL3N0b3JlX3NlY2tpbGwvY3JlYXRlLycgKyByb3cuaWQgKyAnLzEnCiAgICAgIH0pOwogICAgfSwKICAgIC8vIOWIoOmZpAogICAgZGVsOiBmdW5jdGlvbiBkZWwocm93LCB0aXQsIG51bSkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKICAgICAgdmFyIGRlbGZyb21EYXRhID0gewogICAgICAgIHRpdGxlOiB0aXQsCiAgICAgICAgbnVtOiBudW0sCiAgICAgICAgdXJsOiAibWFya2V0aW5nL3NlY2tpbGwvIi5jb25jYXQocm93LmlkKSwKICAgICAgICBtZXRob2Q6ICdERUxFVEUnLAogICAgICAgIGlkczogJycKICAgICAgfTsKICAgICAgdGhpcy4kbW9kYWxTdXJlKGRlbGZyb21EYXRhKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczMuJG1lc3NhZ2Uuc3VjY2VzcyhyZXMubXNnKTsKICAgICAgICBfdGhpczMudGFibGVMaXN0LnNwbGljZShudW0sIDEpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICB9KTsKICAgIH0sCiAgICB2aWV3SW5mbzogZnVuY3Rpb24gdmlld0luZm8ocm93KSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBwYXRoOiB0aGlzLiRyb3V0ZVByb1N0ciArICcvbWFya2V0aW5nL3N0b3JlX3NlY2tpbGwvc3RhdGlzdGljcy8nICsgcm93LmlkCiAgICAgIH0pOwogICAgfSwKICAgIC8vIOWIl+ihqAogICAgZ2V0TGlzdDogZnVuY3Rpb24gZ2V0TGlzdCgpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgIHRoaXMudGFibGVGcm9tLnN0YXR1cyA9IHRoaXMudGFibGVGcm9tLnN0YXR1cyB8fCAnJzsKICAgICAgdGhpcy50YWJsZUZyb20ucHJvZHVjdF9pZCA9IHRoaXMuJHJvdXRlLnBhcmFtcy5wcm9kdWN0X2lkIHx8ICcnOwogICAgICBzZWNraWxsTGlzdEFwaSh0aGlzLnRhYmxlRnJvbSkudGhlbigvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoLyojX19QVVJFX18qL19yZWdlbmVyYXRvcigpLm0oZnVuY3Rpb24gX2NhbGxlZTIocmVzKSB7CiAgICAgICAgICB2YXIgZGF0YTsKICAgICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3IoKS53KGZ1bmN0aW9uIChfY29udGV4dDIpIHsKICAgICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQyLm4pIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBkYXRhID0gcmVzLmRhdGE7CiAgICAgICAgICAgICAgICBfdGhpczQudGFibGVMaXN0ID0gZGF0YS5saXN0OwogICAgICAgICAgICAgICAgX3RoaXM0LnRvdGFsID0gcmVzLmRhdGEuY291bnQ7CiAgICAgICAgICAgICAgICBfdGhpczQubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYSgyKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICAgIH0pKTsKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgIH07CiAgICAgIH0oKSkuY2F0Y2goZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzNC5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgX3RoaXM0LiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDooajmoLzmkJzntKIKICAgIHVzZXJTZWFyY2hzOiBmdW5jdGlvbiB1c2VyU2VhcmNocygpIHsKICAgICAgdGhpcy50YWJsZUZyb20ucGFnZSA9IDE7CiAgICAgIHRoaXMuZ2V0TGlzdCgpOwogICAgfSwKICAgIC8vIOS/ruaUueaYr+WQpuaYvuekugogICAgb25jaGFuZ2VJc1Nob3c6IGZ1bmN0aW9uIG9uY2hhbmdlSXNTaG93KHJvdykgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKICAgICAgdmFyIGRhdGEgPSB7CiAgICAgICAgaWQ6IHJvdy5pZCwKICAgICAgICBzdGF0dXM6IHJvdy5zdGF0dXMKICAgICAgfTsKICAgICAgc2Vja2lsbFN0YXR1c0FwaShkYXRhKS50aGVuKC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoLyojX19QVVJFX18qL19yZWdlbmVyYXRvcigpLm0oZnVuY3Rpb24gX2NhbGxlZTMocmVzKSB7CiAgICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yKCkudyhmdW5jdGlvbiAoX2NvbnRleHQzKSB7CiAgICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0My5uKSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXM1LmdldExpc3QoKTsKICAgICAgICAgICAgICAgIF90aGlzNS4kbWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYSgyKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICAgIH0pKTsKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94MikgewogICAgICAgICAgcmV0dXJuIF9yZWYyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgfTsKICAgICAgfSgpKS5jYXRjaChmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXM1LiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgIHJvdy5zdGF0dXMgPSAhcm93LnN0YXR1czsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},null]}