{"remainingRequest":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\system\\backendRouting\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\system\\backendRouting\\index.vue","mtime":1731313973100},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\babel.config.js","mtime":1679965410000},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\.babelrc","mtime":1679965410000},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1753254258567},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1753254260598}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["routeCate","syncRoute","routeList","routeDet","routeSave","interfaceEditName","routeDel","routeEdit","routeCateDel","VueTreeList","Tree","TreeNode","debugging","mapState","name","components","data","value","isEdit","nameModal","debuggingModal","formValidate","grid","xl","lg","md","sm","xs","ruleValidate","title","message","trigger","max","loading","intTypeList","label","typeList","requestTypeList","contextData","treeData","undefined","buttonProps","type","size","methodColor","apiType","paramsId","winLoading","watch","_defineProperty","deep","handler","newVal","oldVal","method","toUpperCase","getInterfaceList","response_example","map","e","JSON","stringify","parse","computed","_objectSpread","labelWidth","isMobile","labelPosition","created","methods","_this","$msgbox","showCancelButton","cancelButtonText","confirmButtonText","iconClass","confirmButtonClass","then","res","$message","success","msg","catch","onClicksss","methodsColor","insertBefore","params","insertAfter","moveInto","addTableData","_asyncToGenerator","_regenerator","m","_callee","_yield$$table$insertA","w","_context","n","$table","insertAt","newRow","v","row","setActiveCell","a","disk_type","_this2","length","expand","i","$nextTick","children","document","querySelectorAll","click","onClick","err","error","console","log","id","getRoteData","_this3","handleSubmit","_this4","_callee2","_context2","warning","path","$refs","bodyTable","getTableData","tableData","request","resTable","response","codeTable","error_code","headTable","header","xTable","query","insertEvent","_this5","_callee3","_yield$$table$insertA2","_context3","attribute","must","trip","code","solution","insertRow","currRow","_this6","_callee4","record","_yield$$table$insertA3","_context4","Date","now","parentId","setTreeExpand","setActiveRow","removeRow","_this7","_callee5","_context5","remove","add","clickMenu","_this8","cate_id","$modalForm","onDel","addFac","asyncOK","_this9","handleContextMenu","event","position","left","Number","slice","handleContextCreateFolder","handleContextCreateFile","renderContent","h","_ref","_this0","root","node","that","style","display","width","resolveComponent","marginRight","float","icon","append","clickDir","navItem","pathname","push","$set","parentKey","find","el","parent","nodeKey","index","indexOf","splice","onMouseOver","d","_this1","onChangeName","_this10","eventType","newName","onAddNode","addNode","isLeaf","addChildren","getNewTree","vm","_dfs","oldNode","newNode","k","len","newTree"],"sources":["src/pages/system/backendRouting/index.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"tabs\">\n      <el-tabs v-model=\"apiType\">\n        <el-tab-pane label=\"管理端接口\" name=\"adminapi\"></el-tab-pane>\n        <el-tab-pane label=\"用户端接口\" name=\"api\"></el-tab-pane>\n        <el-tab-pane label=\"客服端接口\" name=\"kefuapi\"></el-tab-pane>\n        <el-tab-pane label=\"对外接口\" name=\"outapi\"></el-tab-pane>\n      </el-tabs>\n    </div>\n    <div class=\"main\" v-loading=\"winLoading\">\n      <div class=\"ivu-mt card-tree b-r-1\">\n        <div class=\"tree\">\n          <div class=\"main-btn\">\n            <el-button class=\"mb5\" style=\"flex: 1\" type=\"primary\" v-db-click @click=\"clickMenu(4)\" long\n              >新增分类</el-button\n            >\n            <el-button class=\"mb5 mr10\" type=\"success\" v-db-click @click=\"syncRoute()\">同步</el-button>\n          </div>\n\n          <vue-tree-list\n            class=\"tree-list\"\n            ref=\"treeList\"\n            @change-name=\"onChangeName\"\n            @delete-node=\"onDel\"\n            :model=\"treeData\"\n            default-tree-node-name=\"默认文件夹\"\n            default-leaf-node-name=\"默认接口名\"\n            v-bind:default-expanded=\"false\"\n            :expand-only-one=\"true\"\n          >\n            <template v-slot:leafNameDisplay=\"slotProps\">\n              <div></div>\n              <div\n                class=\"tree-node\"\n                :class=\"{\n                  node: slotProps.model.method,\n                  open: formValidate.path == slotProps.model.path && formValidate.method == slotProps.model.method,\n                }\"\n                v-db-click\n                @click.stop=\"onClick(slotProps.model)\"\n              >\n                <span\n                  class=\"\"\n                  :class=\"{\n                    open: formValidate.path == slotProps.model.path && formValidate.method == slotProps.model.method,\n                  }\"\n                  >{{ slotProps.model.name }}</span\n                >\n                <el-dropdown\n                  size=\"small\"\n                  transfer\n                  @command=\"\n                    (name) => {\n                      clickMenu(name, slotProps.model);\n                    }\n                  \"\n                >\n                  <span class=\"el-dropdown-link\">\n                    <i class=\"el-icon-more\"></i>\n                  </span>\n                  <template slot=\"dropdown\">\n                    <el-dropdown-menu>\n                      <el-dropdown-item command=\"1\" v-if=\"!slotProps.model.method\">新增接口</el-dropdown-item>\n                      <el-dropdown-item command=\"2\" v-if=\"!slotProps.model.method\">编辑分类名</el-dropdown-item>\n                      <el-dropdown-item command=\"3\">删除</el-dropdown-item>\n                    </el-dropdown-menu>\n                  </template>\n                </el-dropdown>\n              </div>\n            </template>\n            <!-- 新建文件夹 -->\n\n            <span class=\"icon\" slot=\"addTreeNodeIcon\"></span>\n            <span class=\"icon\" slot=\"addLeafNodeIcon\"></span>\n            <span class=\"icon\" slot=\"editNodeIcon\"></span>\n            <span class=\"icon\" slot=\"delNodeIcon\"></span>\n            <template v-slot:treeNodeIcon=\"slotProps\">\n              <span\n                v-if=\"slotProps.model.method\"\n                class=\"req-method\"\n                :style=\"{\n                  color: methodsColor(slotProps.model.method),\n                  'font-weight': slotProps.model.pid == formValidate.pid ? '500' : '500',\n                }\"\n                >{{ slotProps.model.method }}</span\n              >\n\n              <!-- <span v-if=\"slotProps.model.method\"></span> -->\n            </template>\n          </vue-tree-list>\n        </div>\n      </div>\n      <el-card :bordered=\"false\" shadow=\"never\" class=\"ivu-mt right-card\">\n        <div class=\"data\">\n          <div class=\"eidt-sub\">\n            <div class=\"name\">\n              {{ formValidate.name }}\n            </div>\n            <div>\n              <el-button class=\"submission\" v-db-click @click=\"debugging()\">调试</el-button>\n              <el-button\n                v-if=\"formValidate.id\"\n                type=\"primary\"\n                class=\"submission\"\n                v-db-click\n                @click=\"isEdit = !isEdit\"\n                >{{ isEdit ? '取消' : '编辑' }}</el-button\n              >\n              <el-button\n                v-if=\"isEdit\"\n                type=\"primary\"\n                class=\"submission\"\n                v-db-click\n                @click=\"handleSubmit('formValidate')\"\n                >保存</el-button\n              >\n            </div>\n          </div>\n          <el-form\n            class=\"formValidate mt20\"\n            ref=\"formValidate\"\n            :rules=\"ruleValidate\"\n            :model=\"formValidate\"\n            label-width=\"120px\"\n            :label-position=\"labelPosition\"\n            @submit.native.prevent\n          >\n            <el-row :gutter=\"24\">\n              <el-col :span=\"24\">\n                <div class=\"title\">接口信息</div>\n                <el-form-item label=\"接口名称：\" prop=\"name\">\n                  <el-input\n                    v-if=\"isEdit\"\n                    class=\"perW20\"\n                    type=\"text\"\n                    :rows=\"4\"\n                    v-model.trim=\"formValidate.name\"\n                    placeholder=\"请输入\"\n                  />\n                  <span v-else>{{ formValidate.name || '' }}</span>\n                </el-form-item>\n                <el-form-item label=\"请求类型：\" prop=\"name\">\n                  <el-select v-if=\"isEdit\" v-model=\"formValidate.method\" style=\"width: 120px\">\n                    <el-option\n                      v-for=\"(item, index) in requestTypeList\"\n                      :key=\"index\"\n                      :value=\"item.value\"\n                      :label=\"item.label\"\n                    ></el-option>\n                  </el-select>\n                  <span v-else class=\"req-method\" :style=\"'background-color:' + methodColor\">{{\n                    formValidate.method || ''\n                  }}</span>\n                </el-form-item>\n                <el-form-item label=\"功能描述：\" prop=\"name\">\n                  <el-input\n                    v-if=\"isEdit\"\n                    class=\"perW20\"\n                    type=\"textarea\"\n                    :rows=\"4\"\n                    v-model.trim=\"formValidate.describe\"\n                    placeholder=\"请输入\"\n                  />\n                  <span v-else class=\"text-area\">{{ formValidate.describe || '--' }}</span>\n                </el-form-item>\n                <el-form-item label=\"所属分类：\" prop=\"name\" v-if=\"isEdit\">\n                  <el-cascader\n                    v-model=\"formValidate.cate_id\"\n                    size=\"small\"\n                    :options=\"formValidate.cate_tree\"\n                    :props=\"{ checkStrictly: true, multiple: false, emitPath: false, value: 'id', label: 'name' }\"\n                    clearable\n                  ></el-cascader>\n                </el-form-item>\n                <el-form-item label=\"是否公共：\" prop=\"name\">\n                  <el-switch v-if=\"isEdit\" v-model=\"formValidate.type\" :active-value=\"1\" :inactive-value=\"0\">\n                  </el-switch>\n                  <span v-else class=\"text-area\">{{ formValidate.type ? '是' : '否' }}</span>\n                </el-form-item>\n              </el-col>\n            </el-row>\n            <el-row :gutter=\"24\">\n              <el-col :span=\"24\">\n                <div class=\"title\">调用方式</div>\n                <el-form-item label=\"路由地址：\" prop=\"path\">\n                  <span>{{ formValidate.path || '' }}</span>\n                </el-form-item>\n                <el-form-item label=\"文件地址：\" prop=\"path\">\n                  <span>{{ formValidate.file_path || '' }}</span>\n                </el-form-item>\n                <el-form-item label=\"方法名：\" prop=\"path\">\n                  <span>{{ formValidate.action || '' }}</span>\n                </el-form-item>\n                <el-form-item label=\"header参数：\">\n                  <vxe-table\n                    resizable\n                    show-overflow\n                    keep-source\n                    ref=\"headTable\"\n                    row-id=\"id\"\n                    :print-config=\"{}\"\n                    :export-config=\"{}\"\n                    :loading=\"loading\"\n                    :tree-config=\"{ transform: true, rowField: 'id', parentField: 'parentId' }\"\n                    :data=\"formValidate.header\"\n                  >\n                    <!-- <vxe-column type=\"checkbox\" width=\"60\"></vxe-column> -->\n                    <vxe-column field=\"attribute\" width=\"300\" title=\"属性\" tree-node :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-input v-if=\"isEdit\" v-model=\"row.attribute\" type=\"text\"></vxe-input>\n                        <span v-else>{{ row.attribute || '' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column field=\"type\" title=\"类型\" width=\"200\" :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <!-- <vxe-select v-if=\"isEdit\" v-model=\"row.type\" type=\"text\" :optionGroups=\"typeList\"></vxe-select> -->\n                        <vxe-select v-if=\"isEdit\" v-model=\"row.type\" transfer>\n                          <vxe-option\n                            v-for=\"item in typeList\"\n                            :key=\"item.value\"\n                            :value=\"item.value\"\n                            :label=\"item.label\"\n                          ></vxe-option>\n                        </vxe-select>\n                        <span v-else>{{ row.type || '' }}</span>\n\n                        <!-- <vxe-select v-model=\"row.type\">\n\t\t\t\t\t\t\t\t\t    <vxe-option v-for=\"num in 12\" :key=\"num\" :value=\"num\" :label=\"num\"></vxe-option>\n\t\t\t\t\t\t\t\t\t  </vxe-select> -->\n                      </template>\n                    </vxe-column>\n                    <vxe-column field=\"must\" title=\"必填\" width=\"100\" :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-checkbox\n                          v-if=\"isEdit\"\n                          v-model=\"row.must\"\n                          :unchecked-value=\"'0'\"\n                          :checked-value=\"'1'\"\n                        ></vxe-checkbox>\n                        <span v-else>{{ row.must == '1' ? '是' : '否' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column field=\"trip\" title=\"说明\" :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-input v-if=\"isEdit\" v-model=\"row.trip\" type=\"text\"></vxe-input>\n                        <span v-else>{{ row.trip || '' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column title=\"操作\" width=\"200\" v-if=\"isEdit\">\n                      <template #default=\"{ row }\">\n                        <vxe-button\n                          type=\"text\"\n                          v-if=\"row.type === 'array' || row.type === 'object'\"\n                          status=\"primary\"\n                          v-db-click\n                          @click=\"insertRow(row, 'headTable')\"\n                          >插入</vxe-button\n                        >\n                        <vxe-button type=\"text\" status=\"primary\" v-db-click @click=\"removeRow(row, 'headTable')\"\n                          >删除</vxe-button\n                        >\n                      </template>\n                    </vxe-column>\n                  </vxe-table>\n\n                  <el-button class=\"mt10\" v-if=\"isEdit\" type=\"primary\" v-db-click @click=\"insertEvent('headTable')\"\n                    >添加参数</el-button\n                  >\n                </el-form-item>\n                <el-form-item label=\"query参数：\">\n                  <vxe-table\n                    resizable\n                    show-overflow\n                    keep-source\n                    ref=\"xTable\"\n                    row-id=\"id\"\n                    :print-config=\"{}\"\n                    :export-config=\"{}\"\n                    :loading=\"loading\"\n                    :tree-config=\"{ transform: true, rowField: 'id', parentField: 'parentId' }\"\n                    :data=\"formValidate.query\"\n                  >\n                    <vxe-column field=\"attribute\" width=\"300\" title=\"属性\" tree-node :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-input v-if=\"isEdit\" v-model=\"row.attribute\" type=\"text\"></vxe-input>\n                        <span v-else>{{ row.attribute || '' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column field=\"type\" title=\"类型\" width=\"200\" :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-select v-if=\"isEdit\" v-model=\"row.type\" transfer>\n                          <vxe-option\n                            v-for=\"item in typeList\"\n                            :key=\"item.value\"\n                            :value=\"item.value\"\n                            :label=\"item.label\"\n                          ></vxe-option>\n                        </vxe-select>\n                        <span v-else>{{ row.type || '' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column field=\"must\" title=\"必填\" width=\"100\" :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-checkbox\n                          v-if=\"isEdit\"\n                          v-model=\"row.must\"\n                          :unchecked-value=\"'0'\"\n                          :checked-value=\"'1'\"\n                        ></vxe-checkbox>\n                        <span v-else>{{ row.must == '1' ? '是' : '否' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column field=\"trip\" title=\"说明\" :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-input v-if=\"isEdit\" v-model=\"row.trip\" type=\"text\"></vxe-input>\n                        <span v-else>{{ row.trip || '' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column title=\"操作\" width=\"200\" v-if=\"isEdit\">\n                      <template #default=\"{ row }\">\n                        <vxe-button\n                          type=\"text\"\n                          v-if=\"row.type === 'array' || row.type === 'object'\"\n                          status=\"primary\"\n                          v-db-click\n                          @click=\"insertRow(row, 'xTable')\"\n                          >插入</vxe-button\n                        >\n                        <vxe-button type=\"text\" status=\"primary\" v-db-click @click=\"removeRow(row, 'xTable')\"\n                          >删除</vxe-button\n                        >\n                      </template>\n                    </vxe-column>\n                  </vxe-table>\n                  <el-button class=\"mt10\" v-if=\"isEdit\" type=\"primary\" v-db-click @click=\"insertEvent('xTable')\"\n                    >添加参数</el-button\n                  >\n                </el-form-item>\n                <el-form-item label=\"body参数：\">\n                  <vxe-table\n                    resizable\n                    show-overflow\n                    keep-source\n                    ref=\"bodyTable\"\n                    row-id=\"id\"\n                    :print-config=\"{}\"\n                    :export-config=\"{}\"\n                    :loading=\"loading\"\n                    :tree-config=\"{ transform: true, rowField: 'id', parentField: 'parentId' }\"\n                    :data=\"formValidate.request\"\n                  >\n                    <!-- <vxe-column type=\"checkbox\" width=\"60\"></vxe-column> -->\n                    <vxe-column field=\"attribute\" width=\"300\" title=\"属性\" tree-node :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-input v-if=\"isEdit\" v-model=\"row.attribute\" type=\"text\"></vxe-input>\n                        <span v-else>{{ row.attribute || '' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column field=\"type\" title=\"类型\" width=\"200\" :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <!-- <vxe-select v-if=\"isEdit\" v-model=\"row.type\" type=\"text\" :optionGroups=\"typeList\"></vxe-select> -->\n                        <vxe-select v-if=\"isEdit\" v-model=\"row.type\" transfer>\n                          <vxe-option\n                            v-for=\"item in typeList\"\n                            :key=\"item.value\"\n                            :value=\"item.value\"\n                            :label=\"item.label\"\n                          ></vxe-option>\n                        </vxe-select>\n                        <span v-else>{{ row.type || '' }}</span>\n\n                        <!-- <vxe-select v-model=\"row.type\">\n                      <vxe-option v-for=\"num in 12\" :key=\"num\" :value=\"num\" :label=\"num\"></vxe-option>\n                    </vxe-select> -->\n                      </template>\n                    </vxe-column>\n                    <vxe-column field=\"must\" title=\"必填\" width=\"100\" :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-checkbox\n                          v-if=\"isEdit\"\n                          v-model=\"row.must\"\n                          :unchecked-value=\"'0'\"\n                          :checked-value=\"'1'\"\n                        ></vxe-checkbox>\n                        <span v-else>{{ row.must == '1' ? '是' : '否' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column field=\"trip\" title=\"说明\" :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-input v-if=\"isEdit\" v-model=\"row.trip\" type=\"text\"></vxe-input>\n                        <span v-else>{{ row.trip || '' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column title=\"操作\" width=\"200\" v-if=\"isEdit\">\n                      <template #default=\"{ row }\">\n                        <vxe-button\n                          type=\"text\"\n                          v-if=\"row.type === 'array' || row.type === 'object'\"\n                          status=\"primary\"\n                          v-db-click\n                          @click=\"insertRow(row, 'bodyTable')\"\n                          >插入</vxe-button\n                        >\n                        <vxe-button type=\"text\" status=\"primary\" v-db-click @click=\"removeRow(row, 'bodyTable')\"\n                          >删除</vxe-button\n                        >\n                      </template>\n                    </vxe-column>\n                  </vxe-table>\n\n                  <el-button class=\"mt10\" v-if=\"isEdit\" type=\"primary\" v-db-click @click=\"insertEvent('bodyTable')\"\n                    >添加参数</el-button\n                  >\n                </el-form-item>\n                <el-form-item label=\"返回参数：\">\n                  <vxe-table\n                    resizable\n                    show-overflow\n                    keep-source\n                    ref=\"resTable\"\n                    row-id=\"id\"\n                    :print-config=\"{}\"\n                    :export-config=\"{}\"\n                    :loading=\"loading\"\n                    :tree-config=\"{ transform: true, rowField: 'id', parentField: 'parentId' }\"\n                    :data=\"formValidate.response\"\n                  >\n                    <!-- <vxe-column type=\"checkbox\" width=\"60\"></vxe-column> -->\n                    <vxe-column field=\"attribute\" title=\"属性\" width=\"300\" tree-node :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-input v-if=\"isEdit\" v-model=\"row.attribute\" type=\"text\"></vxe-input>\n                        <span v-else>{{ row.attribute || '' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column field=\"type\" title=\"类型\" width=\"200\" :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-select v-if=\"isEdit\" v-model=\"row.type\" transfer>\n                          <vxe-option\n                            v-for=\"item in typeList\"\n                            :key=\"item.value\"\n                            :value=\"item.value\"\n                            :label=\"item.label\"\n                          ></vxe-option>\n                        </vxe-select>\n                        <span v-else>{{ row.type || '' }}</span>\n                      </template>\n                    </vxe-column>\n                    <!-- <vxe-column field=\"type\" title=\"必填\" :edit-render=\"{}\">\n                  <template #default=\"{ row }\">\n                    <vxe-checkbox v-model=\"row.must\" :unchecked-value=\"0\" :checked-value=\"1\"></vxe-checkbox\n                    >{{ row.must }}\n                  </template>\n                </vxe-column> -->\n                    <vxe-column field=\"trip\" title=\"说明\" :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-input v-if=\"isEdit\" v-model=\"row.trip\" type=\"text\"></vxe-input>\n                        <span v-else>{{ row.trip || '' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column title=\"操作\" width=\"200\" v-if=\"isEdit\">\n                      <template #default=\"{ row }\">\n                        <vxe-button\n                          type=\"text\"\n                          v-if=\"row.type === 'array' || row.type === 'object'\"\n                          status=\"primary\"\n                          v-db-click\n                          @click=\"insertRow(row, 'resTable')\"\n                          >插入</vxe-button\n                        >\n                        <vxe-button type=\"text\" status=\"primary\" v-db-click @click=\"removeRow(row, 'resTable')\"\n                          >删除</vxe-button\n                        >\n                      </template>\n                    </vxe-column>\n                  </vxe-table>\n                  <el-button class=\"mt10\" v-if=\"isEdit\" type=\"primary\" v-db-click @click=\"insertEvent('resTable')\"\n                    >添加参数</el-button\n                  >\n                </el-form-item>\n              </el-col>\n            </el-row>\n            <el-row :gutter=\"24\">\n              <el-col :span=\"24\">\n                <div class=\"title\">调用示例</div>\n                <!-- <el-form-item label=\"请求数据示例：\" prop=\"request_example\">\n                    <el-input\n                      v-if=\"isEdit\"\n                      class=\"perW20\"\n                      type=\"textarea\"\n                      :rows=\"4\"\n                      v-model.trim=\"formValidate.request_example\"\n                      placeholder=\"请输入\"\n                    />\n                    <span v-else class=\"text-area\">{{ formValidate.request_example || '' }}</span>\n                  </el-form-item> -->\n                <el-form-item v-if=\"formValidate.response_example\" label=\"返回数据示例：\" prop=\"response_example\">\n                  <el-collapse v-for=\"(item, index) in formValidate.response_example\" accordion :key=\"index\">\n                    <el-collapse-item>\n                      <template slot=\"title\">\n                        {{ item.name || '' }}\n                      </template>\n                      <el-input\n                        v-if=\"isEdit\"\n                        class=\"perW20\"\n                        type=\"textarea\"\n                        :rows=\"4\"\n                        v-model.trim=\"item.data\"\n                        placeholder=\"请输入\"\n                      />\n                      <span v-else class=\"text-area\">{{ item.data || '' }}</span>\n                    </el-collapse-item>\n                  </el-collapse>\n                </el-form-item>\n                <el-form-item label=\"错误码：\">\n                  <vxe-table\n                    resizable\n                    show-overflow\n                    keep-source\n                    ref=\"codeTable\"\n                    row-id=\"id\"\n                    is-tree-view\n                    :print-config=\"{}\"\n                    :export-config=\"{}\"\n                    :loading=\"loading\"\n                    :tree-config=\"{ rowField: 'id', parentField: 'parentId' }\"\n                    :data=\"formValidate.error_code\"\n                  >\n                    <!-- <vxe-column type=\"checkbox\" width=\"60\"></vxe-column> -->\n                    <vxe-column field=\"code\" title=\"错误码\" tree-node :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-input v-if=\"isEdit\" v-model=\"row.code\" type=\"text\"></vxe-input>\n                        <span v-else>{{ row.code || '' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column field=\"value\" title=\"错误码取值\" :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-input v-if=\"isEdit\" v-model=\"row.value\" type=\"text\"></vxe-input>\n                        <span v-else>{{ row.value || '' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column field=\"solution\" title=\"解决方案\" :edit-render=\"{}\">\n                      <template #default=\"{ row }\">\n                        <vxe-input v-if=\"isEdit\" v-model=\"row.solution\" type=\"text\"></vxe-input>\n                        <span v-else>{{ row.solution || '' }}</span>\n                      </template>\n                    </vxe-column>\n                    <vxe-column title=\"操作\" v-if=\"isEdit\">\n                      <template #default=\"{ row }\">\n                        <vxe-button type=\"text\" status=\"primary\" v-db-click @click=\"removeRow(row, 'codeTable')\"\n                          >删除</vxe-button\n                        >\n                      </template>\n                    </vxe-column>\n                  </vxe-table>\n                  <el-button class=\"mt10\" v-if=\"isEdit\" type=\"primary\" v-db-click @click=\"insertEvent('codeTable')\"\n                    >添加参数</el-button\n                  >\n                </el-form-item>\n              </el-col>\n            </el-row>\n            <!-- <el-row :gutter=\"24\" >\n              <el-col :span=\"24\">\n                <el-form-item>\n                  <el-button type=\"primary\" class=\"submission\" v-db-click @click=\"handleSubmit('formValidate')\">保存</el-button>\n                </el-form-item>\n              </el-col>\n            </el-row> -->\n          </el-form>\n        </div>\n        <!-- <div v-else class=\"nothing\">\n          <div class=\"box\" v-db-click @click=\"clickMenu(4)\">\n            <div class=\"icon\">\n              <Icon type=\"ios-folder\" />\n            </div>\n            <div class=\"text\">新建文件</div>\n          </div>\n          <div class=\"box\" v-db-click @click=\"clickMenu(1)\">\n            <div class=\"icon\">\n              <Icon type=\"logo-linkedin\" />\n            </div>\n            <div class=\"text\">新建接口</div>\n          </div>\n        </div> -->\n      </el-card>\n    </div>\n    <el-dialog :visible.sync=\"nameModal\" width=\"470px\" title=\"分组名称\">\n      <label>分组名称：</label>\n      <el-input v-model=\"value\" placeholder=\"请输入分组名称\" style=\"width: 85%\" />\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button v-db-click @click=\"nameModal = false\">取 消</el-button>\n        <el-button type=\"primary\" v-db-click @click=\"asyncOK\">确 定</el-button>\n      </span>\n    </el-dialog>\n    <el-drawer\n      :visible.sync=\"debuggingModal\"\n      :title=\"formValidate.name\"\n      size=\"70%\"\n      :wrapperClosable=\"false\"\n      :loading=\"loading\"\n    >\n      <debugging\n        v-if=\"debuggingModal\"\n        :formValidate=\"formValidate\"\n        :typeList=\"intTypeList\"\n        :requestTypeList=\"requestTypeList\"\n        :apiType=\"apiType\"\n      />\n    </el-drawer>\n  </div>\n</template>\n\n<script>\nimport {\n  routeCate,\n  syncRoute,\n  routeList,\n  routeDet,\n  routeSave,\n  interfaceEditName,\n  routeDel,\n  routeEdit,\n  routeCateDel,\n} from '@/api/systemBackendRouting';\nimport { VueTreeList, Tree, TreeNode } from 'vue-tree-list';\nimport debugging from './debugging.vue';\n\nimport { mapState } from 'vuex';\nexport default {\n  name: 'systemOutInterface',\n  components: {\n    VueTreeList,\n    debugging,\n  },\n  data() {\n    return {\n      value: '',\n      isEdit: false,\n      nameModal: false,\n      debuggingModal: false,\n      formValidate: {},\n      grid: {\n        xl: 7,\n        lg: 7,\n        md: 12,\n        sm: 24,\n        xs: 24,\n      },\n      ruleValidate: {\n        title: [{ message: '请输入正确的描述 (不能多于200位数)', trigger: 'blur', max: 200 }],\n      },\n      loading: false,\n      intTypeList: [\n        {\n          value: 'string',\n          label: 'String',\n        },\n        // {\n        //   value: 'array',\n        //   label: 'Array',\n        // },\n        // {\n        //   value: 'object',\n        //   label: 'Object',\n        // },\n        {\n          value: 'number',\n          label: 'Number',\n        },\n        {\n          value: 'boolean',\n          label: 'Boolean',\n        },\n        {\n          value: 'null',\n          label: 'Null',\n        },\n        {\n          value: 'any',\n          label: 'Any',\n        },\n      ],\n      typeList: [\n        {\n          value: 'string',\n          label: 'String',\n        },\n        {\n          value: 'array',\n          label: 'Array',\n        },\n        {\n          value: 'object',\n          label: 'Object',\n        },\n        {\n          value: 'number',\n          label: 'Number',\n        },\n        {\n          value: 'boolean',\n          label: 'Boolean',\n        },\n        {\n          value: 'null',\n          label: 'Null',\n        },\n        {\n          value: 'any',\n          label: 'Any',\n        },\n      ],\n      requestTypeList: [\n        {\n          value: 'GET',\n          label: 'GET',\n        },\n        {\n          value: 'POST',\n          label: 'POST',\n        },\n        {\n          value: 'DELETE',\n          label: 'DELETE',\n        },\n        {\n          value: 'PUT',\n          label: 'PUT',\n        },\n      ],\n      contextData: null, //左侧导航右键点击是产生的数据对象\n      treeData: undefined,\n      buttonProps: {\n        type: 'default',\n        size: 'small',\n      },\n      methodColor: '#fff',\n      apiType: 'adminapi',\n      paramsId: 0,\n      winLoading: false,\n    };\n  },\n  watch: {\n    ['formValidate.method']: {\n      deep: true,\n      handler(newVal, oldVal) {\n        if (newVal) {\n          let method = newVal.toUpperCase();\n          if (method == 'GET') {\n            this.methodColor = '#61affe';\n          } else if (method == 'POST') {\n            this.methodColor = '#49cc90';\n          } else if (method == 'PUT') {\n            this.methodColor = '#fca130';\n          } else if (method == 'DEL' || method == 'DELETE') {\n            this.methodColor = '#f93e3e';\n          }\n        }\n      },\n    },\n    apiType(newVal) {\n      if (newVal) {\n        this.winLoading = true;\n        this.getInterfaceList('one');\n      }\n    },\n    isEdit(newVal) {\n      if (newVal) {\n        this.formValidate.response_example.map((e) => {\n          e.data = JSON.stringify(e.data);\n        });\n      } else {\n        this.formValidate.response_example.map((e) => {\n          e.data = JSON.parse(e.data);\n        });\n      }\n    },\n  },\n  computed: {\n    ...mapState('media', ['isMobile']),\n    labelWidth() {\n      return this.isMobile ? undefined : '50px';\n    },\n    labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    },\n  },\n  created() {\n    this.getInterfaceList('one');\n  },\n  methods: {\n    syncRoute() {\n      this.$msgbox({\n        title: '立即同步',\n        message: '同步之后，路由文件中新增的接口添加到接口列表中，路由文件中删除的路由会同步的在接口列表中删除',\n        showCancelButton: true,\n        cancelButtonText: '取消',\n        confirmButtonText: '确定',\n        iconClass: 'el-icon-warning',\n        confirmButtonClass: 'btn-custom-cancel',\n      })\n        .then(() => {\n          syncRoute(this.apiType).then((res) => {\n            this.getInterfaceList('one');\n            this.$message.success(res.msg);\n          });\n        })\n        .catch(() => {});\n    },\n    debugging() {\n      this.debuggingModal = true;\n    },\n    onClicksss(e) {},\n    methodsColor(newVal) {\n      let method = newVal.toUpperCase();\n      if (method == 'GET') {\n        return '#61affe';\n      } else if (method == 'POST') {\n        return '#49cc90';\n      } else if (method == 'PUT') {\n        return '#fca130';\n      } else if (method == 'DEL' || method == 'DELETE') {\n        return '#f93e3e';\n      }\n    },\n    insertBefore(params) {},\n    insertAfter(params) {},\n    moveInto(params) {},\n    async addTableData() {\n      const { row: data } = await $table.insertAt(newRow, -1);\n      await $table.setActiveCell(data, 'name');\n    },\n    getInterfaceList(disk_type) {\n      try {\n        routeList(this.apiType)\n          .then((res) => {\n            if (res.data.length) {\n              res.data[0].expand = false;\n              this.treeData = new Tree(res.data);\n              let i;\n              this.$nextTick((e) => {\n                if (disk_type) {\n                  if (\n                    res.data[0].children &&\n                    res.data[0].children[0].children &&\n                    res.data[0].children[0].children.length\n                  ) {\n                    document.querySelectorAll('.vtl-icon-caret-right')[0].click();\n                    document.querySelectorAll('.vtl-icon-caret-right')[1].click();\n                    i = res.data[0].children[0].children[0];\n                  } else {\n                    document.querySelectorAll('.vtl-icon-caret-right')[0].click();\n                    i = res.data[0].children[0];\n                  }\n                  this.onClick(i);\n                }\n              });\n            } else {\n              // this.$refs.treeList.clear();\n              this.treeData = new Tree({});\n              this.formValidate = {};\n            }\n            this.winLoading = false;\n          })\n          .catch((err) => {\n            this.winLoading = false;\n            this.$message.error(err.msg);\n          });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    onClick(params) {\n      try {\n        if (params.method) {\n          this.isEdit = false;\n          this.paramsId = params.id;\n          this.getRoteData(params.id);\n        }\n      } catch (error) {}\n    },\n    getRoteData(id) {\n      routeDet(id)\n        .then((res) => {\n          this.formValidate = res.data;\n        })\n        .catch((err) => {\n          this.$message.error(err.msg);\n        });\n    },\n    async handleSubmit() {\n      if (!this.formValidate.name) {\n        return this.$message.warning('请输入接口名称');\n      } else if (!this.formValidate.method) {\n        return this.$message.warning('请选择请求类型');\n      } else if (!this.formValidate.path) {\n        return this.$message.warning('请输入路由地址');\n      }\n      this.formValidate.request = await this.$refs.bodyTable.getTableData().tableData;\n      this.formValidate.response = await this.$refs.resTable.getTableData().tableData;\n      this.formValidate.error_code = await this.$refs.codeTable.getTableData().tableData;\n      this.formValidate.header = await this.$refs.headTable.getTableData().tableData;\n      this.formValidate.query = await this.$refs.xTable.getTableData().tableData;\n      this.formValidate.apiType = this.apiType;\n      this.formValidate.response_example.map((e) => {\n        e.data = JSON.parse(e.data);\n      });\n      await routeSave(this.formValidate)\n        .then((res) => {\n          this.$message.success(res.msg);\n          this.getRoteData(this.paramsId);\n          this.isEdit = false;\n        })\n        .catch((err) => {\n          this.$message.error(err.msg);\n        });\n    },\n    async insertEvent(type) {\n      const $table = this.$refs[type];\n      let newRow;\n      if (type == 'xTable') {\n        newRow = {\n          attribute: '',\n          type: '',\n          must: 0,\n          trip: '',\n        };\n      } else if (type == 'resTable') {\n        newRow = {\n          attribute: '',\n          type: '',\n          trip: '',\n        };\n      } else {\n        newRow = {\n          code: '',\n          value: '',\n          solution: '',\n        };\n      }\n      // $table.insert(newRow).then(({ row }) => $table.setEditRow(row, -1));\n      const { row: data } = await $table.insertAt(newRow, -1);\n      await $table.setActiveCell(data, 'name');\n    },\n    async insertRow(currRow, type) {\n      const $table = this.$refs[type];\n      // 如果 null 则插入到目标节点顶部\n      // 如果 -1 则插入到目标节点底部\n      // 如果 row 则有插入到效的目标节点该行的位置\n      let record;\n      if (type == 'xTable') {\n        record = {\n          attribute: '',\n          type: '',\n          must: 0,\n          trip: '',\n          id: Date.now(),\n          parentId: currRow.id, // 需要指定父节点，自动插入该节点中\n        };\n      } else if (type == 'resTable') {\n        record = {\n          attribute: '',\n          type: '',\n          trip: '',\n          id: Date.now(),\n          parentId: currRow.id, // 需要指定父节点，自动插入该节点中\n        };\n      } else {\n        record = {\n          code: '',\n          value: '',\n          solution: '',\n          id: Date.now(),\n          parentId: currRow.id, // 需要指定父节点，自动插入该节点中\n        };\n      }\n      const { row: newRow } = await $table.insertAt(record, -1);\n      await $table.setTreeExpand(currRow, true); // 将父节点展开\n      await $table.setActiveRow(newRow); // 插入子节点\n    },\n    async removeRow(row, type) {\n      const $table = this.$refs[type];\n      await $table.remove(row);\n    },\n    // 修改名字\n    add() {\n      this.value = '';\n      this.formValidate.id = 0;\n      this.nameModal = true;\n    },\n    // 点击菜单\n    clickMenu(name, params) {\n      if (name == 1) {\n        this.formValidate = {};\n        this.formValidate.cate_id = params ? params.id : 0;\n        this.formValidate.id = 0;\n        this.isEdit = true;\n      } else if (name == 2) {\n        // this.value = params.name || '';\n        // this.formValidate.cate_id = params ? params.id : 0;\n        // this.nameModal = true;\n        // this.onEdit(params);\n        this.$modalForm(routeEdit(params.id, this.apiType)).then(() => this.getInterfaceList());\n      } else if (name == 3) {\n        this.onDel(params);\n      } else if (name == 4) {\n        // this.add();\n        this.$modalForm(routeCate(this.apiType)).then(() => this.getInterfaceList());\n      }\n    },\n\n    addFac(params) {\n      this.formValidate = {\n        id: params ? params.id : 0,\n      };\n      this.isEdit = true;\n    },\n    asyncOK() {\n      let data = {\n        id: this.formValidate.id || 0,\n        type: 0,\n        name: this.value,\n      };\n      routeSave(data)\n        .then((res) => {\n          this.$message.success(res.msg);\n          this.getInterfaceList();\n        })\n        .catch((err) => {\n          this.$message.error(err.msg);\n        });\n    },\n    //侧边栏右键点击事件\n    handleContextMenu(data, event, position) {\n      position.left = Number(position.left.slice(0, -2)) + 75 + 'px';\n      this.contextData = data;\n    },\n    handleContextCreateFolder() {},\n    handleContextCreateFile() {},\n    // 自定义显示\n    renderContent(h, { root, node, data }) {\n      let that = this;\n      return h(\n        'span',\n        {\n          style: {\n            display: 'inline-block',\n            width: '100%',\n          },\n        },\n        [\n          h('span', [\n            h(resolveComponent('Icon'), {\n              type: 'ios-paper-outline',\n              style: {\n                marginRight: '8px',\n              },\n            }),\n            h('span', data.title),\n          ]),\n          h(\n            'span',\n            {\n              style: {\n                display: 'inline-block',\n                float: 'right',\n                marginRight: '32px',\n              },\n            },\n            [\n              h(resolveComponent('Button'), {\n                ...this.buttonProps,\n                icon: 'ios-add',\n                style: {\n                  marginRight: '8px',\n                },\n                onClick: () => {\n                  this.append(data);\n                },\n              }),\n              h(resolveComponent('Button'), {\n                ...this.buttonProps,\n                icon: 'ios-remove',\n                onClick: () => {\n                  this.remove(root, node, data);\n                },\n              }),\n            ],\n          ),\n        ],\n      );\n    },\n    /**\n     * 侧边栏点击事件\n     * @param {Object} data\n     */\n    clickDir(data, root, node) {\n      let that = this;\n      that.navItem = data;\n      that.pathname = data.pathname;\n    },\n    append(data) {\n      const children = data.children || [];\n      children.push({\n        title: 'appended node',\n        expand: true,\n      });\n      this.$set(data, 'children', children);\n    },\n    remove(root, node, data) {\n      const parentKey = root.find((el) => el === node).parent;\n      const parent = root.find((el) => el.nodeKey === parentKey).node;\n      const index = parent.children.indexOf(data);\n      parent.children.splice(index, 1);\n    },\n    onMouseOver(root, node, data, e, d) {\n      console.log(root, node, data);\n    },\n    //\n    onDel(node) {\n      let method = node.cate_id ? routeDel : routeCateDel;\n      this.$msgbox({\n        title: '提示',\n        message: '删除后无法恢复，请确认后删除！',\n        showCancelButton: true,\n        cancelButtonText: '取消',\n        confirmButtonText: '确定',\n        iconClass: 'el-icon-warning',\n        confirmButtonClass: 'btn-custom-cancel',\n      })\n        .then(() => {\n          method(node.id)\n            .then((res) => {\n              this.$message.success(res.msg);\n              node.remove();\n            })\n            .catch((err) => {\n              this.$message.error(err.msg);\n            });\n        })\n        .catch(() => {});\n    },\n\n    onChangeName(params) {\n      if (params.eventType == 'blur') {\n        let data = {\n          name: params.newName,\n          id: params.id,\n        };\n        interfaceEditName(data)\n          .then((res) => {\n            this.$message.success(res.msg);\n          })\n          .catch((err) => {\n            this.$message.error(err.msg);\n          });\n      }\n    },\n\n    onAddNode(params) {\n      // this.$router.push({\n      //   path: '/admin/setting/system_out_interface/add',\n      //   query: {\n      //     pid: params.pid,\n      //   },\n      // });\n    },\n\n    addNode() {\n      var node = new TreeNode({ name: 'new node', isLeaf: false });\n      if (!this.data.children) this.data.children = [];\n      this.data.addChildren(node);\n    },\n\n    getNewTree() {\n      var vm = this;\n      function _dfs(oldNode) {\n        var newNode = {};\n\n        for (var k in oldNode) {\n          if (k !== 'children' && k !== 'parent') {\n            newNode[k] = oldNode[k];\n          }\n        }\n\n        if (oldNode.children && oldNode.children.length > 0) {\n          newNode.children = [];\n          for (var i = 0, len = oldNode.children.length; i < len; i++) {\n            newNode.children.push(_dfs(oldNode.children[i]));\n          }\n        }\n        return newNode;\n      }\n\n      vm.newTree = _dfs(vm.data);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.reset {\n  margin-left: 10px;\n}\n.b-r-1 {\n  border-right: 1px solid #f2f2f2;\n}\n.card-tree {\n  background: #fff;\n  height: 72px;\n  box-sizing: border-box;\n  overflow-x: scroll; /* 设置溢出滚动 */\n  white-space: nowrap;\n  overflow-y: hidden;\n  /* 隐藏滚动条 */\n  border-radius: 4px;\n  scrollbar-width: none; /* firefox */\n  -ms-overflow-style: none; /* IE 10+ */\n}\n.card-tree::-webkit-scrollbar {\n  display: none; /* Chrome Safari */\n}\n::v-deep .el-tabs__item {\n  height: 54px !important;\n  line-height: 54px !important;\n}\n.tabs {\n  background: #fff;\n  padding-left: 20px;\n  border-radius: 5px 5px 0 0;\n}\n.main {\n  width: 100%;\n  display: flex;\n  padding-bottom: 16px;\n  background: #fff;\n  border-radius: 6px;\n  .main-btn {\n    display: flex;\n    position: sticky;\n    padding: 0px 5px 0 15px;\n    width: 100%;\n    background: #fff;\n    top: 0px;\n    background-color: rgba(255, 255, 255, 0.6);\n    backdrop-filter: blur(4px);\n    z-index: 99;\n  }\n  .card-tree {\n    width: 290px;\n    height: calc(100vh - 205px);\n    overflow-y: scroll;\n  }\n  ::v-deep .tree {\n    .tree-list {\n      margin-left: 10px;\n      padding: 0 15px;\n      margin-top: 10px;\n    }\n    .vtl-caret {\n      padding-right: 2px;\n    }\n    .req-method {\n      display: block;\n      padding: 0px 2px;\n      font-size: 13px;\n      line-height: 13px;\n      margin-right: 5px;\n      border-radius: 4px;\n\n      text-transform: uppercase;\n    }\n    .tree-node {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      cursor: pointer;\n\n      padding: 3px 7px 3px 0;\n    }\n    .node {\n    }\n    .open {\n      font-weight: 500;\n      color: #333;\n    }\n  }\n  ::v-deep .vtl-node-main .vtl-operation {\n    position: absolute;\n    right: 20px;\n  }\n  ::v-deep .vtl-node-content {\n    width: 100%;\n  }\n  .pop-menu {\n    display: flex;\n    justify-content: space-between;\n  }\n  ::v-deep .vtl-node-content .add {\n    display: none;\n    margin-right: 10px;\n  }\n  ::v-deep .vtl-node-content:hover .add {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 50%;\n    width: 18px;\n    height: 18px;\n  }\n  ::v-deep .vtl-node-content:hover .add:hover {\n    background-color: #fff;\n    .pop-menu {\n      font-size: 16px;\n    }\n  }\n  ::v-deep .vtl-node-main {\n    padding: 3px 0;\n  }\n  ::v-deep .line1 {\n    display: table-caption;\n    white-space: nowrap;\n    width: 120px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  ::v-deep .ivu-form-item {\n    margin-bottom: 10px;\n  }\n  .right-card {\n    flex: 1;\n    ::v-deep .el-card__body {\n      max-height: calc(100vh - 205px);\n      overflow-y: scroll;\n      padding-bottom: 16px;\n    }\n    ::v-deep .el-form-item--small.el-form-item {\n      margin-bottom: 6px;\n    }\n  }\n  .data {\n    flex: 1;\n    .req-method {\n      text-transform: uppercase;\n      border-radius: 4px;\n      color: #fff;\n      padding: 3px 7px;\n    }\n    .eidt-sub {\n      display: flex;\n      justify-content: space-between;\n      .name {\n        font-size: 20px;\n        font-weight: 500;\n      }\n    }\n    .title {\n      font-size: 16px;\n      font-weight: 500;\n      margin-bottom: 15px;\n    }\n    .perW20 {\n      width: 500px;\n    }\n    .text-area {\n      white-space: pre-wrap;\n      word-break: break-word;\n    }\n  }\n  ::v-deep .ivu-tree-title {\n    width: 100% !important;\n  }\n  ::v-deep .vtl-tree-margin {\n    margin-left: 15px;\n  }\n  ::v-deep .ivu-btn-icon-only.ivu-btn-small {\n    width: 28px;\n  }\n  ::v-deep .tree-node > span {\n    font-size: 14px;\n  }\n  ::v-deep .tree-node.node > span {\n    font-size: 13px;\n  }\n  .nothing {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-height: 800px;\n    .box:hover {\n      border: 1px solid pink;\n    }\n    .box {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n      width: 150px;\n      height: 200px;\n      margin: 0 20px;\n      border-radius: 10px;\n      cursor: pointer;\n      overflow: hidden;\n      border: 1px solid #fff;\n      .icon {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n        height: 150px;\n        font-size: 40px;\n        color: #2d8cf0;\n        background: #f1f1f1;\n      }\n      .text {\n        width: 100%;\n        height: 50px;\n        background: #ddd;\n        text-align: center;\n        line-height: 50px;\n        font-size: 14px;\n        font-weight: 500;\n      }\n    }\n  }\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;;;;AAqmBA,SACAA,SAAA,EACAC,SAAA,IAAAA,UAAA,EACAC,SAAA,EACAC,QAAA,EACAC,SAAA,EACAC,iBAAA,EACAC,QAAA,EACAC,SAAA,EACAC,YAAA,QACA;AACA,SAAAC,WAAA,EAAAC,IAAA,EAAAC,QAAA;AACA,OAAAC,SAAA;AAEA,SAAAC,QAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAN,WAAA,EAAAA,WAAA;IACAG,SAAA,EAAAA;EACA;EACAI,IAAA,WAAAA,KAAA;IACA;MACAC,KAAA;MACAC,MAAA;MACAC,SAAA;MACAC,cAAA;MACAC,YAAA;MACAC,IAAA;QACAC,EAAA;QACAC,EAAA;QACAC,EAAA;QACAC,EAAA;QACAC,EAAA;MACA;MACAC,YAAA;QACAC,KAAA;UAAAC,OAAA;UAAAC,OAAA;UAAAC,GAAA;QAAA;MACA;MACAC,OAAA;MACAC,WAAA,GACA;QACAjB,KAAA;QACAkB,KAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;QACAlB,KAAA;QACAkB,KAAA;MACA,GACA;QACAlB,KAAA;QACAkB,KAAA;MACA,GACA;QACAlB,KAAA;QACAkB,KAAA;MACA,GACA;QACAlB,KAAA;QACAkB,KAAA;MACA,EACA;MACAC,QAAA,GACA;QACAnB,KAAA;QACAkB,KAAA;MACA,GACA;QACAlB,KAAA;QACAkB,KAAA;MACA,GACA;QACAlB,KAAA;QACAkB,KAAA;MACA,GACA;QACAlB,KAAA;QACAkB,KAAA;MACA,GACA;QACAlB,KAAA;QACAkB,KAAA;MACA,GACA;QACAlB,KAAA;QACAkB,KAAA;MACA,GACA;QACAlB,KAAA;QACAkB,KAAA;MACA,EACA;MACAE,eAAA,GACA;QACApB,KAAA;QACAkB,KAAA;MACA,GACA;QACAlB,KAAA;QACAkB,KAAA;MACA,GACA;QACAlB,KAAA;QACAkB,KAAA;MACA,GACA;QACAlB,KAAA;QACAkB,KAAA;MACA,EACA;MACAG,WAAA;MAAA;MACAC,QAAA,EAAAC,SAAA;MACAC,WAAA;QACAC,IAA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","ignoreList":[]}]}