{"remainingRequest":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\product\\productAdd\\components\\virtualTabel.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\product\\productAdd\\components\\virtualTabel.vue","mtime":1750730640573},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\babel.config.js","mtime":1679965410000},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\.babelrc","mtime":1679965410000},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1753254258567},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1753254260598}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["throttle","name","props","data","type","Array","required","height","Number","default","buffer","keyProp","String","throttleTime","sizes","computed","offsetMap","_ref","res","total","i","length","key","curSize","size","methods","initData","_this","renderData","top","undefined","bottom","start","end","scroller","$el","querySelector","setTimeout","handleScroll","onScroll","addEventListener","window","updateSizes","_this2","rows","querySelectorAll","from","forEach","row","index","item","offsetHeight","$set","shouldUpdate","arguments","calcRenderData","calcPosition","updatePosition","$emit","getOffsetTop","getSize","scrollTop","l","r","mid","Math","floor","midVal","midNextVal","offsetTop","slice","_this3","last","wrapHeight","classNames","className","el","wrapEl","document","createElement","innerEl","appendChild","children","insertBefore","firstChild","style","transform","concat","_this4","timer","clearTimeout","update","scrollTo","_this5","stop","$nextTick","reset","watch","created","_this6","beforeDestroy","removeEventListener"],"sources":["src/pages/product/productAdd/components/virtualTabel.vue"],"sourcesContent":["<template>\n  <div>\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nimport throttle from 'lodash/throttle';\n\nexport default {\n  name: 'el-table-virtual-scroll',\n  props: {\n    data: {\n      type: Array,\n      required: true,\n    },\n    height: {\n      type: Number,\n      default: 60,\n    },\n    buffer: {\n      type: Number,\n      default: 500,\n    },\n    keyProp: {\n      type: String,\n      default: 'id',\n    },\n    throttleTime: {\n      type: Number,\n      default: 100,\n    },\n  },\n  data() {\n    return {\n      sizes: {}, // 尺寸映射（依赖响应式）\n    };\n  },\n  computed: {\n    // 计算出每个item（的key值）到滚动容器顶部的距离\n    offsetMap({ keyProp, height, sizes, data }) {\n      const res = {};\n      let total = 0;\n      for (let i = 0; i < data.length; i++) {\n        const key = data[i][keyProp];\n        res[key] = total;\n\n        const curSize = sizes[key];\n        const size = typeof curSize === 'number' ? curSize : height;\n        total += size;\n      }\n      return res;\n    },\n  },\n  methods: {\n    // 初始化数据\n    initData() {\n      // 可视范围内显示数据\n      this.renderData = [];\n      // 页面可视范围顶端、底部\n      this.top = undefined;\n      this.bottom = undefined;\n      // 截取页面可视范围内显示数据的开始和结尾索引\n      this.start = 0;\n      this.end = undefined;\n\n      this.scroller = this.$el.querySelector('.el-table__body-wrapper');\n\n      // 初次执行\n      setTimeout(() => {\n        this.handleScroll();\n      }, 100);\n\n      // 监听事件\n      this.onScroll = throttle(this.handleScroll, this.throttleTime);\n      this.scroller.addEventListener('scroll', this.handleScroll);\n      window.addEventListener('resize', this.onScroll);\n    },\n\n    // 更新尺寸（高度）\n    updateSizes() {\n      const rows = this.$el.querySelectorAll('.el-table__body > tbody > .el-table__row');\n\n      Array.from(rows).forEach((row, index) => {\n        const item = this.renderData[index];\n        if (!item) return;\n\n        const key = item[this.keyProp];\n        const offsetHeight = row.offsetHeight;\n\n        if (this.sizes[key] !== offsetHeight) {\n          this.$set(this.sizes, key, offsetHeight);\n        }\n      });\n    },\n\n    // 处理滚动事件\n    handleScroll(shouldUpdate = true) {\n      // 更新当前尺寸（高度）\n      this.updateSizes();\n      // 计算renderData\n      this.calcRenderData();\n      // 计算位置\n      this.calcPosition();\n      shouldUpdate && this.updatePosition();\n      // 触发事件\n      this.$emit('change', this.renderData, this.start, this.end);\n    },\n\n    // 获取某条数据offsetTop\n    getOffsetTop(index) {\n      const item = this.data[index];\n      if (item) {\n        return this.offsetMap[item[this.keyProp]] || 0;\n      }\n      return 0;\n    },\n\n    // 获取某条数据的尺寸\n    getSize(index) {\n      const item = this.data[index];\n      if (item) {\n        const key = item[this.keyProp];\n        return this.sizes[key] || this.height;\n      }\n      return this.height;\n    },\n\n    // 计算只在视图上渲染的数据\n    calcRenderData() {\n      const { scroller, data, buffer } = this;\n      // 计算可视范围顶部、底部\n      const top = scroller.scrollTop - buffer;\n      const bottom = scroller.scrollTop + scroller.offsetHeight + buffer;\n\n      // 二分法计算可视范围内的开始的第一个内容\n      let l = 0;\n      let r = data.length - 1;\n      let mid = 0;\n      while (l <= r) {\n        mid = Math.floor((l + r) / 2);\n        const midVal = this.getOffsetTop(mid);\n        if (midVal < top) {\n          const midNextVal = this.getOffsetTop(mid + 1);\n          if (midNextVal > top) break;\n          l = mid + 1;\n        } else {\n          r = mid - 1;\n        }\n      }\n\n      // 计算渲染内容的开始、结束索引\n      let start = mid;\n      let end = data.length - 1;\n      for (let i = start + 1; i < data.length; i++) {\n        const offsetTop = this.getOffsetTop(i);\n        if (offsetTop >= bottom) {\n          end = i;\n          break;\n        }\n      }\n\n      // 开始索引始终保持偶数，如果为奇数，则加1使其保持偶数【确保表格行的偶数数一致，不会导致斑马纹乱序显示】\n      if (start % 2) {\n        start = start - 1;\n      }\n      // console.log(start, end, 'start end')\n\n      this.top = top;\n      this.bottom = bottom;\n      this.start = start;\n      this.end = end;\n      this.renderData = data.slice(start, end + 1);\n    },\n\n    // 计算位置\n    calcPosition() {\n      const last = this.data.length - 1;\n      // 计算内容总高度\n      const wrapHeight = this.getOffsetTop(last) + this.getSize(last);\n      // 计算当前滚动位置需要撑起的高度\n      const offsetTop = this.getOffsetTop(this.start);\n\n      // 设置dom位置\n      const classNames = [\n        '.el-table__body-wrapper',\n        '.el-table__fixed-right .el-table__fixed-body-wrapper',\n        '.el-table__fixed .el-table__fixed-body-wrapper',\n      ];\n      classNames.forEach((className) => {\n        const el = this.$el.querySelector(className);\n        if (!el) return;\n\n        // 创建wrapEl、innerEl\n        if (!el.wrapEl) {\n          const wrapEl = document.createElement('div');\n          const innerEl = document.createElement('div');\n          wrapEl.appendChild(innerEl);\n          innerEl.appendChild(el.children[0]);\n          el.insertBefore(wrapEl, el.firstChild);\n          el.wrapEl = wrapEl;\n          el.innerEl = innerEl;\n        }\n\n        if (el.wrapEl) {\n          // 设置高度\n          el.wrapEl.style.height = wrapHeight + 'px';\n          // 设置transform撑起高度\n          el.innerEl.style.transform = `translateY(${offsetTop}px)`;\n          // 设置paddingTop撑起高度\n          // el.innerEl.style.paddingTop = `${offsetTop}px`\n        }\n      });\n    },\n\n    // 空闲时更新位置\n    updatePosition() {\n      this.timer && clearTimeout(this.timer);\n      this.timer = setTimeout(() => {\n        this.timer && clearTimeout(this.timer);\n        // 传入false，避免一直循环调用\n        this.handleScroll(false);\n      }, this.throttleTime + 10);\n    },\n\n    // 【外部调用】更新\n    update() {\n      this.handleScroll();\n    },\n\n    // 【外部调用】滚动到第几行\n    scrollTo(index, stop = false) {\n      const item = this.data[index];\n      if (item && this.scroller) {\n        this.updateSizes();\n        this.calcRenderData();\n\n        this.$nextTick(() => {\n          const offsetTop = this.getOffsetTop(index);\n          this.scroller.scrollTop = offsetTop;\n\n          // 调用两次scrollTo，第一次滚动时，如果表格行初次渲染高度发生变化时，会导致滚动位置有偏差，此时需要第二次执行滚动，确保滚动位置无误\n          if (!stop) {\n            setTimeout(() => {\n              this.scrollTo(index, true);\n            }, 50);\n          }\n        });\n      }\n    },\n\n    // 【外部调用】重置\n    reset() {\n      this.sizes = {};\n      this.scrollTo(0, false);\n    },\n  },\n  watch: {\n    data() {\n      this.update();\n    },\n  },\n  created() {\n    this.$nextTick(() => {\n      this.initData();\n    });\n  },\n  beforeDestroy() {\n    if (this.scroller) {\n      this.scroller.removeEventListener('scroll', this.onScroll);\n      window.removeEventListener('resize', this.onScroll);\n    }\n  },\n};\n</script>\n\n<style lang=\"less\" scoped></style>\n"],"mappings":"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","ignoreList":[]}]}