{"remainingRequest":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\thread-loader\\dist\\cjs.js!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??ref--6!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\kefu\\pc\\components\\rightMenu.vue?vue&type=template&id=9c9ade46&scoped=true","dependencies":[{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\kefu\\pc\\components\\rightMenu.vue","mtime":1731313973074},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\babel.config.js","mtime":1679965410000},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\.babelrc","mtime":1679965410000},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1753254256661},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1753254258567},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1753254263096},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1753254260598}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}