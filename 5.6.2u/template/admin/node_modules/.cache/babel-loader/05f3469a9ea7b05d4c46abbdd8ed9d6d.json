{"remainingRequest":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\thread-loader\\dist\\cjs.js!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\user\\list\\handle\\userDetails.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\user\\list\\handle\\userDetails.vue","mtime":1745474910466},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\babel.config.js","mtime":1679965410000},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\.babelrc","mtime":1679965410000},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1753254256661},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1753254258567},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1753254260598}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvciBmcm9tICJEOi9wYy96bS9cdTY2MDZcdTY2MEVcdTk2MTRcdTdGRDRcdTc5RDFcdTYyODBcdTY3MDlcdTk2NTBcdTUxNkNcdTUzRjgvXHU2RTkwXHU3ODAxL0NSTUVCLUJaIHY1LjYuMigyMDI1MDYzMCkvdGVtcGxhdGUvYWRtaW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3JlZ2VuZXJhdG9yLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L3BjL3ptL1x1NjYwNlx1NjYwRVx1OTYxNFx1N0ZENFx1NzlEMVx1NjI4MFx1NjcwOVx1OTY1MFx1NTE2Q1x1NTNGOC9cdTZFOTBcdTc4MDEvQ1JNRUItQlogdjUuNi4yKDIwMjUwNjMwKS90ZW1wbGF0ZS9hZG1pbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgeyBkZXRhaWxzQXBpLCBpbmZvQXBpIH0gZnJvbSAnQC9hcGkvdXNlcic7CmltcG9ydCB1c2VySW5mbyBmcm9tICcuL3VzZXJJbmZvJzsKaW1wb3J0IHVzZXJFZGl0Rm9ybSBmcm9tICcuL3VzZXJFZGl0Rm9ybSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAndXNlckRldGFpbHMnLAogIGNvbXBvbmVudHM6IHsKICAgIHVzZXJJbmZvOiB1c2VySW5mbywKICAgIHVzZXJFZGl0Rm9ybTogdXNlckVkaXRGb3JtCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaXNFZGl0OiBmYWxzZSwKICAgICAgdGhlbWUyOiAnbGlnaHQnLAogICAgICBsaXN0OiBbewogICAgICAgIHZhbDogJ29yZGVyJywKICAgICAgICBsYWJlbDogJ+a2iOi0ueiusOW9lScKICAgICAgfSwgewogICAgICAgIHZhbDogJ2ludGVncmFsJywKICAgICAgICBsYWJlbDogJ+enr+WIhuaYjue7hicKICAgICAgfSwgewogICAgICAgIHZhbDogJ3NpZ24nLAogICAgICAgIGxhYmVsOiAn562+5Yiw6K6w5b2VJwogICAgICB9LCB7CiAgICAgICAgdmFsOiAnY291cG9uJywKICAgICAgICBsYWJlbDogJ+aMgeacieS8mOaDoOWIuCcKICAgICAgfSwgewogICAgICAgIHZhbDogJ2JhbGFuY2VfY2hhbmdlJywKICAgICAgICBsYWJlbDogJ+S9memineWPmOWKqCcKICAgICAgfSwgewogICAgICAgIHZhbDogJ3NwcmVhZCcsCiAgICAgICAgbGFiZWw6ICflpb3lj4vlhbPns7snCiAgICAgIH1dLAogICAgICBtb2RhbHM6IGZhbHNlLAogICAgICBzcGluU2hvdzogZmFsc2UsCiAgICAgIGRldGFpbHNEYXRhOiBbXSwKICAgICAgdXNlcklkOiAwLAogICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgdXNlckZyb206IHsKICAgICAgICB0eXBlOiAnb3JkZXInLAogICAgICAgIHBhZ2U6IDEsCiAgICAgICAgLy8g5b2T5YmN6aG1CiAgICAgICAgbGltaXQ6IDIwIC8vIOavj+mhteaYvuekuuadoeaVsAogICAgICB9LAogICAgICB0b3RhbDogMCwKICAgICAgY29sdW1uczogW10sCiAgICAgIHVzZXJMaXN0czogW10sCiAgICAgIHBzSW5mbzoge30sCiAgICAgIGFjdGl2ZU5hbWU6ICd1c2VyJwogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7fSwKICBtZXRob2RzOiB7CiAgICBlZGl0OiBmdW5jdGlvbiBlZGl0KCkgewogICAgICB0aGlzLmFjdGl2ZU5hbWUgPSAndXNlcic7CiAgICAgIHRoaXMuaXNFZGl0ID0gIXRoaXMuaXNFZGl0OwogICAgfSwKICAgIGVkaXRTYXZlOiBmdW5jdGlvbiBlZGl0U2F2ZSgpIHsKICAgICAgdGhpcy4kcmVmcy5lZGl0Rm9ybS5zZXRVc2VyKCk7CiAgICB9LAogICAgZHJhQ2hhbmdlOiBmdW5jdGlvbiBkcmFDaGFuZ2UoKSB7CiAgICAgIHRoaXMuaXNFZGl0ID0gZmFsc2U7CiAgICB9LAogICAgLy8g5Lya5ZGY6K+m5oOFCiAgICBnZXREZXRhaWxzOiBmdW5jdGlvbiBnZXREZXRhaWxzKGlkKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgIHRoaXMuYWN0aXZlTmFtZSA9ICd1c2VyJzsKICAgICAgdGhpcy51c2VySWQgPSBpZDsKICAgICAgdGhpcy5zcGluU2hvdyA9IHRydWU7CiAgICAgIHRoaXMuaXNFZGl0ID0gZmFsc2U7CiAgICAgIGRldGFpbHNBcGkoaWQpLnRoZW4oLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3IoKS5tKGZ1bmN0aW9uIF9jYWxsZWUocmVzKSB7CiAgICAgICAgICB2YXIgZGF0YTsKICAgICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3IoKS53KGZ1bmN0aW9uIChfY29udGV4dCkgewogICAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dC5uKSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWYgKHJlcy5zdGF0dXMgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICBkYXRhID0gcmVzLmRhdGE7CiAgICAgICAgICAgICAgICAgIF90aGlzLmRldGFpbHNEYXRhID0gZGF0YS5oZWFkZXJMaXN0OwogICAgICAgICAgICAgICAgICBfdGhpcy5wc0luZm8gPSBkYXRhLnBzX2luZm87CiAgICAgICAgICAgICAgICAgIC8vIHRoaXMuY2hhbmdlVHlwZSgndXNlcicpOwogICAgICAgICAgICAgICAgICBfdGhpcy5zcGluU2hvdyA9IGZhbHNlOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgX3RoaXMuc3BpblNob3cgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgX3RoaXMuJG1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmEoMik7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sIF9jYWxsZWUpOwogICAgICAgIH0pKTsKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgIH07CiAgICAgIH0oKSkuY2F0Y2goZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzLnNwaW5TaG93ID0gZmFsc2U7CiAgICAgICAgX3RoaXMuJG1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgIH0pOwogICAgfSwKICAgIGNoYW5nZVRhYjogZnVuY3Rpb24gY2hhbmdlVGFiKHRhYikgewogICAgICB0aGlzLmFjdGl2ZU5hbWUgPSB0YWIubmFtZTsKICAgICAgdGhpcy5jaGFuZ2VUeXBlKCk7CiAgICB9LAogICAgLy8gdGFi6YCJ6aG5CiAgICBjaGFuZ2VUeXBlOiBmdW5jdGlvbiBjaGFuZ2VUeXBlKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgdGhpcy51c2VyRnJvbS50eXBlID0gdGhpcy5hY3RpdmVOYW1lOwogICAgICB0aGlzLmlzRWRpdCA9IGZhbHNlOwogICAgICBpZiAodGhpcy5hY3RpdmVOYW1lID09ICd1c2VyJykgcmV0dXJuOwogICAgICBpZiAodGhpcy51c2VyRnJvbS50eXBlID09PSAnJykgewogICAgICAgIHRoaXMudXNlckZyb20udHlwZSA9ICdvcmRlcic7CiAgICAgIH0KICAgICAgdmFyIGRhdGEgPSB7CiAgICAgICAgaWQ6IHRoaXMudXNlcklkLAogICAgICAgIGRhdGFzOiB0aGlzLnVzZXJGcm9tCiAgICAgIH07CiAgICAgIGluZm9BcGkoZGF0YSkudGhlbigvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBfcmVmMiA9IF9hc3luY1RvR2VuZXJhdG9yKC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3IoKS5tKGZ1bmN0aW9uIF9jYWxsZWUyKHJlcykgewogICAgICAgICAgdmFyIF90OwogICAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvcigpLncoZnVuY3Rpb24gKF9jb250ZXh0MikgewogICAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDIubikgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGlmICghKHJlcy5zdGF0dXMgPT09IDIwMCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm4gPSA4OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF90ID0gX3RoaXMyLnVzZXJGcm9tLnR5cGU7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubiA9IF90ID09PSAnb3JkZXInID8gMSA6IF90ID09PSAnaW50ZWdyYWwnID8gMiA6IF90ID09PSAnc2lnbicgPyAzIDogX3QgPT09ICdjb3Vwb24nID8gNCA6IF90ID09PSAnYmFsYW5jZV9jaGFuZ2UnID8gNSA6IDY7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgICBfdGhpczIuY29sdW1ucyA9IFt7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiAn6K6i5Y2VSUQnLAogICAgICAgICAgICAgICAgICBrZXk6ICdvcmRlcl9pZCcsCiAgICAgICAgICAgICAgICAgIG1pbldpZHRoOiAxNjAKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgdGl0bGU6ICfmlLbotKfkuronLAogICAgICAgICAgICAgICAgICBrZXk6ICdyZWFsX25hbWUnLAogICAgICAgICAgICAgICAgICBtaW5XaWR0aDogMTAwCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiAn5ZWG5ZOB5pWw6YePJywKICAgICAgICAgICAgICAgICAga2V5OiAndG90YWxfbnVtJywKICAgICAgICAgICAgICAgICAgbWluV2lkdGg6IDkwCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiAn5a6e5LuY6YeR6aKdJywKICAgICAgICAgICAgICAgICAga2V5OiAncGF5X3ByaWNlJywKICAgICAgICAgICAgICAgICAgbWluV2lkdGg6IDEyMAogICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICB0aXRsZTogJ+S6pOaYk+WujOaIkOaXtumXtCcsCiAgICAgICAgICAgICAgICAgIGtleTogJ3BheV90aW1lJywKICAgICAgICAgICAgICAgICAgbWluV2lkdGg6IDEyMAogICAgICAgICAgICAgICAgfV07CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmEoMywgNyk7CiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgX3RoaXMyLmNvbHVtbnMgPSBbewogICAgICAgICAgICAgICAgICB0aXRsZTogJ+adpea6kC/nlKjpgJQnLAogICAgICAgICAgICAgICAgICBrZXk6ICd0aXRsZScsCiAgICAgICAgICAgICAgICAgIG1pbldpZHRoOiAxMjAKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgdGl0bGU6ICfnp6/liIblj5jljJYnLAogICAgICAgICAgICAgICAgICBzbG90OiAnbnVtYmVyJywKICAgICAgICAgICAgICAgICAgbWluV2lkdGg6IDEyMAogICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICB0aXRsZTogJ+WPmOWMluWQjuenr+WIhicsCiAgICAgICAgICAgICAgICAgIGtleTogJ2JhbGFuY2UnLAogICAgICAgICAgICAgICAgICBtaW5XaWR0aDogMTIwCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiAn5pel5pyfJywKICAgICAgICAgICAgICAgICAga2V5OiAnYWRkX3RpbWUnLAogICAgICAgICAgICAgICAgICBtaW5XaWR0aDogMTIwCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiAn5aSH5rOoJywKICAgICAgICAgICAgICAgICAga2V5OiAnbWFyaycsCiAgICAgICAgICAgICAgICAgIG1pbldpZHRoOiAxMjAKICAgICAgICAgICAgICAgIH1dOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hKDMsIDcpOwogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIF90aGlzMi5jb2x1bW5zID0gW3sKICAgICAgICAgICAgICAgICAgdGl0bGU6ICfliqjkvZwnLAogICAgICAgICAgICAgICAgICBrZXk6ICd0aXRsZScsCiAgICAgICAgICAgICAgICAgIG1pbldpZHRoOiAxMjAKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgdGl0bGU6ICfojrflvpfnp6/liIYnLAogICAgICAgICAgICAgICAgICBrZXk6ICdudW1iZXInLAogICAgICAgICAgICAgICAgICBtaW5XaWR0aDogMTIwCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiAn562+5Yiw5pe26Ze0JywKICAgICAgICAgICAgICAgICAga2V5OiAnYWRkX3RpbWUnLAogICAgICAgICAgICAgICAgICBtaW5XaWR0aDogMTIwCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiAn5aSH5rOoJywKICAgICAgICAgICAgICAgICAga2V5OiAnbWFyaycsCiAgICAgICAgICAgICAgICAgIG1pbldpZHRoOiAxMjAKICAgICAgICAgICAgICAgIH1dOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hKDMsIDcpOwogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIF90aGlzMi5jb2x1bW5zID0gW3sKICAgICAgICAgICAgICAgICAgdGl0bGU6ICfkvJjmg6DliLjlkI3np7AnLAogICAgICAgICAgICAgICAgICBrZXk6ICdjb3Vwb25fdGl0bGUnLAogICAgICAgICAgICAgICAgICBtaW5XaWR0aDogMTIwCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiAn6Z2i5YC8JywKICAgICAgICAgICAgICAgICAga2V5OiAnY291cG9uX3ByaWNlJywKICAgICAgICAgICAgICAgICAgbWluV2lkdGg6IDEyMAogICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICB0aXRsZTogJ+acieaViOacnyjlpKkpJywKICAgICAgICAgICAgICAgICAga2V5OiAnY291cG9uX3RpbWUnLAogICAgICAgICAgICAgICAgICBtaW5XaWR0aDogMTIwCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiAn6aKG5Y+W5pe26Ze0JywKICAgICAgICAgICAgICAgICAga2V5OiAnX2FkZF90aW1lJywKICAgICAgICAgICAgICAgICAgbWluV2lkdGg6IDEyMAogICAgICAgICAgICAgICAgfV07CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmEoMywgNyk7CiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgX3RoaXMyLmNvbHVtbnMgPSBbewogICAgICAgICAgICAgICAgICB0aXRsZTogJ+WKqOS9nCcsCiAgICAgICAgICAgICAgICAgIGtleTogJ3RpdGxlJywKICAgICAgICAgICAgICAgICAgbWluV2lkdGg6IDEyMAogICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICB0aXRsZTogJ+S9memineWPmOWKqCcsCiAgICAgICAgICAgICAgICAgIHNsb3Q6ICdudW1iZXInLAogICAgICAgICAgICAgICAgICBtaW5XaWR0aDogMTIwCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiAn5b2T5YmN5L2Z6aKdJywKICAgICAgICAgICAgICAgICAga2V5OiAnYmFsYW5jZScsCiAgICAgICAgICAgICAgICAgIG1pbldpZHRoOiAxMjAKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgdGl0bGU6ICfliJvlu7rml7bpl7QnLAogICAgICAgICAgICAgICAgICBrZXk6ICdhZGRfdGltZScsCiAgICAgICAgICAgICAgICAgIG1pbldpZHRoOiAxMjAKICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgdGl0bGU6ICflpIfms6gnLAogICAgICAgICAgICAgICAgICBrZXk6ICdtYXJrJywKICAgICAgICAgICAgICAgICAgbWluV2lkdGg6IDEyMAogICAgICAgICAgICAgICAgfV07CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmEoMywgNyk7CiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgX3RoaXMyLmNvbHVtbnMgPSBbewogICAgICAgICAgICAgICAgICB0aXRsZTogJ0lEJywKICAgICAgICAgICAgICAgICAga2V5OiAndWlkJywKICAgICAgICAgICAgICAgICAgbWluV2lkdGg6IDEyMAogICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICB0aXRsZTogJ+aYteensCcsCiAgICAgICAgICAgICAgICAgIGtleTogJ25pY2tuYW1lJywKICAgICAgICAgICAgICAgICAgbWluV2lkdGg6IDEyMAogICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICB0aXRsZTogJ+etiee6pycsCiAgICAgICAgICAgICAgICAgIGtleTogJ3R5cGUnLAogICAgICAgICAgICAgICAgICBtaW5XaWR0aDogMTIwCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgIHRpdGxlOiAn5Yqg5YWl5pe26Ze0JywKICAgICAgICAgICAgICAgICAga2V5OiAnYWRkX3RpbWUnLAogICAgICAgICAgICAgICAgICBtaW5XaWR0aDogMTIwCiAgICAgICAgICAgICAgICB9XTsKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBfdGhpczIuJG5leHRUaWNrKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgICAgICAgIHZhciBkYXRhID0gcmVzLmRhdGE7CiAgICAgICAgICAgICAgICAgIF90aGlzMi51c2VyTGlzdHMgPSBkYXRhLmxpc3Q7CiAgICAgICAgICAgICAgICAgIF90aGlzMi50b3RhbCA9IGRhdGEuY291bnQ7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIF90aGlzMi5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubiA9IDk7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBfdGhpczIubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICAgICAgX3RoaXMyLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYSgyKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICAgIH0pKTsKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94MikgewogICAgICAgICAgcmV0dXJuIF9yZWYyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgfTsKICAgICAgfSgpKS5jYXRjaChmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMyLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICBfdGhpczIuJG1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},null]}