{"remainingRequest":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\system\\event\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\system\\event\\index.vue","mtime":1731313973103},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1753254258567},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1753254260598}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IGV2ZW50SW5kZXgsIGV2ZW50U2hvd1RpbWVyIH0gZnJvbSAnQC9hcGkvc3lzdGVtJzsKaW1wb3J0IGNyZWF0VGFzayBmcm9tICcuL2NyZWF0ZU1vZGFsLnZ1ZSc7CmltcG9ydCBzZXR0aW5nIGZyb20gJ0Avc2V0dGluZyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnc3lzdGVtX2V2ZW50JywKICBjb21wb25lbnRzOiB7IGNyZWF0VGFzayB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgdGFibGVEYXRhOiBbXSwKICAgICAgcGFnZTogMSwKICAgICAgbGltaXQ6IDE1LAogICAgICB0b3RhbDogMSwKICAgICAgYXBpQmFzZVVSTDogJycsCiAgICAgIGhlYWRlckxpc3Q6IFsKICAgICAgICB7IGxhYmVsOiAn57O757uf5Lu75YqhJywgdmFsdWU6ICcwJyB9LAogICAgICAgIHsgbGFiZWw6ICfoh6rlrprkuYnku7vliqEnLCB2YWx1ZTogJzEnIH0sCiAgICAgIF0sCiAgICAgIGN1cnJlbnRUYWI6ICcwJywKICAgIH07CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5hcGlCYXNlVVJMID0gc2V0dGluZy5hcGlCYXNlVVJMOwogICAgdGhpcy5nZXRMaXN0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDliJfooagKICAgIGdldExpc3QoKSB7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgIGV2ZW50SW5kZXgoewogICAgICAgIHBhZ2U6IHRoaXMucGFnZSwKICAgICAgICBsaW1pdDogdGhpcy5saW1pdCwKICAgICAgfSkKICAgICAgICAudGhlbigocmVzKSA9PiB7CiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIGxldCB7IGNvdW50LCBsaXN0IH0gPSByZXMuZGF0YTsKICAgICAgICAgIHRoaXMudG90YWwgPSBjb3VudDsKICAgICAgICAgIHRoaXMudGFibGVEYXRhID0gbGlzdDsKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgocmVzKSA9PiB7CiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgICAgfSk7CiAgICB9LAogICAgYWRkVGFzaygpIHsKICAgICAgdGhpcy4kcmVmcy5hZGRUYXNrLmV2ZW50SW5mbygpOwogICAgfSwKICAgIGVkaXQoaWQpIHsKICAgICAgdGhpcy4kcmVmcy5hZGRUYXNrLmV2ZW50SW5mbyhpZCk7CiAgICB9LAogICAgLy8g5Yig6ZmkCiAgICBoYW5kbGVEZWxldGUocm93LCB0aXQsIG51bSkgewogICAgICBsZXQgZGVsZnJvbURhdGEgPSB7CiAgICAgICAgdGl0bGU6IHRpdCwKICAgICAgICBudW06IG51bSwKICAgICAgICB1cmw6IGBzeXN0ZW0vZXZlbnQvZGVsLyR7cm93LmlkfWAsCiAgICAgICAgbWV0aG9kOiAnZGVsZXRlJywKICAgICAgICBpZHM6ICcnLAogICAgICB9OwogICAgICB0aGlzLiRtb2RhbFN1cmUoZGVsZnJvbURhdGEpCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKHJlcykgPT4gewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICB9KTsKICAgIH0sCiAgICAvLyDmmK/lkKblvIDlkK8KICAgIGhhbmRsZUNoYW5nZSh7IGlkLCBpc19vcGVuIH0pIHsKICAgICAgZXZlbnRTaG93VGltZXIoaWQsIGlzX29wZW4pCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKHJlcy5tc2cpOwogICAgICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKHJlcykgPT4gewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICB9KTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAmEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/system/event","sourcesContent":["<template>\n  <div>\n    <el-card :bordered=\"false\" shadow=\"never\">\n      <el-alert type=\"warning\" :closable=\"false\">\n        <template slot=\"title\">\n          自定义事件说明：<br />\n          1、新增的事件会在对应的事件类型相关的流程中触发，例：选择用户登录，则在用户登录时执行代码。<br />\n          2、可以使用对应事件类型中对应的参数，例：$data['nickname']、$data['phone']等。<br />\n          3、调用类的时候请写入完整路径，例：\\think\\facade\\Db、\\app\\services\\other\\CacheServices::class等。<br />\n        </template>\n      </el-alert>\n      <el-button type=\"primary\" v-db-click @click=\"addTask\" class=\"mt14\">新增系统事件</el-button>\n      <el-table :data=\"tableData\" v-loading=\"loading\" class=\"ivu-mt\">\n        <el-table-column label=\"编号\" min-width=\"100\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.id }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"事件名\" min-width=\"150\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.name }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"事件类型\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.mark_name }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"是否开启\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <el-switch\n              class=\"defineSwitch\"\n              :active-value=\"1\"\n              :inactive-value=\"0\"\n              v-model=\"scope.row.is_open\"\n              size=\"large\"\n              @change=\"handleChange(scope.row)\"\n              active-text=\"开启\"\n              inactive-text=\"关闭\"\n            >\n            </el-switch>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"创建时间\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.add_time }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"100\">\n          <template slot-scope=\"scope\">\n            <a v-db-click @click=\"edit(scope.row.id)\">编辑</a>\n            <el-divider direction=\"vertical\"></el-divider>\n            <a v-permission=\"'seckill'\" v-db-click @click=\"handleDelete(scope.row, '删除自定事件', scope.$index)\"\n              >删除</a\n            >\n          </template>\n        </el-table-column>\n      </el-table>\n      <div class=\"acea-row row-right page\">\n        <pagination v-if=\"total\" :total=\"total\" :page.sync=\"page\" :limit.sync=\"limit\" @pagination=\"getList\" />\n      </div>\n      <creatTask ref=\"addTask\" :currentTab=\"currentTab\" @submitAsk=\"getList\"></creatTask>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { eventIndex, eventShowTimer } from '@/api/system';\nimport creatTask from './createModal.vue';\nimport setting from '@/setting';\nexport default {\n  name: 'system_event',\n  components: { creatTask },\n  data() {\n    return {\n      loading: false,\n      tableData: [],\n      page: 1,\n      limit: 15,\n      total: 1,\n      apiBaseURL: '',\n      headerList: [\n        { label: '系统任务', value: '0' },\n        { label: '自定义任务', value: '1' },\n      ],\n      currentTab: '0',\n    };\n  },\n  created() {\n    this.apiBaseURL = setting.apiBaseURL;\n    this.getList();\n  },\n  methods: {\n    // 列表\n    getList() {\n      this.loading = true;\n      eventIndex({\n        page: this.page,\n        limit: this.limit,\n      })\n        .then((res) => {\n          this.loading = false;\n          let { count, list } = res.data;\n          this.total = count;\n          this.tableData = list;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$message.error(res.msg);\n        });\n    },\n    addTask() {\n      this.$refs.addTask.eventInfo();\n    },\n    edit(id) {\n      this.$refs.addTask.eventInfo(id);\n    },\n    // 删除\n    handleDelete(row, tit, num) {\n      let delfromData = {\n        title: tit,\n        num: num,\n        url: `system/event/del/${row.id}`,\n        method: 'delete',\n        ids: '',\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$message.success(res.msg);\n          this.getList();\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    // 是否开启\n    handleChange({ id, is_open }) {\n      eventShowTimer(id, is_open)\n        .then((res) => {\n          this.$message.success(res.msg);\n          this.getList();\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.ivu-mt {\n  padding-top: 10px;\n}\n</style>\n"]}]}