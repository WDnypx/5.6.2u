{"remainingRequest":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\layout\\navBars\\tagsView\\tagsView.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\layout\\navBars\\tagsView\\tagsView.vue","mtime":1729502699247},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1753254256661},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1753254258567},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1753254260598}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBDb250ZXh0bWVudSBmcm9tICdAL2xheW91dC9uYXZCYXJzL3RhZ3NWaWV3L2NvbnRleHRtZW51JzsKaW1wb3J0IHsgU2Vzc2lvbiB9IGZyb20gJ0AvdXRpbHMvc3RvcmFnZS5qcyc7CmltcG9ydCB7IG1hcE11dGF0aW9ucyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgc2V0dGluZyBmcm9tICdAL3NldHRpbmcnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICd0YWdzVmlldycsCiAgY29tcG9uZW50czogeyBDb250ZXh0bWVudSB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VySW5mbzoge30sCiAgICAgIC8vIHRhZ3NWaWV3TGlzdDogW10sCiAgICAgIHRhZ3NEcm9wZG93bjogewogICAgICAgIHg6ICcnLAogICAgICAgIHk6ICcnLAogICAgICB9LAogICAgICB0YWdzUmVmc0luZGV4OiAwLAogICAgICB0YWdzUm91dGVQYXRoOiB0aGlzLiRyb3V0ZS5wYXRoLAogICAgICAvLyB0YWdzVmlld1JvdXRlc0xpc3Q6IFtdLAogICAgICBkcm9wZG93bkxpc3Q6IFsKICAgICAgICB7IGlkOiAwLCB0eHQ6ICdtZXNzYWdlLnRhZ3NWaWV3LnJlZnJlc2gnLCBhZmZpeDogZmFsc2UsIGljb246ICdlbC1pY29uLXJlZnJlc2gtcmlnaHQnIH0sCiAgICAgICAgeyBpZDogMSwgdHh0OiAnbWVzc2FnZS50YWdzVmlldy5jbG9zZScsIGFmZml4OiBmYWxzZSwgaWNvbjogJ2VsLWljb24tY2xvc2UnIH0sCiAgICAgICAgeyBpZDogMiwgdHh0OiAnbWVzc2FnZS50YWdzVmlldy5jbG9zZU90aGVyJywgYWZmaXg6IGZhbHNlLCBpY29uOiAnZWwtaWNvbi1jaXJjbGUtY2xvc2UnIH0sCiAgICAgICAgeyBpZDogMywgdHh0OiAnbWVzc2FnZS50YWdzVmlldy5jbG9zZUFsbCcsIGFmZml4OiBmYWxzZSwgaWNvbjogJ2VsLWljb24tZm9sZGVyLWRlbGV0ZScgfSwKICAgICAgXSwKICAgICAgc2Nyb2xsVGFnSWNvbjogZmFsc2UsCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC8vIOiOt+WPluW4g+WxgOmFjee9ruS/oeaBrwogICAgZ2V0VGhlbWVDb25maWcoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS50aGVtZUNvbmZpZy50aGVtZUNvbmZpZzsKICAgIH0sCiAgICAvLyDliqjmgIHorr7nva4gdGFnc1ZpZXcg6aOO5qC85qC35byPCiAgICBzZXRUYWdzU3R5bGUoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS50aGVtZUNvbmZpZy50aGVtZUNvbmZpZy50YWdzU3R5bGU7CiAgICB9LAogICAgdGFnc1ZpZXdMaXN0KCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuYXBwLnRhZ05hdkxpc3Q7CiAgICB9LAogICAgdGFnc1ZpZXdSb3V0ZXNMaXN0KCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuYXBwLnRhZ05hdkxpc3Q7CiAgICB9LAogIH0sCiAgY3JlYXRlZCgpIHsKICAgIC8vIOebkeWQrOmdnuacrOmhtemdouiwg+eUqCAwIOWIt+aWsOW9k+WJje+8jDEg5YWz6Zet5b2T5YmN77yMMiDlhbPpl63lhbblroPvvIwzIOWFs+mXreWFqOmDqAogICAgdGhpcy5idXMuJG9uKCdvbkN1cnJlbnRDb250ZXh0bWVudUNsaWNrJywgKGRhdGEpID0+IHsKICAgICAgdGhpcy5vbkN1cnJlbnRDb250ZXh0bWVudUNsaWNrKGRhdGEpOwogICAgfSk7CiAgfSwKICBtb3VudGVkKCkgewogICAgaWYgKCF0aGlzLiRzdG9yZS5zdGF0ZS5hcHAudGFnTmF2TGlzdC5sZW5ndGgpIHsKICAgICAgdGhpcy5nZXRUYWdzVmlld1JvdXRlcygpOwogICAgfQogICAgaWYgKHRoaXMuJHJlZnMudGFnc1ZpZXdzPy5vZmZzZXRXaWR0aCA8IHRoaXMuJHJlZnMuc2Nyb2xsYmFyUmVmLiRyZWZzLndyYXAuc2Nyb2xsV2lkdGgpIHsKICAgICAgdGhpcy5zY3JvbGxUYWdJY29uID0gdHJ1ZTsKICAgIH0KICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCAoKSA9PiB7CiAgICAgIGlmICh0aGlzLiRyZWZzLnRhZ3NWaWV3cz8ub2Zmc2V0V2lkdGggPCB0aGlzLiRyZWZzLnNjcm9sbGJhclJlZi4kcmVmcy53cmFwLnNjcm9sbFdpZHRoKSB7CiAgICAgICAgdGhpcy5zY3JvbGxUYWdJY29uID0gdHJ1ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnNjcm9sbFRhZ0ljb24gPSBmYWxzZTsKICAgICAgfQogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAuLi5tYXBNdXRhdGlvbnMoWydzZXRCcmVhZENydW1iJywgJ3NldFRhZ05hdkxpc3QnLCAnYWRkVGFnJywgJ3NldExvY2FsJywgJ3NldEhvbWVSb3V0ZScsICdjbG9zZVRhZyddKSwKICAgIGNsaWNrRHJvcGRvd24oZSkgewogICAgICBsZXQgZGF0YSA9IHsgaWQ6IGUsIHBhdGg6IHRoaXMuJHJvdXRlLnBhdGggfTsKICAgICAgdGhpcy5vbkN1cnJlbnRDb250ZXh0bWVudUNsaWNrKGRhdGEpOwogICAgfSwKICAgIC8vIOiOt+WPlui3r+eUseS/oeaBrwogICAgZ2V0Um91dGVzTGlzdCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnJvdXRlc0xpc3Qucm91dGVzTGlzdDsKICAgIH0sCiAgICAvLyDlvZPliY3nmoQgdGFnc1ZpZXcg6aG554K55Ye75pe2CiAgICBvblRhZ3NDbGljayh2LCBrKSB7CiAgICAgIHRoaXMudGFnc1JvdXRlUGF0aCA9IHYucGF0aDsKICAgICAgdGhpcy50YWdzUmVmc0luZGV4ID0gazsKICAgICAgdGhpcy4kcm91dGVyLnB1c2godik7CiAgICB9LAogICAgLy8g6I635Y+WIHRhZ3NWaWV3IOeahOS4i+agh++8mueUqOS6juWkhOeQhiB0YWdzVmlldyDngrnlh7vml7bnmoTmqKrlkJHmu5rliqgKICAgIGdldFRhZ3NSZWZzSW5kZXgocGF0aCkgewogICAgICBpZiAodGhpcy50YWdzVmlld0xpc3QubGVuZ3RoID4gMCkgewogICAgICAgIHRoaXMudGFnc1JlZnNJbmRleCA9IHRoaXMudGFnc1ZpZXdMaXN0LmZpbmRJbmRleCgoaXRlbSkgPT4gaXRlbS5wYXRoID09PSBwYXRoKTsKICAgICAgfQogICAgfSwKICAgIC8vIOm8oOagh+a7mui9rua7muWKqAogICAgb25IYW5kbGVTY3JvbGwoZSkgewogICAgICB0aGlzLiRyZWZzLnNjcm9sbGJhclJlZi4kcmVmcy53cmFwLnNjcm9sbExlZnQgKz0gZS53aGVlbERlbHRhIC8gNDsKICAgIH0sCiAgICBzY3JvbGxUYWcocHJvZHVjdGlvbikgewogICAgICBsZXQgc2Nyb2xsUmVmcyA9IHRoaXMuJHJlZnMuc2Nyb2xsYmFyUmVmLiRyZWZzLndyYXAuc2Nyb2xsV2lkdGg7CiAgICAgIGxldCBzY3JvbGxMZWZ0ID0gdGhpcy4kcmVmcy5zY3JvbGxiYXJSZWYuJHJlZnMud3JhcC5zY3JvbGxMZWZ0OwogICAgICBpZiAocHJvZHVjdGlvbiA9PT0gJ2xlZnQnKSB7CiAgICAgICAgdGhpcy4kcmVmcy5zY3JvbGxiYXJSZWYuJHJlZnMud3JhcC5zY3JvbGxMZWZ0ID0gc2Nyb2xsTGVmdCAtIDMwMCA8PSAwID8gMCA6IHNjcm9sbExlZnQgLSAzMDA7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kcmVmcy5zY3JvbGxiYXJSZWYuJHJlZnMud3JhcC5zY3JvbGxMZWZ0ID0gc2Nyb2xsTGVmdCArIDMwMCA+PSBzY3JvbGxSZWZzID8gc2Nyb2xsUmVmcyA6IHNjcm9sbExlZnQgKyAzMDA7CiAgICAgIH0KICAgIH0sCiAgICAvLyB0YWdzVmlldyDmqKrlkJHmu5rliqgKICAgIHRhZ3NWaWV3bW92ZVRvQ3VycmVudFRhZygpIHsKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIGNvbnN0IHRhZ3NSZWZzID0gdGhpcy4kcmVmcy50YWdzUmVmczsKICAgICAgICBpZiAoIXRhZ3NSZWZzKSByZXR1cm47CiAgICAgICAgaWYgKHRhZ3NSZWZzLmxlbmd0aCA8PSAwKSByZXR1cm4gZmFsc2U7CiAgICAgICAgLy8g5b2T5YmNIGxpIOWFg+e0oAogICAgICAgIGxldCBsaURvbSA9IHRhZ3NSZWZzW3RoaXMudGFnc1JlZnNJbmRleF07CiAgICAgICAgLy8g5b2T5YmNIGxpIOWFg+e0oOS4i+aghwogICAgICAgIGxldCBsaUluZGV4ID0gdGhpcy50YWdzUmVmc0luZGV4OwogICAgICAgIC8vIOW9k+WJjSB1bCDkuIsgbGkg5YWD57Sg5oC76ZW/5bqmCiAgICAgICAgbGV0IGxpTGVuZ3RoID0gdGFnc1JlZnMubGVuZ3RoOwogICAgICAgIC8vIOacgOWJjSBsaQogICAgICAgIGxldCBsaUZpcnN0ID0gdGFnc1JlZnNbMF07CiAgICAgICAgLy8g5pyA5ZCOIGxpCiAgICAgICAgbGV0IGxpTGFzdCA9IHRhZ3NSZWZzW3RhZ3NSZWZzLmxlbmd0aCAtIDFdOwogICAgICAgIC8vIOW9k+WJjea7muWKqOadoeeahOWAvAogICAgICAgIGxldCBzY3JvbGxSZWZzID0gdGhpcy4kcmVmcy5zY3JvbGxiYXJSZWYuJHJlZnMud3JhcDsKICAgICAgICAvLyDlvZPliY3mu5rliqjmnaHmu5rliqjlrr3luqYKICAgICAgICBsZXQgc2Nyb2xsUyA9IHNjcm9sbFJlZnMuc2Nyb2xsV2lkdGg7CiAgICAgICAgLy8g5b2T5YmN5rua5Yqo5p2h5YGP56e75a695bqmCiAgICAgICAgbGV0IG9mZnNldFcgPSBzY3JvbGxSZWZzLm9mZnNldFdpZHRoOwogICAgICAgIC8vIOW9k+WJjea7muWKqOadoeWBj+enu+i3neemuwogICAgICAgIGxldCBzY3JvbGxMID0gc2Nyb2xsUmVmcy5zY3JvbGxMZWZ0OwogICAgICAgIC8vIOS4iuS4gOS4qiB0YWdzIGxpIGRvbQogICAgICAgIGxldCBsaVByZXZUYWcgPSB0YWdzUmVmc1t0aGlzLnRhZ3NSZWZzSW5kZXggLSAxXTsKICAgICAgICAvLyDkuIvkuIDkuKogdGFncyBsaSBkb20KICAgICAgICBsZXQgbGlOZXh0VGFnID0gdGFnc1JlZnNbdGhpcy50YWdzUmVmc0luZGV4ICsgMV07CiAgICAgICAgLy8g5LiK5LiA5LiqIHRhZ3MgbGkgZG9tIOeahOWBj+enu+i3neemuwogICAgICAgIGxldCBiZWZvcmVQcmV2TCA9ICcnOwogICAgICAgIC8vIOS4i+S4gOS4qiB0YWdzIGxpIGRvbSDnmoTlgY/np7vot53nprsKICAgICAgICBsZXQgYWZ0ZXJOZXh0TCA9ICcnOwogICAgICAgIGlmIChsaURvbSA9PT0gbGlGaXJzdCkgewogICAgICAgICAgLy8g5aS06YOoCiAgICAgICAgICBzY3JvbGxSZWZzLnNjcm9sbExlZnQgPSAwOwogICAgICAgIH0gZWxzZSBpZiAobGlEb20gPT09IGxpTGFzdCkgewogICAgICAgICAgLy8g5bC+6YOoCiAgICAgICAgICBzY3JvbGxSZWZzLnNjcm9sbExlZnQgPSBzY3JvbGxTIC0gb2Zmc2V0VzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgLy8g6Z2e5aS0L+WwvumDqAogICAgICAgICAgaWYgKGxpSW5kZXggPT09IDApIGJlZm9yZVByZXZMID0gbGlGaXJzdD8ub2Zmc2V0TGVmdCAtIDU7CiAgICAgICAgICBlbHNlIGJlZm9yZVByZXZMID0gbGlQcmV2VGFnPy5vZmZzZXRMZWZ0IC0gNTsKICAgICAgICAgIGlmIChsaUluZGV4ID09PSBsaUxlbmd0aCkgYWZ0ZXJOZXh0TCA9IGxpTGFzdD8ub2Zmc2V0TGVmdCArIGxpTGFzdC5vZmZzZXRXaWR0aCArIDU7CiAgICAgICAgICBlbHNlIGFmdGVyTmV4dEwgPSBsaU5leHRUYWc/Lm9mZnNldExlZnQgKyBsaU5leHRUYWcub2Zmc2V0V2lkdGggKyA1OwogICAgICAgICAgaWYgKGFmdGVyTmV4dEwgPiBzY3JvbGxMICsgb2Zmc2V0VykgewogICAgICAgICAgICBzY3JvbGxSZWZzLnNjcm9sbExlZnQgPSBhZnRlck5leHRMIC0gb2Zmc2V0VzsKICAgICAgICAgIH0gZWxzZSBpZiAoYmVmb3JlUHJldkwgPCBzY3JvbGxMKSB7CiAgICAgICAgICAgIHNjcm9sbFJlZnMuc2Nyb2xsTGVmdCA9IGJlZm9yZVByZXZMOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICAvLyDmm7TmlrDmu5rliqjmnaHvvIzpmLLmraLkuI3lh7rnjrAKICAgICAgICB0aGlzLnVwZGF0ZVNjcm9sbGJhcigpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDmm7TmlrDmu5rliqjmnaHmmL7npLoKICAgIHVwZGF0ZVNjcm9sbGJhcigpIHsKICAgICAgdGhpcy4kcmVmcy5zY3JvbGxiYXJSZWYudXBkYXRlKCk7CiAgICB9LAogICAgLy8g6YCS5b2S5p+l5om+5b2T5YmN6Lev5b6E5LiL55qE57uE5Lu25L+h5oGvCiAgICBmaWx0ZXJDdXJyZW50TWVudShhcnIsIGN1cnJlbnRQYXRoLCBjYWxsYmFjaykgewogICAgICBhcnIubWFwKChpdGVtKSA9PiB7CiAgICAgICAgaWYgKGl0ZW0ucGF0aCA9PT0gY3VycmVudFBhdGgpIHsKICAgICAgICAgIGNhbGxiYWNrKGl0ZW0pOwogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgICBpdGVtID0gT2JqZWN0LmFzc2lnbih7fSwgaXRlbSk7CiAgICAgICAgaWYgKGl0ZW0uY2hpbGRyZW4pIHsKICAgICAgICAgIGl0ZW0uY2hpbGRyZW4gPSB0aGlzLmZpbHRlckN1cnJlbnRNZW51KGl0ZW0uY2hpbGRyZW4sIGN1cnJlbnRQYXRoLCBjYWxsYmFjayk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICAvLyDmlbDnu4Tlr7nosaHljrvph40KICAgIGR1cGxpY2F0ZShhcnIpIHsKICAgICAgbGV0IG5ld29iaiA9IHt9OwogICAgICBhcnIgPSBhcnIucmVkdWNlKChwcmVWYWwsIGN1clZhbCkgPT4gewogICAgICAgIG5ld29ialtjdXJWYWwucGF0aF0gPyAnJyA6IChuZXdvYmpbY3VyVmFsLnBhdGhdID0gcHJlVmFsLnB1c2goY3VyVmFsKSk7CiAgICAgICAgcmV0dXJuIHByZVZhbDsKICAgICAgfSwgW10pOwogICAgICByZXR1cm4gYXJyOwogICAgfSwKICAgIC8vIOiOt+WPliB2dWV4IOS4reeahCB0YWdzVmlld1JvdXRlcyDliJfooagKICAgIGdldFRhZ3NWaWV3Um91dGVzKCkgewogICAgICB0aGlzLnRhZ3NSb3V0ZVBhdGggPSB0aGlzLiRyb3V0ZS5wYXRoOwogICAgICB0aGlzLnNldFRhZ05hdkxpc3QodGhpcy4kc3RvcmUuc3RhdGUubWVudXMub25lTHZNZW51cyk7CgogICAgICB0aGlzLmluaXRUYWdzVmlld0xpc3QoKTsKICAgIH0sCiAgICAvLyDlrZjlgqggdGFnc1ZpZXdMaXN0IOWIsOa1j+iniOWZqOS4tOaXtue8k+WtmOS4re+8jOmhtemdouWIt+aWsOaXtu+8jOS/neeVmeiusOW9lQogICAgYWRkQnJvd3NlclNldFNlc3Npb24odGFnTmF2TGlzdCkgewogICAgICB0aGlzLnNldFRhZ05hdkxpc3QodGFnTmF2TGlzdCk7CiAgICB9LAogICAgLy8g5Yid5aeL5YyW6K6+572u5LqGIHRhZ3NWaWV3IOaVsOaNrgogICAgaW5pdFRhZ3NWaWV3TGlzdCgpIHsKICAgICAgLy8gaWYgKFNlc3Npb24uZ2V0KCd0YWdzVmlld0xpc3QnKSAmJiB0aGlzLiRzdG9yZS5zdGF0ZS50aGVtZUNvbmZpZy50aGVtZUNvbmZpZy5pc0NhY2hlVGFnc1ZpZXcpIHsKICAgICAgLy8gICB0aGlzLnRhZ3NWaWV3TGlzdCA9IFNlc3Npb24uZ2V0KCd0YWdzVmlld0xpc3QnKTsKICAgICAgLy8gfSBlbHNlIHsKICAgICAgbGV0IGFyciA9IFtdOwogICAgICB0aGlzLnRhZ3NWaWV3Um91dGVzTGlzdC5tYXAoKHYpID0+IHsKICAgICAgICBpZiAodi5tZXRhICYmIHYubWV0YS5pc0FmZml4KSBhcnIucHVzaCh7IC4uLnYgfSk7CiAgICAgIH0pOwogICAgICAvLyB9CiAgICAgIHRoaXMuc2V0VGFnTmF2TGlzdChhcnIpOwogICAgICAvLyDliJ3lp4vljJblvZPliY3lhYPntKAobGkp55qE5LiL5qCHCiAgICAgIHRoaXMuZ2V0VGFnc1JlZnNJbmRleCh0aGlzLiRyb3V0ZS5wYXRoKTsKICAgICAgLy8g5re75Yqg5Yid5aeL5YyW5qiq5ZCR5rua5Yqo5p2h56e75Yqo5Yiw5a+55bqU5L2N572uCiAgICAgIHRoaXMudGFnc1ZpZXdtb3ZlVG9DdXJyZW50VGFnKCk7CiAgICB9LAogICAgLy8g5re75YqgIHRhZ3NWaWV377ya5pyq6K6+572u6ZqQ6JeP77yIaXNIaWRl77yJ5Lmf5re75Yqg5Yiw5ZyoIHRhZ3NWaWV3IOS4rQogICAgYWRkVGFnc1ZpZXcocGF0aCwgdG8pIHsKICAgICAgaWYgKHRoaXMudGFnc1ZpZXdMaXN0LnNvbWUoKHYpID0+IHYucGF0aCA9PT0gcGF0aCkpIHJldHVybiBmYWxzZTsKICAgICAgY29uc3QgaXRlbSA9IHRoaXMudGFnc1ZpZXdSb3V0ZXNMaXN0LmZpbmQoKHYpID0+IHYucGF0aCA9PT0gcGF0aCk7CiAgICAgIGlmIChpdGVtLmlzTGluayAmJiAhaXRlbS5pc0lmcmFtZSkgcmV0dXJuIGZhbHNlOwogICAgICBpdGVtLnF1ZXJ5ID0gdG8/LnF1ZXJ5ID8gdG8/LnF1ZXJ5IDogdGhpcy4kcm91dGUucXVlcnk7CiAgICAgIHRoaXMudGFnc1ZpZXdMaXN0LnB1c2goeyAuLi5pdGVtIH0pOwogICAgICB0aGlzLmFkZEJyb3dzZXJTZXRTZXNzaW9uKHRoaXMudGFnc1ZpZXdMaXN0KTsKICAgIH0sCiAgICAvLyDlj7PplK7oj5zljZXngrnlh7vml7bmmL7npLroj5zljZXliJfooagKICAgIG9uQ29udGV4dG1lbnUodiwgZSkgewogICAgICBsZXQgeyBjbGllbnRYLCBjbGllbnRZIH0gPSBlOwogICAgICB0aGlzLnRhZ3NEcm9wZG93bi54ID0gY2xpZW50WDsKICAgICAgdGhpcy50YWdzRHJvcGRvd24ueSA9IGNsaWVudFk7CiAgICAgIHRoaXMuJHJlZnMudGFnc0NvbnRleHRtZW51Lm9wZW5Db250ZXh0bWVudSh2KTsKICAgIH0sCiAgICBvbkNvbnRleHRtZW51SWNvbihlKSB7fSwKICAgIC8vIOW9k+WJjemhueWPs+mUruiPnOWNleeCueWHuwogICAgb25DdXJyZW50Q29udGV4dG1lbnVDbGljayhkYXRhKSB7CiAgICAgIGxldCB7IGlkLCBwYXRoIH0gPSBkYXRhOwogICAgICBsZXQgY3VycmVudFRhZyA9IHRoaXMudGFnc1ZpZXdMaXN0LmZpbmQoKHYpID0+IHYucGF0aCA9PT0gcGF0aCk7CiAgICAgIHN3aXRjaCAoaWQpIHsKICAgICAgICBjYXNlIDA6CiAgICAgICAgICB0aGlzLnJlZnJlc2hDdXJyZW50VGFnc1ZpZXcocGF0aCk7CiAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7IHBhdGgsIHF1ZXJ5OiBjdXJyZW50VGFnLnF1ZXJ5IH0pOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAxOgogICAgICAgICAgdGhpcy5jbG9zZUN1cnJlbnRUYWdzVmlldyhwYXRoKTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgMjoKICAgICAgICAgIHRoaXMuY2xvc2VPdGhlclRhZ3NWaWV3KHBhdGgsIGN1cnJlbnRUYWcucXVlcnkpOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAzOgogICAgICAgICAgdGhpcy5jbG9zZUFsbFRhZ3NWaWV3KHBhdGgpOwogICAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0sCiAgICByZWZyZXNoSWNvbigpIHsKICAgICAgdGhpcy4kbmV4dFRpY2soKGUpID0+IHsKICAgICAgICBpZiAodGhpcy4kcmVmcy50YWdzVmlld3M/Lm9mZnNldFdpZHRoIDwgdGhpcy4kcmVmcy5zY3JvbGxiYXJSZWYuJHJlZnMud3JhcC5zY3JvbGxXaWR0aCkgewogICAgICAgICAgdGhpcy5zY3JvbGxUYWdJY29uID0gdHJ1ZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5zY3JvbGxUYWdJY29uID0gZmFsc2U7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICAvLyAx44CB5Yi35paw5b2T5YmNIHRhZ3NWaWV377yaCiAgICByZWZyZXNoQ3VycmVudFRhZ3NWaWV3KHBhdGgpIHsKICAgICAgdGhpcy5idXMuJGVtaXQoJ29uVGFnc1ZpZXdSZWZyZXNoUm91dGVyVmlldycsIHBhdGgpOwogICAgfSwKICAgIC8vIDLjgIHlhbPpl63lvZPliY0gdGFnc1ZpZXfvvJrlvZPliY3pobkgYHRhZ3Mtdmlld2AgaWNvbiDlhbPpl63ml7bngrnlh7vvvIzlpoLmnpzmmK/orr7nva7kuoblm7rlrprnmoTvvIhpc0FmZml477yJ77yM5LiN5Y+v5Lul5YWz6ZetCiAgICBjbG9zZUN1cnJlbnRUYWdzVmlldyhwYXRoKSB7CiAgICAgIHRoaXMudGFnc1ZpZXdMaXN0Lm1hcCgodiwgaywgYXJyKSA9PiB7CiAgICAgICAgaWYgKCF2Lm1ldGEuaXNBZmZpeCkgewogICAgICAgICAgaWYgKHYucGF0aCA9PT0gcGF0aCkgewogICAgICAgICAgICB0aGlzLnRhZ3NWaWV3TGlzdC5zcGxpY2UoaywgMSk7CiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICAgIC8vIOacgOWQjuS4gOS4qgogICAgICAgICAgICAgIGlmICh0aGlzLnRhZ3NWaWV3TGlzdC5sZW5ndGggPT09IGspCiAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7IHBhdGg6IGFyclthcnIubGVuZ3RoIC0gMV0ucGF0aCwgcXVlcnk6IGFyclthcnIubGVuZ3RoIC0gMV0ucXVlcnkgfSk7CiAgICAgICAgICAgICAgLy8g5ZCm5YiZ77yM6Lez6L2s5Yiw5LiL5LiA5LiqCiAgICAgICAgICAgICAgZWxzZSB0aGlzLiRyb3V0ZXIucHVzaCh7IHBhdGg6IGFycltrXS5wYXRoLCBxdWVyeTogYXJyW2tdLnF1ZXJ5IH0pOwogICAgICAgICAgICB9LCAwKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgICB0aGlzLnNldFRhZ05hdkxpc3QodGhpcy50YWdzVmlld0xpc3QpOwogICAgICAvLyAgIHRoaXMuYWRkQnJvd3NlclNldFNlc3Npb24odGhpcy50YWdOYXZMaXN0KTsKICAgIH0sCiAgICAvLyAz44CB5YWz6Zet5YW25a6DIHRhZ3NWaWV377ya5aaC5p6c5piv6K6+572u5LqG5Zu65a6a55qE77yIaXNBZmZpeO+8ie+8jOS4jei/m+ihjOWFs+mXrQogICAgY2xvc2VPdGhlclRhZ3NWaWV3KHBhdGgsIHF1ZXJ5KSB7CiAgICAgIGxldCB0YWdzVmlld0xpc3QgPSBbXTsKICAgICAgdGhpcy50YWdzVmlld1JvdXRlc0xpc3QubWFwKCh2KSA9PiB7CiAgICAgICAgaWYgKCh2Lm1ldGEgJiYgdi5tZXRhLmlzQWZmaXgpIHx8IHYucGF0aCA9PT0gcGF0aCkgewogICAgICAgICAgdGFnc1ZpZXdMaXN0LnB1c2goeyAuLi52IH0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHRoaXMuYWRkQnJvd3NlclNldFNlc3Npb24odGFnc1ZpZXdMaXN0KTsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyBwYXRoLCBxdWVyeSB9KTsKCiAgICAgIC8vIHRoaXMuYWRkVGFnc1ZpZXcocGF0aCk7CiAgICB9LAogICAgLy8gNOOAgeWFs+mXreWFqOmDqCB0YWdzVmlld++8muWmguaenOaYr+iuvue9ruS6huWbuuWumueahO+8iGlzQWZmaXjvvInvvIzkuI3ov5vooYzlhbPpl60KICAgIGNsb3NlQWxsVGFnc1ZpZXcocGF0aCkgewogICAgICBsZXQgdGFnc1ZpZXdMaXN0ID0gW107CiAgICAgIHRoaXMudGFnc1ZpZXdSb3V0ZXNMaXN0Lm1hcCgodikgPT4gewogICAgICAgIGlmICh2Lm1ldGEuaXNBZmZpeCkgewogICAgICAgICAgdGFnc1ZpZXdMaXN0LnB1c2goeyAuLi52IH0pOwogICAgICAgICAgaWYgKHRhZ3NWaWV3TGlzdC5zb21lKCh2KSA9PiB2LnBhdGggPT09IHBhdGgpKSB0aGlzLiRyb3V0ZXIucHVzaCh7IHBhdGgsIHF1ZXJ5OiB0aGlzLiRyb3V0ZS5xdWVyeSB9KTsKICAgICAgICAgIGVsc2UgdGhpcy4kcm91dGVyLnB1c2goeyBwYXRoOiB2LnBhdGgsIHF1ZXJ5OiB0aGlzLiRyb3V0ZS5xdWVyeSB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgICB0aGlzLmFkZEJyb3dzZXJTZXRTZXNzaW9uKHRhZ3NWaWV3TGlzdCk7CiAgICB9LAogIH0sCiAgd2F0Y2g6IHsKICAgIC8vIOebkeWQrOi3r+eUseWPmOWMlgogICAgJHJvdXRlOiB7CiAgICAgIGhhbmRsZXIodG8pIHsKICAgICAgICB0aGlzLnRhZ3NSb3V0ZVBhdGggPSB0by5wYXRoOwogICAgICAgIHRoaXMuYWRkVGFnc1ZpZXcodG8ucGF0aCwgdG8pOwogICAgICAgIHRoaXMuZ2V0VGFnc1JlZnNJbmRleCh0by5wYXRoKTsKICAgICAgICB0aGlzLnRhZ3NWaWV3bW92ZVRvQ3VycmVudFRhZygpOwogICAgICAgIHRoaXMucmVmcmVzaEljb24oKTsKICAgICAgfSwKICAgICAgZGVlcDogdHJ1ZSwKICAgIH0sCiAgfSwKICBkZXN0cm95ZWQoKSB7CiAgICAvLyDlj5bmtojpnZ7mnKzpobXpnaLosIPnlKjnm5HlkKzvvIhmdW4vdGFnc1ZpZXfvvIkKICAgIHRoaXMuYnVzLiRvZmYoJ29uQ3VycmVudENvbnRleHRtZW51Q2xpY2snKTsKICB9LAp9Owo="},null]}