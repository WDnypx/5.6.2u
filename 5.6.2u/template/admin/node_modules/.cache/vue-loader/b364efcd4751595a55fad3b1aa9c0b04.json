{"remainingRequest":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\marketing\\storeSeckill\\createMore.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\marketing\\storeSeckill\\createMore.vue","mtime":1740186452416},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1753254256661},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1753254258567},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1753254260598}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmltcG9ydCBnb29kc0xpc3QgZnJvbSAnQC9jb21wb25lbnRzL2dvb2RzTGlzdC9pbmRleCc7CmltcG9ydCBXYW5nRWRpdG9yIGZyb20gJ0AvY29tcG9uZW50cy93YW5nRWRpdG9yL2luZGV4LnZ1ZSc7CmltcG9ydCB1cGxvYWRQaWN0dXJlcyBmcm9tICdAL2NvbXBvbmVudHMvdXBsb2FkUGljdHVyZXMnOwppbXBvcnQgeyBzZWNraWxsQWN0aXZpdHlJbmZvQXBpLCBzZWNraWxsQWN0aXZpdHlBZGRBcGksIHNlY2tpbGxUaW1lTGlzdEFwaSB9IGZyb20gJ0AvYXBpL21hcmtldGluZyc7CmltcG9ydCB7IHByb2R1Y3RHZXRUZW1wbGF0ZUFwaSB9IGZyb20gJ0AvYXBpL3Byb2R1Y3QnOwppbXBvcnQgZnJlaWdodFRlbXBsYXRlIGZyb20gJ0AvY29tcG9uZW50cy9mcmVpZ2h0VGVtcGxhdGUvaW5kZXgnOwppbXBvcnQgc3RlcHMgZnJvbSAnQC9jb21wb25lbnRzL3N0ZXBzL2luZGV4JzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnc3RvcmVTZWNraWxsQ3JlYXRlJywKICBjb21wb25lbnRzOiB7CiAgICBnb29kc0xpc3QsCiAgICB1cGxvYWRQaWN0dXJlcywKICAgIFdhbmdFZGl0b3IsCiAgICBmcmVpZ2h0VGVtcGxhdGUsCiAgICBzdGVwcywKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzdGVwTGlzdDogWyfloavlhpnln7rnoYDkv6Hmga8nLCAn6YCJ5oup56eS5p2A5ZWG5ZOBJ10sCiAgICAgIHN1Ym1pdE9wZW46IGZhbHNlLAogICAgICBzcGluU2hvdzogZmFsc2UsCiAgICAgIGlzQ2hvaWNlOiAnJywKICAgICAgY3VycmVudDogMCwKICAgICAgbW9kYWxQaWM6IGZhbHNlLAogICAgICBncmlkOiB7CiAgICAgICAgeGw6IDEyLAogICAgICAgIGxnOiAyMCwKICAgICAgICBtZDogMjQsCiAgICAgICAgc206IDI0LAogICAgICAgIHhzOiAyNCwKICAgICAgfSwKICAgICAgZ3JpZDI6IHsKICAgICAgICB4bDogOCwKICAgICAgICBsZzogMTIsCiAgICAgICAgbWQ6IDEyLAogICAgICAgIHNtOiAyNCwKICAgICAgICB4czogMjQsCiAgICAgIH0sCiAgICAgIGdyaWRQaWM6IHsKICAgICAgICB4bDogNiwKICAgICAgICBsZzogOCwKICAgICAgICBtZDogMTIsCiAgICAgICAgc206IDEyLAogICAgICAgIHhzOiAxMiwKICAgICAgfSwKICAgICAgZ3JpZEJ0bjogewogICAgICAgIHhsOiA0LAogICAgICAgIGxnOiA4LAogICAgICAgIG1kOiA4LAogICAgICAgIHNtOiA4LAogICAgICAgIHhzOiA4LAogICAgICB9LAogICAgICBteUNvbmZpZzogewogICAgICAgIGF1dG9IZWlnaHRFbmFibGVkOiBmYWxzZSwgLy8g57yW6L6R5Zmo5LiN6Ieq5Yqo6KKr5YaF5a655pKR6auYCiAgICAgICAgaW5pdGlhbEZyYW1lSGVpZ2h0OiA1MDAsIC8vIOWIneWni+WuueWZqOmrmOW6pgogICAgICAgIGluaXRpYWxGcmFtZVdpZHRoOiAnMTAwJScsIC8vIOWIneWni+WuueWZqOWuveW6pgogICAgICAgIFVFRElUT1JfSE9NRV9VUkw6ICcvVUVkaXRvci8nLAogICAgICAgIHNlcnZlclVybDogJycsCiAgICAgIH0sCiAgICAgIG1vZGFsczogZmFsc2UsCiAgICAgIG1vZGFsX2xvYWRpbmc6IGZhbHNlLAogICAgICBpbWFnZXM6IFtdLAogICAgICBmb3JtVmFsaWRhdGU6IHsKICAgICAgICB0aXRsZTogJycsCiAgICAgICAgc2VjdGlvbl90aW1lOiBbXSwKICAgICAgICB0aW1lX2lkczogW10sCiAgICAgICAgbnVtOiAwLAogICAgICAgIG9uY2VfbnVtOiAwLAogICAgICAgIHN0YXR1czogMSwKICAgICAgICBwcm9kdWN0X2luZm9zOiBbXSwKICAgICAgfSwKICAgICAgZm9ybUJhdGNoOiB7CiAgICAgICAgcHJpY2U6ICcnLAogICAgICAgIHF1b3RhOiAnJywKICAgICAgfSwKICAgICAgdGVtcGxhdGVMaXN0OiBbXSwKICAgICAgdGltZUxpc3Q6IFtdLAogICAgICBjb2x1bW5zOiBbXSwKICAgICAgc3BlY3NEYXRhOiBbXSwKICAgICAgcGljVGl0OiAnJywKICAgICAgdGFibGVJbmRleDogMCwKICAgICAgcnVsZVZhbGlkYXRlOiB7CiAgICAgICAgaW1hZ2U6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36YCJ5oup5Li75Zu+JywgdHJpZ2dlcjogJ2NoYW5nZScgfV0sCiAgICAgICAgaW1hZ2VzOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgICB0eXBlOiAnYXJyYXknLAogICAgICAgICAgICBtZXNzYWdlOiAn6K+36YCJ5oup5Li75Zu+JywKICAgICAgICAgICAgdHJpZ2dlcjogJ2NoYW5nZScsCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICB0eXBlOiAnYXJyYXknLAogICAgICAgICAgICBtaW46IDEsCiAgICAgICAgICAgIG1lc3NhZ2U6ICdDaG9vc2UgdHdvIGhvYmJpZXMgYXQgYmVzdCcsCiAgICAgICAgICAgIHRyaWdnZXI6ICdjaGFuZ2UnLAogICAgICAgICAgfSwKICAgICAgICBdLAogICAgICAgIHRpdGxlOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeWVhuWTgeagh+mimCcsIHRyaWdnZXI6ICdibHVyJyB9XSwKICAgICAgICBpbmZvOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeenkuadgOa0u+WKqOeugOS7iycsIHRyaWdnZXI6ICdibHVyJyB9XSwKICAgICAgICBzZWN0aW9uX3RpbWU6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICAgIHR5cGU6ICdhcnJheScsCiAgICAgICAgICAgIG1lc3NhZ2U6ICfor7fpgInmi6nmtLvliqjml7bpl7QnLAogICAgICAgICAgICB0cmlnZ2VyOiAnY2hhbmdlJywKICAgICAgICAgIH0sCiAgICAgICAgXSwKICAgICAgICB1bml0X25hbWU6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36L6T5YWl5Y2V5L2NJywgdHJpZ2dlcjogJ2JsdXInIH1dLAogICAgICAgIHByaWNlOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgICB0eXBlOiAnbnVtYmVyJywKICAgICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeenkuadgOS7tycsCiAgICAgICAgICAgIHRyaWdnZXI6ICdibHVyJywKICAgICAgICAgIH0sCiAgICAgICAgXSwKICAgICAgICBvdF9wcmljZTogWwogICAgICAgICAgewogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgICAgdHlwZTogJ251bWJlcicsCiAgICAgICAgICAgIG1lc3NhZ2U6ICfor7fovpPlhaXljp/ku7cnLAogICAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicsCiAgICAgICAgICB9LAogICAgICAgIF0sCiAgICAgICAgY29zdDogWwogICAgICAgICAgewogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgICAgdHlwZTogJ251bWJlcicsCiAgICAgICAgICAgIG1lc3NhZ2U6ICfor7fovpPlhaXmiJDmnKzku7cnLAogICAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicsCiAgICAgICAgICB9LAogICAgICAgIF0sCiAgICAgICAgc3RvY2s6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICAgIHR5cGU6ICdudW1iZXInLAogICAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl5bqT5a2YJywKICAgICAgICAgICAgdHJpZ2dlcjogJ2JsdXInLAogICAgICAgICAgfSwKICAgICAgICBdLAogICAgICAgIG51bTogWwogICAgICAgICAgewogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgICAgdHlwZTogJ251bWJlcicsCiAgICAgICAgICAgIG1lc3NhZ2U6ICfor7fovpPlhaXotK3kubDmlbDph4/pmZDliLYnLAogICAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicsCiAgICAgICAgICB9LAogICAgICAgIF0sCiAgICAgICAgb25jZV9udW06IFsKICAgICAgICAgIHsKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICAgIHR5cGU6ICdudW1iZXInLAogICAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl5Y2V5qyh6LSt5Lmw5pWw6YeP6ZmQ5Yi2JywKICAgICAgICAgICAgdHJpZ2dlcjogJ2JsdXInLAogICAgICAgICAgfSwKICAgICAgICBdLAogICAgICAgIHRlbXBfaWQ6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICAgIG1lc3NhZ2U6ICfor7fpgInmi6nov5DotLnmqKHmnb8nLAogICAgICAgICAgICB0cmlnZ2VyOiAnY2hhbmdlJywKICAgICAgICAgICAgdHlwZTogJ251bWJlcicsCiAgICAgICAgICB9LAogICAgICAgIF0sCiAgICAgICAgdGltZV9pZHM6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICAgIG1lc3NhZ2U6ICfor7fpgInmi6nlvIDlp4vml7bpl7QnLAogICAgICAgICAgICB0cmlnZ2VyOiAnY2hhbmdlJywKICAgICAgICAgICAgdHlwZTogJ0FycmF5JywKICAgICAgICAgIH0sCiAgICAgICAgXSwKICAgICAgfSwKICAgICAgY29weTogMCwKICAgICAgbW9kYWxzU2V0OiBmYWxzZSwKICAgICAgaXNBbGxDaGVja2VkOiBmYWxzZSwKICAgICAgY2hlY2tQaWRMaXN0OiBbXSwgLy/niLbnuqfmnInlhbNpZOmbhuWQiCDvvIjpnIDmsYLnpoHmraLliKDpmaTlrZDnuqfvvIznlKjkuo7liKDpmaTmlbTkuKrllYblk4HvvIkKICAgICAgc2VhcmNoVGFibGVEYXRhOiBbXSwKICAgICAgdGFibGVEYXRhOiBbXSwKICAgICAga2V5d29yZDogJycsCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcFN0YXRlKCdtZWRpYScsIFsnaXNNb2JpbGUnXSksCiAgICBsYWJlbFdpZHRoKCkgewogICAgICByZXR1cm4gdGhpcy5pc01vYmlsZSA/IHVuZGVmaW5lZCA6ICcxMzVweCc7CiAgICB9LAogICAgbGFiZWxQb3NpdGlvbigpIHsKICAgICAgcmV0dXJuIHRoaXMuaXNNb2JpbGUgPyAndG9wJyA6ICdyaWdodCc7CiAgICB9LAogIH0sCiAgbW91bnRlZCgpIHsKICAgIGlmICh0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpIHsKICAgICAgdGhpcy5jdXJyZW50ID0gMDsKICAgICAgdGhpcy5nZXRJbmZvKCk7CiAgICB9CiAgICB0aGlzLnByb2R1Y3RHZXRUZW1wbGF0ZSgpOwogICAgdGhpcy5zZWNraWxsVGltZUxpc3QoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHN0ZXBBY3RpdmUoaW5kZXgpewogICAgICB0aGlzLmN1cnJlbnQgPSBpbmRleDsKICAgIH0sCiAgICBhZGRHb29kcygpIHsKICAgICAgdGhpcy5tb2RhbHMgPSB0cnVlOwogICAgfSwKICAgIC8v5om56YeP6K6+572uCiAgICBiYXRjaFNldCgpIHsKICAgICAgdGhpcy5tb2RhbHNTZXQgPSB0cnVlOwogICAgfSwKICAgIC8v5Yig6ZmkCiAgICBkZWwocm93KSB7CiAgICAgIC8vIHRoaXMudGFibGVEYXRhID0gdGhpcy50YWJsZURhdGEuZmlsdGVyKChpdGVtKSA9PiBpdGVtLmlkICE9PSByb3cuaWQpOwogICAgICBpZiAodGhpcy5zZWFyY2hUYWJsZURhdGEubGVuZ3RoKSB7CiAgICAgICAgdGhpcy5zZWFyY2hUYWJsZURhdGEuZm9yRWFjaCgoaSwgaW5kZXgpID0+IHsKICAgICAgICAgIGlmIChyb3cuaWQgPT0gaS5pZCkgewogICAgICAgICAgICB0aGlzLnNlYXJjaFRhYmxlRGF0YS5zcGxpY2UoaW5kZXgsIDEpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIHRoaXMudGFibGVEYXRhLmZvckVhY2goKGksIGluZGV4KSA9PiB7CiAgICAgICAgICBpZiAocm93LmlkID09IGkuaWQpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMudGFibGVEYXRhLnNwbGljZShpbmRleCwgMSk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy50YWJsZURhdGEuZm9yRWFjaCgoaSwgaW5kZXgpID0+IHsKICAgICAgICAgIGlmIChyb3cuaWQgPT0gaS5pZCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy50YWJsZURhdGEuc3BsaWNlKGluZGV4LCAxKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQogICAgICBpZiAodGhpcy5pc0FsbENoZWNrZWQgJiYgIXRoaXMudGFibGVEYXRhLmxlbmd0aCkgewogICAgICAgIHRoaXMuaXNBbGxDaGVja2VkID0gZmFsc2U7CiAgICAgICAgdGhpcy5jaGVja1BpZExpc3QgPSBbXTsKICAgICAgfSBlbHNlIHsKICAgICAgICBsZXQgaW5kZXggPSB0aGlzLmNoZWNrUGlkTGlzdC5pbmRleE9mKHJvdy5pZCk7CiAgICAgICAgdGhpcy5jaGVja1BpZExpc3Quc3BsaWNlKGluZGV4LCAxKTsKICAgICAgfQogICAgfSwKICAgIC8v5om56YeP5Yig6ZmkCiAgICBkZWxBbGwoKSB7CiAgICAgIGlmICh0aGlzLmlzQWxsQ2hlY2tlZCAmJiAodGhpcy50YWJsZURhdGEubGVuZ3RoID09IHRoaXMuc2VhcmNoVGFibGVEYXRhLmxlbmd0aCB8fCAhdGhpcy5zZWFyY2hUYWJsZURhdGEubGVuZ3RoKSkgewogICAgICAgIHRoaXMudGFibGVEYXRhID0gW107CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy50YWJsZURhdGEgPSB0aGlzLnRhYmxlRGF0YS5maWx0ZXIoKGl0ZW0pID0+ICF0aGlzLmNoZWNrUGlkTGlzdC5zb21lKChlbGUpID0+IGVsZSA9PT0gaXRlbS5pZCkpOwogICAgICB9CiAgICAgIHRoaXMuY2hlY2tQaWRMaXN0ID0gW107CiAgICAgIHRoaXMuaXNBbGxDaGVja2VkID0gZmFsc2U7CiAgICB9LAogICAgY2FuY2VsKCkgewogICAgICB0aGlzLm1vZGFscyA9IGZhbHNlOwogICAgfSwKICAgIGJhdGNoVmlzaWJsZUNoYW5nZSgpIHsKICAgICAgdGhpcy5mb3JtQmF0Y2gucHJpY2UgPSAnJzsKICAgICAgdGhpcy5mb3JtQmF0Y2gucXVvdGEgPSAnJzsKICAgIH0sCiAgICBzZWFyY2hXb3JkKCkgewogICAgICBsZXQgbGlzdCA9IFtdOwogICAgICBjb25zb2xlLmxvZyh0aGlzLnRhYmxlRGF0YSwgdGhpcy5rZXl3b3JkKTsKICAgICAgdGhpcy50YWJsZURhdGEuZm9yRWFjaCgoaXRlbSkgPT4gewogICAgICAgIGxldCBvYmogPSBpdGVtLnN0b3JlX25hbWUuaW5kZXhPZih0aGlzLmtleXdvcmQpOwogICAgICAgIGlmIChvYmogIT0gLTEpIHsKICAgICAgICAgIGxpc3QucHVzaChpdGVtKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgICBjb25zb2xlLmxvZyhsaXN0KTsKICAgICAgaWYgKHRoaXMua2V5d29yZCkgewogICAgICAgIHRoaXMuc2VhcmNoVGFibGVEYXRhID0gbGlzdDsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnNlYXJjaFRhYmxlRGF0YSA9IFtdOwogICAgICB9CiAgICB9LAogICAgY2hlY2tib3hBbGwoKSB7CiAgICAgIHRoaXMuaXNBbGxDaGVja2VkID0gdGhpcy4kcmVmcy54VHJlZS5pc0FsbENoZWNrYm94Q2hlY2tlZCgpOwogICAgICBpZiAoIXRoaXMuaXNBbGxDaGVja2VkKSB7CiAgICAgICAgdGhpcy5jaGVja1BpZExpc3QgPSBbXTsKICAgICAgfQogICAgfSwKICAgIGNoZWNrYm94SXRlbShlKSB7CiAgICAgIGxldCBpZCA9IHBhcnNlSW50KGUucm93aWQpOwogICAgICBpZiAoZS5yb3cucHJvZHVjdF9pZCkgewogICAgICAgIGxldCBwSW5kZXggPSB0aGlzLmNoZWNrUGlkTGlzdC5pbmRleE9mKGUucm93LnByb2R1Y3RfaWQpOwogICAgICAgIGlmIChwSW5kZXggIT09IC0xICYmICFlLmNoZWNrZWQpIHsKICAgICAgICAgIHRoaXMuY2hlY2tQaWRMaXN0ID0gdGhpcy5jaGVja1BpZExpc3QuZmlsdGVyKChpdGVtKSA9PiBpdGVtICE9PSBlLnJvdy5wcm9kdWN0X2lkKTsKICAgICAgICB9CiAgICAgICAgaWYgKHBJbmRleCA9PT0gLTEgJiYgZS5jaGVja2VkKSB7CiAgICAgICAgICB0aGlzLmNoZWNrUGlkTGlzdC5wdXNoKGUucm93LnByb2R1Y3RfaWQpOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBsZXQgcEluZGV4ID0gdGhpcy5jaGVja1BpZExpc3QuaW5kZXhPZihpZCk7CiAgICAgICAgaWYgKHBJbmRleCAhPT0gLTEgJiYgIWUuY2hlY2tlZCkgewogICAgICAgICAgdGhpcy5jaGVja1BpZExpc3QgPSB0aGlzLmNoZWNrUGlkTGlzdC5maWx0ZXIoKGl0ZW0pID0+IGl0ZW0gIT09IGlkKTsKICAgICAgICB9CiAgICAgICAgaWYgKHBJbmRleCA9PT0gLTEgJiYgZS5jaGVja2VkKSB7CiAgICAgICAgICB0aGlzLmNoZWNrUGlkTGlzdC5wdXNoKGlkKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgdGhpcy5pc0FsbENoZWNrZWQgPSB0aGlzLiRyZWZzLnhUcmVlLmlzQWxsQ2hlY2tib3hDaGVja2VkKCk7CiAgICB9LAogICAgLy8g5re75Yqg6L+Q6LS55qih5p2/CiAgICBmcmVpZ2h0KCkgewogICAgICB0aGlzLiRyZWZzLnRlbXBsYXRlLmlkID0gMDsKICAgICAgdGhpcy4kcmVmcy50ZW1wbGF0ZS5pc1RlbXBsYXRlID0gdHJ1ZTsKICAgIH0sCgogICAgLy8g5aSa6YCJCiAgICBjaGFuZ2VDaGVja2JveChzZWxlY3Rpb24pIHsKICAgICAgdGhpcy5mb3JtVmFsaWRhdGUuYXR0cnMgPSBzZWxlY3Rpb247CiAgICB9LAogICAgc2Vja2lsbFRpbWVMaXN0KCkgewogICAgICBsZXQgdGhhdCA9IHRoaXM7CiAgICAgIHNlY2tpbGxUaW1lTGlzdEFwaSgpCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgdGhhdC50aW1lTGlzdCA9IHJlcy5kYXRhLmxpc3QuZGF0YTsKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgocmVzKSA9PiB7CiAgICAgICAgICB0aGF0LiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgIH0pOwogICAgfSwKICAgIC8vIOiOt+WPlui/kOi0ueaooeadv++8mwogICAgcHJvZHVjdEdldFRlbXBsYXRlKCkgewogICAgICBwcm9kdWN0R2V0VGVtcGxhdGVBcGkoKS50aGVuKChyZXMpID0+IHsKICAgICAgICB0aGlzLnRlbXBsYXRlTGlzdCA9IHJlcy5kYXRhOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDooajljZXpqozor4EKICAgIHZhbGlkYXRlKHByb3AsIHN0YXR1cywgZXJyb3IpIHsKICAgICAgaWYgKHN0YXR1cyA9PT0gZmFsc2UpIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKGVycm9yKTsKICAgICAgfQogICAgfSwKICAgIC8vIOWVhuWTgWlkCiAgICBnZXRQcm9kdWN0SWQoZGF0YSkgewogICAgICBjb25zb2xlLmxvZyhkYXRhLCAnZGF0YScpOwogICAgICB0aGlzLm1vZGFscyA9IGZhbHNlOwogICAgICBsZXQgbGlzdENoZWNrZWQgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGRhdGEpKTsKICAgICAgbGlzdENoZWNrZWQuZm9yRWFjaCgoaXRlbSkgPT4gewogICAgICAgIGl0ZW0ucGFyZW50ID0gMTsKICAgICAgICBpdGVtLnN0YXR1cyA9IDE7CiAgICAgICAgaXRlbS5pc0FsbENoZWNrZWQgPSB0cnVlOwogICAgICAgIGl0ZW0uYXR0cnMuZm9yRWFjaCgodmFsdWUpID0+IHsKICAgICAgICAgIHZhbHVlLmNhdGVfbmFtZSA9IGl0ZW0uY2F0ZV9uYW1lOwogICAgICAgICAgdmFsdWUuc3RvcmVfbGFiZWwgPSBpdGVtLnN0b3JlX2xhYmVsOwogICAgICAgICAgdmFsdWUucHJvZHVjdF9wcmljZSA9IGl0ZW0ucHJpY2U7CiAgICAgICAgICB2YWx1ZS5zdGF0dXMgPSAxOwogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgbGV0IGxpc3QgPSB0aGlzLnRhYmxlRGF0YS5jb25jYXQobGlzdENoZWNrZWQpOwogICAgICBsZXQgdW5pID0gdGhpcy51bmlxdWUobGlzdCk7CiAgICAgIHRoaXMudGFibGVEYXRhID0gdW5pOwogICAgfSwKICAgIC8v5a+56LGh5pWw57uE5Y676YeN77ybCiAgICB1bmlxdWUoYXJyKSB7CiAgICAgIGNvbnN0IHJlcyA9IG5ldyBNYXAoKTsKICAgICAgcmV0dXJuIGFyci5maWx0ZXIoKGFycikgPT4gIXJlcy5oYXMoYXJyLmlkKSAmJiByZXMuc2V0KGFyci5pZCwgMSkpOwogICAgfSwKICAgIGNhbmNlbCgpIHsKICAgICAgdGhpcy5tb2RhbHMgPSBmYWxzZTsKICAgIH0sCiAgICBva0JhdGNoKCkgewogICAgICBpZiAodGhpcy5mb3JtQmF0Y2gucHJpY2UgPT0gJycgJiYgdGhpcy5mb3JtQmF0Y2gucXVvdGEgPT0gJycpIHsKICAgICAgICByZXR1cm4gdGhpcy4kTWVzc2FnZS5lcnJvcign6K+36L6T5YWl56eS5p2A5Lu35oiW6ZmQ6YePJyk7CiAgICAgIH0KICAgICAgaWYgKHRoaXMuaXNBbGxDaGVja2VkICYmICh0aGlzLnRhYmxlRGF0YS5sZW5ndGggPT0gdGhpcy5zZWFyY2hUYWJsZURhdGEubGVuZ3RoIHx8ICF0aGlzLnNlYXJjaFRhYmxlRGF0YS5sZW5ndGgpKSB7CiAgICAgICAgdGhpcy50YWJsZURhdGEuZm9yRWFjaCgoaXRlbSkgPT4gewogICAgICAgICAgaXRlbS5hdHRycy5mb3JFYWNoKChqKSA9PiB7CiAgICAgICAgICAgIGlmICh0aGlzLmZvcm1CYXRjaC5wcmljZSAhPSAnJykgewogICAgICAgICAgICAgIGoucHJpY2UgPSB0aGlzLmZvcm1CYXRjaC5wcmljZTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAodGhpcy5mb3JtQmF0Y2gucXVvdGEgIT0gJycpIHsKICAgICAgICAgICAgICBqLnF1b3RhID0gdGhpcy5mb3JtQmF0Y2gucXVvdGE7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy50YWJsZURhdGEubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgdGhpcy5jaGVja1BpZExpc3QubGVuZ3RoOyBqKyspIHsKICAgICAgICAgICAgaWYgKHRoaXMudGFibGVEYXRhW2ldLmlkID09IHRoaXMuY2hlY2tQaWRMaXN0W2pdKSB7CiAgICAgICAgICAgICAgdGhpcy50YWJsZURhdGFbaV0uYXR0cnMuZm9yRWFjaCgoeCkgPT4gewogICAgICAgICAgICAgICAgaWYgKHRoaXMuZm9ybUJhdGNoLnByaWNlICE9ICcnKSB7CiAgICAgICAgICAgICAgICAgIHgucHJpY2UgPSB0aGlzLmZvcm1CYXRjaC5wcmljZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIC8vIOaJuemHj+iuvue9rumZkOmHj+S4jeS4uuepuu+8jOWImeS/ruaUueinhOagvOS4iuaetueahOmZkOmHjwogICAgICAgICAgICAgICAgaWYgKHRoaXMuZm9ybUJhdGNoLnF1b3RhICE9ICcnICYmIHguc3RhdHVzKSB7CiAgICAgICAgICAgICAgICAgIHgucXVvdGEgPSB0aGlzLmZvcm1CYXRjaC5xdW90YTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgICB0aGlzLm1vZGFsc1NldCA9IGZhbHNlOwogICAgfSwKICAgIC8vIOWFt+S9k+aXpeacnwogICAgb25jaGFuZ2VUaW1lKGUpIHsKICAgICAgdGhpcy5mb3JtVmFsaWRhdGUuc2VjdGlvbl90aW1lID0gZTsKICAgIH0sCiAgICAvLyDor6bmg4UKICAgIGdldEluZm8oKSB7CiAgICAgIHRoaXMuc3BpblNob3cgPSB0cnVlOwogICAgICBzZWNraWxsQWN0aXZpdHlJbmZvQXBpKHRoaXMuJHJvdXRlLnBhcmFtcy5pZCkKICAgICAgICAudGhlbihhc3luYyAocmVzKSA9PiB7CiAgICAgICAgICB0aGlzLmZvcm1WYWxpZGF0ZSA9IHJlcy5kYXRhOwogICAgICAgICAgdGhpcy50YWJsZURhdGEgPSByZXMuZGF0YS5wcm9kdWN0X2luZm9zOwogICAgICAgICAgdGhpcy50YWJsZURhdGEuZm9yRWFjaCgoaXRlbSkgPT4gewogICAgICAgICAgICBpdGVtLnBhcmVudCA9IDE7CiAgICAgICAgICAgIGl0ZW0uaXNBbGxDaGVja2VkID0gdHJ1ZTsKICAgICAgICAgICAgaXRlbS5hdHRycy5mb3JFYWNoKCh2YWx1ZSkgPT4gewogICAgICAgICAgICAgIHZhbHVlLmNhdGVfbmFtZSA9IGl0ZW0uY2F0ZV9uYW1lOwogICAgICAgICAgICAgIHZhbHVlLnN0b3JlX2xhYmVsID0gaXRlbS5zdG9yZV9sYWJlbDsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9KTsKICAgICAgICAgIHRoaXMuc3BpblNob3cgPSBmYWxzZTsKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgocmVzKSA9PiB7CiAgICAgICAgICB0aGlzLnNwaW5TaG93ID0gZmFsc2U7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgIH0pOwogICAgfSwKICAgIGdldFJvd0tleXMocm93KSB7CiAgICAgIHJldHVybiByb3cuaWQ7CiAgICB9LAogICAgY2hhbmdlUHJpY2UoZSwgaW5kZXgpIHsKICAgICAgdGhpcy4kc2V0KHRoaXMuc3BlY3NEYXRhW2luZGV4XSwgJ3ByaWNlJywgZSk7CiAgICB9LAogICAgLy8g5LiL5LiA5q2lCiAgICBuZXh0KG5hbWUpIHsKICAgICAgbGV0IHRoYXQgPSB0aGlzOwogICAgICBpZiAodGhpcy5jdXJyZW50ID09PSAxKSB7CiAgICAgICAgdGhpcy5mb3JtVmFsaWRhdGUuaWQgPSBOdW1iZXIodGhpcy4kcm91dGUucGFyYW1zLmlkKSB8fCAwOwogICAgICAgIHRoaXMuc3VibWl0T3BlbiA9IHRydWU7CiAgICAgICAgbGV0IHByb2R1Y3RfaW5mb3MgPSBbXTsKICAgICAgICB0aGlzLnRhYmxlRGF0YS5mb3JFYWNoKChpdGVtKSA9PiB7CiAgICAgICAgICBwcm9kdWN0X2luZm9zLnB1c2goewogICAgICAgICAgICBpZDogaXRlbS5pZCwKICAgICAgICAgICAgc3RhdHVzOiBpdGVtLnN0YXR1cywKICAgICAgICAgICAgYXR0cnM6IGl0ZW0uYXR0cnMsCiAgICAgICAgICB9KTsKICAgICAgICAgIHRoaXMuZm9ybVZhbGlkYXRlLnByb2R1Y3RfaW5mb3MgPSBwcm9kdWN0X2luZm9zOwogICAgICAgIH0pOwogICAgICAgIHNlY2tpbGxBY3Rpdml0eUFkZEFwaSh0aGlzLmZvcm1WYWxpZGF0ZSkKICAgICAgICAgIC50aGVuKGFzeW5jIChyZXMpID0+IHsKICAgICAgICAgICAgdGhpcy5zdWJtaXRPcGVuID0gZmFsc2U7CiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcyhyZXMubXNnKTsKICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgICAgICAgcGF0aDogdGhpcy4kcm91dGVQcm9TdHIgKyAnL21hcmtldGluZy9zdG9yZV9zZWNraWxsL2luZGV4JywKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSwgNTAwKTsKICAgICAgICAgIH0pCiAgICAgICAgICAuY2F0Y2goKHJlcykgPT4gewogICAgICAgICAgICB0aGlzLnN1Ym1pdE9wZW4gPSBmYWxzZTsKICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuY3VycmVudCArPSAxOwogICAgICB9CiAgICB9LAogICAgLy8g5LiK5LiA5q2lCiAgICBzdGVwKCkgewogICAgICB0aGlzLmN1cnJlbnQtLTsKICAgIH0sCiAgICAvLyDngrnlh7vllYblk4Hlm74KICAgIG1vZGFsUGljVGFwKHRpdCwgcGljVGl0LCBpbmRleCkgewogICAgICB0aGlzLm1vZGFsUGljID0gdHJ1ZTsKICAgICAgdGhpcy5pc0Nob2ljZSA9IHRpdCA9PT0gJ2RhbicgPyAn5Y2V6YCJJyA6ICflpJrpgIknOwogICAgICB0aGlzLnBpY1RpdCA9IHBpY1RpdDsKICAgICAgdGhpcy50YWJsZUluZGV4ID0gaW5kZXg7CiAgICB9LAogICAgLy8g6I635Y+W5Y2V5byg5Zu+54mH5L+h5oGvCiAgICBnZXRQaWMocGMpIHsKICAgICAgc3dpdGNoICh0aGlzLnBpY1RpdCkgewogICAgICAgIGNhc2UgJ2RhbkZyb20nOgogICAgICAgICAgdGhpcy5mb3JtVmFsaWRhdGUuaW1hZ2UgPSBwYy5hdHRfZGlyOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgLy8gY2FzZSAnZGFuVGFibGUnOgogICAgICAgIC8vICAgICB0aGlzLnNwZWNzRGF0YVt0aGlzLnRhYmxlSW5kZXhdLnBpYyA9IHBjLmF0dF9kaXI7CiAgICAgICAgLy8gICAgIGJyZWFrOwogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICBpZiAoISF0aGlzLmZvcm1WYWxpZGF0ZS5hdHRycyAmJiB0aGlzLmZvcm1WYWxpZGF0ZS5hdHRycy5sZW5ndGgpIHsKICAgICAgICAgICAgdGhpcy4kc2V0KHRoaXMuc3BlY3NEYXRhW3RoaXMudGFibGVJbmRleF0sICdfY2hlY2tlZCcsIHRydWUpOwogICAgICAgICAgfQogICAgICAgICAgdGhpcy5zcGVjc0RhdGFbdGhpcy50YWJsZUluZGV4XS5waWMgPSBwYy5hdHRfZGlyOwogICAgICB9CiAgICAgIHRoaXMubW9kYWxQaWMgPSBmYWxzZTsKICAgIH0sCiAgICAvLyDojrflj5blpJrlvKDlm77kv6Hmga8KICAgIGdldFBpY0QocGMpIHsKICAgICAgdGhpcy5pbWFnZXMgPSBwYzsKICAgICAgdGhpcy5pbWFnZXMubWFwKChpdGVtKSA9PiB7CiAgICAgICAgdGhpcy5mb3JtVmFsaWRhdGUuaW1hZ2VzLnB1c2goaXRlbS5hdHRfZGlyKTsKICAgICAgICB0aGlzLmZvcm1WYWxpZGF0ZS5pbWFnZXMgPSB0aGlzLmZvcm1WYWxpZGF0ZS5pbWFnZXMuc3BsaWNlKDAsIDEwKTsKICAgICAgfSk7CiAgICAgIHRoaXMubW9kYWxQaWMgPSBmYWxzZTsKICAgIH0sCiAgICBoYW5kbGVSZW1vdmUoaSkgewogICAgICB0aGlzLmltYWdlcy5zcGxpY2UoaSwgMSk7CiAgICAgIHRoaXMuZm9ybVZhbGlkYXRlLmltYWdlcy5zcGxpY2UoaSwgMSk7CiAgICB9LAogICAgLy8g6YCJ5oup5ZWG5ZOBCiAgICBjaGFuZ2VHb29kcygpIHsKICAgICAgdGhpcy5tb2RhbHMgPSB0cnVlOwogICAgICB0aGlzLiRuZXh0VGljaygoZSkgPT4gewogICAgICAgIHRoaXMuJHJlZnMuZ29vZHNsaXN0LmZvcm1WYWxpZGF0ZS5pc19zaG93ID0gLTE7CiAgICAgICAgdGhpcy4kcmVmcy5nb29kc2xpc3QuZm9ybVZhbGlkYXRlLnR5cGUgPSAzOwogICAgICAgIHRoaXMuJHJlZnMuZ29vZHNsaXN0LmdldExpc3QoKTsKICAgICAgICB0aGlzLiRyZWZzLmdvb2RzbGlzdC5nb29kc0NhdGVnb3J5KCk7CiAgICAgIH0pOwogICAgfSwgLy8g56e75YqoCiAgICBoYW5kbGVEcmFnU3RhcnQoZSwgaXRlbSkgewogICAgICB0aGlzLmRyYWdnaW5nID0gaXRlbTsKICAgIH0sCiAgICBoYW5kbGVEcmFnRW5kKGUsIGl0ZW0pIHsKICAgICAgdGhpcy5kcmFnZ2luZyA9IG51bGw7CiAgICB9LAogICAgLy8g6aaW5YWI5oqKZGl25Y+Y5oiQ5Y+v5Lul5pS+572u55qE5YWD57Sg77yM5Y2z6YeN5YaZZHJhZ2VudGVyL2RyYWdvdmVyCiAgICBoYW5kbGVEcmFnT3ZlcihlKSB7CiAgICAgIGUuZGF0YVRyYW5zZmVyLmRyb3BFZmZlY3QgPSAnbW92ZSc7IC8vIGUuZGF0YVRyYW5zZmVyLmRyb3BFZmZlY3Q9Im1vdmUiOy8v5ZyoZHJhZ2VudGVy5Lit6ZKI5a+55pS+572u55uu5qCH5p2l6K6+572uIQogICAgfSwKICAgIGhhbmRsZURyYWdFbnRlcihlLCBpdGVtKSB7CiAgICAgIGUuZGF0YVRyYW5zZmVyLmVmZmVjdEFsbG93ZWQgPSAnbW92ZSc7IC8vIOS4uumcgOimgeenu+WKqOeahOWFg+e0oOiuvue9rmRyYWdzdGFydOS6i+S7tgogICAgICBpZiAoaXRlbSA9PT0gdGhpcy5kcmFnZ2luZykgewogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICBjb25zdCBuZXdJdGVtcyA9IFsuLi50aGlzLmZvcm1WYWxpZGF0ZS5pbWFnZXNdOwogICAgICBjb25zdCBzcmMgPSBuZXdJdGVtcy5pbmRleE9mKHRoaXMuZHJhZ2dpbmcpOwogICAgICBjb25zdCBkc3QgPSBuZXdJdGVtcy5pbmRleE9mKGl0ZW0pOwogICAgICBuZXdJdGVtcy5zcGxpY2UoZHN0LCAwLCAuLi5uZXdJdGVtcy5zcGxpY2Uoc3JjLCAxKSk7CiAgICAgIHRoaXMuZm9ybVZhbGlkYXRlLmltYWdlcyA9IG5ld0l0ZW1zOwogICAgfSwKICB9LAp9Owo="},null]}