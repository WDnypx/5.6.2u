{"remainingRequest":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\product\\productAdd\\components\\virtualTabel.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\product\\productAdd\\components\\virtualTabel.vue","mtime":1750730640573},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1753254258567},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1753254260598}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["virtualTabel.vue"],"names":[],"mappings":";AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"virtualTabel.vue","sourceRoot":"src/pages/product/productAdd/components","sourcesContent":["<template>\n  <div>\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nimport throttle from 'lodash/throttle';\n\nexport default {\n  name: 'el-table-virtual-scroll',\n  props: {\n    data: {\n      type: Array,\n      required: true,\n    },\n    height: {\n      type: Number,\n      default: 60,\n    },\n    buffer: {\n      type: Number,\n      default: 500,\n    },\n    keyProp: {\n      type: String,\n      default: 'id',\n    },\n    throttleTime: {\n      type: Number,\n      default: 100,\n    },\n  },\n  data() {\n    return {\n      sizes: {}, // 尺寸映射（依赖响应式）\n    };\n  },\n  computed: {\n    // 计算出每个item（的key值）到滚动容器顶部的距离\n    offsetMap({ keyProp, height, sizes, data }) {\n      const res = {};\n      let total = 0;\n      for (let i = 0; i < data.length; i++) {\n        const key = data[i][keyProp];\n        res[key] = total;\n\n        const curSize = sizes[key];\n        const size = typeof curSize === 'number' ? curSize : height;\n        total += size;\n      }\n      return res;\n    },\n  },\n  methods: {\n    // 初始化数据\n    initData() {\n      // 可视范围内显示数据\n      this.renderData = [];\n      // 页面可视范围顶端、底部\n      this.top = undefined;\n      this.bottom = undefined;\n      // 截取页面可视范围内显示数据的开始和结尾索引\n      this.start = 0;\n      this.end = undefined;\n\n      this.scroller = this.$el.querySelector('.el-table__body-wrapper');\n\n      // 初次执行\n      setTimeout(() => {\n        this.handleScroll();\n      }, 100);\n\n      // 监听事件\n      this.onScroll = throttle(this.handleScroll, this.throttleTime);\n      this.scroller.addEventListener('scroll', this.handleScroll);\n      window.addEventListener('resize', this.onScroll);\n    },\n\n    // 更新尺寸（高度）\n    updateSizes() {\n      const rows = this.$el.querySelectorAll('.el-table__body > tbody > .el-table__row');\n\n      Array.from(rows).forEach((row, index) => {\n        const item = this.renderData[index];\n        if (!item) return;\n\n        const key = item[this.keyProp];\n        const offsetHeight = row.offsetHeight;\n\n        if (this.sizes[key] !== offsetHeight) {\n          this.$set(this.sizes, key, offsetHeight);\n        }\n      });\n    },\n\n    // 处理滚动事件\n    handleScroll(shouldUpdate = true) {\n      // 更新当前尺寸（高度）\n      this.updateSizes();\n      // 计算renderData\n      this.calcRenderData();\n      // 计算位置\n      this.calcPosition();\n      shouldUpdate && this.updatePosition();\n      // 触发事件\n      this.$emit('change', this.renderData, this.start, this.end);\n    },\n\n    // 获取某条数据offsetTop\n    getOffsetTop(index) {\n      const item = this.data[index];\n      if (item) {\n        return this.offsetMap[item[this.keyProp]] || 0;\n      }\n      return 0;\n    },\n\n    // 获取某条数据的尺寸\n    getSize(index) {\n      const item = this.data[index];\n      if (item) {\n        const key = item[this.keyProp];\n        return this.sizes[key] || this.height;\n      }\n      return this.height;\n    },\n\n    // 计算只在视图上渲染的数据\n    calcRenderData() {\n      const { scroller, data, buffer } = this;\n      // 计算可视范围顶部、底部\n      const top = scroller.scrollTop - buffer;\n      const bottom = scroller.scrollTop + scroller.offsetHeight + buffer;\n\n      // 二分法计算可视范围内的开始的第一个内容\n      let l = 0;\n      let r = data.length - 1;\n      let mid = 0;\n      while (l <= r) {\n        mid = Math.floor((l + r) / 2);\n        const midVal = this.getOffsetTop(mid);\n        if (midVal < top) {\n          const midNextVal = this.getOffsetTop(mid + 1);\n          if (midNextVal > top) break;\n          l = mid + 1;\n        } else {\n          r = mid - 1;\n        }\n      }\n\n      // 计算渲染内容的开始、结束索引\n      let start = mid;\n      let end = data.length - 1;\n      for (let i = start + 1; i < data.length; i++) {\n        const offsetTop = this.getOffsetTop(i);\n        if (offsetTop >= bottom) {\n          end = i;\n          break;\n        }\n      }\n\n      // 开始索引始终保持偶数，如果为奇数，则加1使其保持偶数【确保表格行的偶数数一致，不会导致斑马纹乱序显示】\n      if (start % 2) {\n        start = start - 1;\n      }\n      // console.log(start, end, 'start end')\n\n      this.top = top;\n      this.bottom = bottom;\n      this.start = start;\n      this.end = end;\n      this.renderData = data.slice(start, end + 1);\n    },\n\n    // 计算位置\n    calcPosition() {\n      const last = this.data.length - 1;\n      // 计算内容总高度\n      const wrapHeight = this.getOffsetTop(last) + this.getSize(last);\n      // 计算当前滚动位置需要撑起的高度\n      const offsetTop = this.getOffsetTop(this.start);\n\n      // 设置dom位置\n      const classNames = [\n        '.el-table__body-wrapper',\n        '.el-table__fixed-right .el-table__fixed-body-wrapper',\n        '.el-table__fixed .el-table__fixed-body-wrapper',\n      ];\n      classNames.forEach((className) => {\n        const el = this.$el.querySelector(className);\n        if (!el) return;\n\n        // 创建wrapEl、innerEl\n        if (!el.wrapEl) {\n          const wrapEl = document.createElement('div');\n          const innerEl = document.createElement('div');\n          wrapEl.appendChild(innerEl);\n          innerEl.appendChild(el.children[0]);\n          el.insertBefore(wrapEl, el.firstChild);\n          el.wrapEl = wrapEl;\n          el.innerEl = innerEl;\n        }\n\n        if (el.wrapEl) {\n          // 设置高度\n          el.wrapEl.style.height = wrapHeight + 'px';\n          // 设置transform撑起高度\n          el.innerEl.style.transform = `translateY(${offsetTop}px)`;\n          // 设置paddingTop撑起高度\n          // el.innerEl.style.paddingTop = `${offsetTop}px`\n        }\n      });\n    },\n\n    // 空闲时更新位置\n    updatePosition() {\n      this.timer && clearTimeout(this.timer);\n      this.timer = setTimeout(() => {\n        this.timer && clearTimeout(this.timer);\n        // 传入false，避免一直循环调用\n        this.handleScroll(false);\n      }, this.throttleTime + 10);\n    },\n\n    // 【外部调用】更新\n    update() {\n      this.handleScroll();\n    },\n\n    // 【外部调用】滚动到第几行\n    scrollTo(index, stop = false) {\n      const item = this.data[index];\n      if (item && this.scroller) {\n        this.updateSizes();\n        this.calcRenderData();\n\n        this.$nextTick(() => {\n          const offsetTop = this.getOffsetTop(index);\n          this.scroller.scrollTop = offsetTop;\n\n          // 调用两次scrollTo，第一次滚动时，如果表格行初次渲染高度发生变化时，会导致滚动位置有偏差，此时需要第二次执行滚动，确保滚动位置无误\n          if (!stop) {\n            setTimeout(() => {\n              this.scrollTo(index, true);\n            }, 50);\n          }\n        });\n      }\n    },\n\n    // 【外部调用】重置\n    reset() {\n      this.sizes = {};\n      this.scrollTo(0, false);\n    },\n  },\n  watch: {\n    data() {\n      this.update();\n    },\n  },\n  created() {\n    this.$nextTick(() => {\n      this.initData();\n    });\n  },\n  beforeDestroy() {\n    if (this.scroller) {\n      this.scroller.removeEventListener('scroll', this.onScroll);\n      window.removeEventListener('resize', this.onScroll);\n    }\n  },\n};\n</script>\n\n<style lang=\"less\" scoped></style>\n"]}]}