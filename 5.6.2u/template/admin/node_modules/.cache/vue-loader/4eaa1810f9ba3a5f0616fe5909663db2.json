{"remainingRequest":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\system\\backendRouting\\debugging.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\system\\backendRouting\\debugging.vue","mtime":1731313973100},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1753254258567},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1753254260598}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCByZXF1ZXN0IGZyb20gJy4vcmVxdWVzdCc7CmltcG9ydCBNb25hY29FZGl0b3IgZnJvbSAnLi9jb21wb25lbnRzL01vbmFjb0VkaXRvci52dWUnOwppbXBvcnQgdnVlZHJhZ2dhYmxlIGZyb20gJ3Z1ZWRyYWdnYWJsZSc7CmltcG9ydCB7IGdldENvb2tpZXMgfSBmcm9tICdAL2xpYnMvdXRpbCc7CgpmdW5jdGlvbiByZXF1ZXN0TWV0aG9kKHVybCwgbWV0aG9kLCBwYXJhbXMsIGRhdGEsIGhlYWRlckl0ZW0pIHsKICByZXR1cm4gcmVxdWVzdCh7CiAgICB1cmwsCiAgICBtZXRob2QsCiAgICBwYXJhbXMsCiAgICBkYXRhLAogICAgaGVhZGVySXRlbSwKICB9KTsKfQpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogeyBNb25hY29FZGl0b3IgfSwKICBwcm9wczogewogICAgZm9ybVZhbGlkYXRlOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiB7fTsKICAgICAgfSwKICAgIH0sCiAgICByZXF1ZXN0VHlwZUxpc3Q6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0sCiAgICB9LAogICAgdHlwZUxpc3Q6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0sCiAgICB9LAogICAgYXBpVHlwZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdhZG1pbmFwaScsCiAgICB9LAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGJvZHlUeXBlOiAnZm9ybS1kYXRhJywKICAgICAgaW50ZXJmYWNlRGF0YTogdW5kZWZpbmVkLAogICAgICBwYXJhbXNUeXBlOiAnUGFyYW1zJywKICAgICAgZWRpdG9yOiAnJywgLy/lvZPliY3nvJbovpHlmajlr7nosaEKICAgICAgY29kZXM6ICcnLAogICAgICBqc29uQm9keTogJycsCiAgICB9OwogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuaW50ZXJmYWNlRGF0YSA9IHRoaXMuZm9ybVZhbGlkYXRlOwogICAgdGhpcy5pbnRlcmZhY2VEYXRhLnJlcXVlc3RfYm9keSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5pbnRlcmZhY2VEYXRhLnJlcXVlc3QpKTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICBpZiAoIXRoaXMuJHJlZnMuelRhYmxlLmdldFRhYmxlRGF0YSgpLnRhYmxlRGF0YS5sZW5ndGggJiYgdGhpcy5hcGlUeXBlID09ICdhZG1pbmFwaScpIHsKICAgICAgdGhpcy5pbnNlcnRFdmVudCgnelRhYmxlJywgewogICAgICAgIGF0dHJpYnV0ZTogJ0F1dGhvcmktWmF0aW9uJywKICAgICAgICB2YWx1ZTogJ0JlYXJlciAnICsgZ2V0Q29va2llcygndG9rZW4nKSwKICAgICAgfSk7CiAgICAgIC8vIHRoaXMuaW5zZXJ0RXZlbnQoJ3phVGFibGUnKTsKICAgIH0gZWxzZSB7CiAgICAgIGlmICh0aGlzLmludGVyZmFjZURhdGEuaGVhZGVyKSB7CiAgICAgICAgdGhpcy5pbnRlcmZhY2VEYXRhLmhlYWRlci5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4gewogICAgICAgICAgdGhpcy5pbnNlcnRFdmVudCgnelRhYmxlJywgewogICAgICAgICAgICBhdHRyaWJ1dGU6IGl0ZW0uYXR0cmlidXRlIHx8ICcnLAogICAgICAgICAgICB2YWx1ZTogaXRlbS52YWx1ZSB8fCAnJywKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBoYW5kbGVDaGFuZ2UoZSwgcm93LCB0eXBlKSB7CiAgICAgIGlmIChlLnZhbHVlICE9PSAnYXJyYXknICYmIGUudmFsdWUgIT09ICdvYmplY3QnKSB7CiAgICAgICAgaWYgKHJvdy5jaGlsZHJlbi5sZW5ndGgpIHsKICAgICAgICAgIGxldCBhcnIgPSB0aGlzLiRyZWZzW3R5cGVdLmdldFRhYmxlRGF0YSgpLnRhYmxlRGF0YTsKICAgICAgICAgIGxldCBpZCA9IHJvdy5jaGlsZHJlblswXS5wYXJlbnRJZDsKICAgICAgICAgIGNvbnN0ICR0YWJsZSA9IHRoaXMuJHJlZnNbdHlwZV07CiAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykgewogICAgICAgICAgICBpZiAoYXJyW2ldLnBhcmVudElkID09IGlkKSB7CiAgICAgICAgICAgICAgYXdhaXQgJHRhYmxlLnJlbW92ZShhcnJbaV0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgaW5zZXJ0Q29weSgpIHsKICAgICAgdGhpcy4kY29weVRleHQodGhpcy5jb2RlcykKICAgICAgICAudGhlbigobWVzc2FnZSkgPT4gewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCflpI3liLbmiJDlip8nKTsKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCflpI3liLblpLHotKUnKTsKICAgICAgICB9KTsKICAgIH0sCiAgICBhc3luYyByZXF1ZXN0RGF0YSgpIHsKICAgICAgbGV0IHVybCwgbWV0aG9kLCBwYXJhbXMsIGJvZHksIGhlYWRlcnM7CiAgICAgIHVybCA9IHRoaXMuYXBpVHlwZSArICcvJyArIHRoaXMuaW50ZXJmYWNlRGF0YS5wYXRoOwogICAgICBtZXRob2QgPSB0aGlzLmludGVyZmFjZURhdGEubWV0aG9kOwogICAgICBwYXJhbXMgPSB0aGlzLmZpbHRlcnNEYXRhKChhd2FpdCB0aGlzLiRyZWZzLnhUYWJsZS5nZXRUYWJsZURhdGEoKS50YWJsZURhdGEpIHx8IFtdKTsKICAgICAgYm9keSA9CiAgICAgICAgdGhpcy5ib2R5VHlwZSA9PT0gJ2pzb24nCiAgICAgICAgICA/IHRoaXMuanNvbkJvZHkKICAgICAgICAgIDogdGhpcy5maWx0ZXJzRGF0YSgoYXdhaXQgdGhpcy4kcmVmcy55VGFibGUuZ2V0VGFibGVEYXRhKCkudGFibGVEYXRhKSB8fCBbXSk7CiAgICAgIGxldCBoID0gdGhpcy5maWx0ZXJzRGF0YSgoYXdhaXQgdGhpcy4kcmVmcy56VGFibGUuZ2V0VGFibGVEYXRhKCkudGFibGVEYXRhKSB8fCBbXSk7CiAgICAgIGhlYWRlcnMgPSBoOwogICAgICB0aGlzLmNvZGVzID0gJyc7CiAgICAgIHJlcXVlc3RNZXRob2QodXJsLCBtZXRob2QsIHBhcmFtcywgYm9keSwgaGVhZGVycykKICAgICAgICAudGhlbigocmVzKSA9PiB7CiAgICAgICAgICBpZiAoIXJlcykgcmV0dXJuIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+aOpeWPo+W8guW4uCcpOwogICAgICAgICAgdGhpcy5jb2RlcyA9IEpTT04uc3RyaW5naWZ5KHJlcyk7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKGVycikgPT4gewogICAgICAgICAgaWYgKCFlcnIpIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKCfmjqXlj6PlvILluLgnKTsKICAgICAgICAgIHRoaXMuY29kZXMgPSBKU09OLnN0cmluZ2lmeShlcnIpOwogICAgICAgIH0pOwogICAgfSwKICAgIGZpbHRlcnNEYXRhKGFycikgewogICAgICB0cnkgewogICAgICAgIGxldCB4ID0ge307CiAgICAgICAgYXJyLm1hcCgoZSkgPT4gewogICAgICAgICAgaWYgKCFlLnBhcmVudElkKSB7CiAgICAgICAgICAgIGZvciAobGV0IGkgaW4gZSkgewogICAgICAgICAgICAgIGlmIChpID09ICdhdHRyaWJ1dGUnKSB7CiAgICAgICAgICAgICAgICBpZiAoZS50eXBlID09PSAnb2JqZWN0JykgewogICAgICAgICAgICAgICAgICBsZXQgb2JqID0ge307CgogICAgICAgICAgICAgICAgICBlLmNoaWxkcmVuLm1hcCgoaXRlbSwgaW5kZXgpID0+IHsKICAgICAgICAgICAgICAgICAgICBvYmogPSB0aGlzLmZpbHRlcnNPYmooaXRlbSwgMSk7CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICB4W2VbaV1dID0gb2JqOwogICAgICAgICAgICAgICAgfSBlbHNlIGlmIChlLnR5cGUgIT09ICdhcnJheScpIHsKICAgICAgICAgICAgICAgICAgeFtlW2ldXSA9IGUudmFsdWUgfHwgJyc7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBsZXQgYXJyID0gW107CiAgICAgICAgICAgICAgICAgIGUuY2hpbGRyZW4ubWFwKChpdGVtLCBpbmRleCkgPT4gewogICAgICAgICAgICAgICAgICAgIGFycltpbmRleF0gPSB0aGlzLmZpbHRlcnNPYmooaXRlbSk7CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICB4W2VbaV1dID0gYXJyOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIHJldHVybiB4OwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfQogICAgfSwKICAgIC8vIHR5cGUgMSDkuLpvYmrlsZ7mgKcKICAgIGZpbHRlcnNPYmoob2JqLCB0eXBlKSB7CiAgICAgIGxldCB4ID0ge307CiAgICAgIGZvciAobGV0IGkgaW4gb2JqKSB7CiAgICAgICAgaWYgKGkgPT0gJ2F0dHJpYnV0ZScpIHsKICAgICAgICAgIGlmIChvYmoudHlwZSA9PT0gJ29iamVjdCcpIHsKICAgICAgICAgICAgbGV0IG9qID0ge307CiAgICAgICAgICAgIG9iai5jaGlsZHJlbi5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7CiAgICAgICAgICAgICAgb2pbb2JqLmF0dHJpYnV0ZV0gPSB0aGlzLmZpbHRlcnNPYmooaXRlbSk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICB4ID0gb2o7CiAgICAgICAgICB9IGVsc2UgaWYgKG9iai50eXBlICE9PSAnYXJyYXknKSB7CiAgICAgICAgICAgIGlmICh0eXBlKSB7CiAgICAgICAgICAgICAgeFtvYmouYXR0cmlidXRlXSA9IG9iai52YWx1ZSB8fCAnJzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB4W29ialtpXV0gPSBvYmoudmFsdWUgfHwgJyc7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGxldCBhcnIgPSBbXTsKICAgICAgICAgICAgb2JqLmNoaWxkcmVuLm1hcCgoaXRlbSwgaW5kZXgpID0+IHsKICAgICAgICAgICAgICBhcnJbaW5kZXhdID0gdGhpcy5maWx0ZXJzT2JqKGl0ZW0pOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgeFtvYmpbaV1dID0gYXJyOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4geDsKICAgIH0sCiAgICBjaGFuZ2VUYWIobmFtZSkgewogICAgICAvLyBpZiAobmFtZSA9PT0gJ0hlYWRlcicpIHsKICAgICAgLy8gICBpZiAoIXRoaXMuJHJlZnMuelRhYmxlLmdldFRhYmxlRGF0YSgpLnRhYmxlRGF0YS5sZW5ndGgpIHsKICAgICAgLy8gICAgIHRoaXMuaW5zZXJ0RXZlbnQoJ3pUYWJsZScsIHsKICAgICAgLy8gICAgICAgYXR0cmlidXRlOiAnQXV0aG9yaS1aYXRpb24nLAogICAgICAvLyAgICAgICB2YWx1ZTogJ0JlYXJlciAnICsgZ2V0Q29va2llcygndG9rZW4nKSwKICAgICAgLy8gICAgIH0pOwogICAgICAvLyAgICAgdGhpcy5pbnNlcnRFdmVudCgnemFUYWJsZScpOwogICAgICAvLyAgIH0KICAgICAgLy8gfQogICAgfSwKICAgIGFzeW5jIGluc2VydEV2ZW50KHR5cGUsIGQpIHsKICAgICAgY29uc3QgJHRhYmxlID0gdGhpcy4kcmVmc1t0eXBlXTsKICAgICAgbGV0IG5ld1JvdzsKICAgICAgaWYgKHR5cGUgPT0gJ3hUYWJsZScpIHsKICAgICAgICBuZXdSb3cgPSB7CiAgICAgICAgICBhdHRyaWJ1dGU6ICcnLAogICAgICAgICAgdHlwZTogJ3N0cmluZycsCiAgICAgICAgICBtdXN0OiAwLAogICAgICAgICAgdmFsdWU6ICcnLAogICAgICAgICAgdHJpcDogJycsCiAgICAgICAgfTsKICAgICAgfSBlbHNlIGlmICh0eXBlID09ICd5VGFibGUnKSB7CiAgICAgICAgbmV3Um93ID0gewogICAgICAgICAgYXR0cmlidXRlOiAnJywKICAgICAgICAgIHR5cGU6ICdzdHJpbmcnLAogICAgICAgICAgdmFsdWU6ICcnLAogICAgICAgICAgbXVzdDogMCwKICAgICAgICAgIHRyaXA6ICcnLAogICAgICAgIH07CiAgICAgIH0gZWxzZSBpZiAodHlwZSA9PSAnelRhYmxlJykgewogICAgICAgIG5ld1JvdyA9IHsKICAgICAgICAgIGF0dHJpYnV0ZTogJycsCiAgICAgICAgICB0eXBlOiAnJywKICAgICAgICAgIHZhbHVlOiAnJywKICAgICAgICAgIHRyaXA6ICcnLAogICAgICAgIH07CiAgICAgICAgbmV3Um93ID0geyAuLi5uZXdSb3csIC4uLmQgfTsKICAgICAgfSBlbHNlIGlmICh0eXBlID09ICd6YVRhYmxlJykgewogICAgICAgIG5ld1JvdyA9IHsKICAgICAgICAgIGF0dHJpYnV0ZTogJ3Rva2VuJywKICAgICAgICAgIHR5cGU6ICdzdHJpbmcnLAogICAgICAgICAgdmFsdWU6ICcnLAogICAgICAgICAgbXVzdDogMCwKICAgICAgICAgIHRyaXA6ICcnLAogICAgICAgIH07CiAgICAgIH0gZWxzZSB7CiAgICAgICAgbmV3Um93ID0gewogICAgICAgICAgY29kZTogJycsCiAgICAgICAgICB2YWx1ZTogJycsCiAgICAgICAgICBzb2x1dGlvbjogJycsCiAgICAgICAgfTsKICAgICAgfQogICAgICBjb25zdCB7IHJvdzogZGF0YSB9ID0gYXdhaXQgJHRhYmxlLmluc2VydEF0KG5ld1JvdywgLTEpOwogICAgICBhd2FpdCAkdGFibGUuc2V0QWN0aXZlQ2VsbChkYXRhLCAnbmFtZScpOwogICAgfSwKICAgIGFzeW5jIGluc2VydFJvdyhjdXJyUm93LCB0eXBlKSB7CiAgICAgIGNvbnN0ICR0YWJsZSA9IHRoaXMuJHJlZnNbdHlwZV07CiAgICAgIC8vIOWmguaenCBudWxsIOWImeaPkuWFpeWIsOebruagh+iKgueCuemhtumDqAogICAgICAvLyDlpoLmnpwgLTEg5YiZ5o+S5YWl5Yiw55uu5qCH6IqC54K55bqV6YOoCiAgICAgIC8vIOWmguaenCByb3cg5YiZ5pyJ5o+S5YWl5Yiw5pWI55qE55uu5qCH6IqC54K56K+l6KGM55qE5L2N572uCiAgICAgIGxldCByZWNvcmQ7CiAgICAgIGlmICh0eXBlID09ICd4VGFibGUnKSB7CiAgICAgICAgcmVjb3JkID0gewogICAgICAgICAgYXR0cmlidXRlOiAnJywKICAgICAgICAgIHR5cGU6ICdzdHJpbmcnLAogICAgICAgICAgbXVzdDogMCwKICAgICAgICAgIHZhbHVlOiAnJywKICAgICAgICAgIHRyaXA6ICcnLAogICAgICAgICAgaWQ6IERhdGUubm93KCksCiAgICAgICAgICBwYXJlbnRJZDogY3VyclJvdy5pZCwgLy8g6ZyA6KaB5oyH5a6a54i26IqC54K577yM6Ieq5Yqo5o+S5YWl6K+l6IqC54K55LitCiAgICAgICAgfTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZWNvcmQgPSB7CiAgICAgICAgICBjb2RlOiAnJywKICAgICAgICAgIHZhbHVlOiAnJywKICAgICAgICAgIHNvbHV0aW9uOiAnJywKICAgICAgICAgIGlkOiBEYXRlLm5vdygpLAogICAgICAgICAgcGFyZW50SWQ6IGN1cnJSb3cuaWQsIC8vIOmcgOimgeaMh+WumueItuiKgueCue+8jOiHquWKqOaPkuWFpeivpeiKgueCueS4rQogICAgICAgIH07CiAgICAgIH0KICAgICAgY29uc3QgeyByb3c6IG5ld1JvdyB9ID0gYXdhaXQgJHRhYmxlLmluc2VydEF0KHJlY29yZCwgLTEpOwogICAgICBhd2FpdCAkdGFibGUuc2V0VHJlZUV4cGFuZChjdXJyUm93LCB0cnVlKTsgLy8g5bCG54i26IqC54K55bGV5byACiAgICAgIGF3YWl0ICR0YWJsZS5zZXRBY3RpdmVSb3cobmV3Um93KTsgLy8g5o+S5YWl5a2Q6IqC54K5CiAgICB9LAogICAgYXN5bmMgcmVtb3ZlUm93KHJvdywgdHlwZSkgewogICAgICBjb25zdCAkdGFibGUgPSB0aGlzLiRyZWZzW3R5cGVdOwogICAgICBhd2FpdCAkdGFibGUucmVtb3ZlKHJvdyk7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["debugging.vue"],"names":[],"mappingsfile":"debugging.vue","sourceRoot":"src/pages/system/backendRouting","sourcesContent":["<template>\n  <div class=\"content\" v-if=\"interfaceData\">\n    <div class=\"head\">\n      <el-input v-model=\"interfaceData.path\">\n        <template #prepend>\n          <el-select v-model=\"interfaceData.method\" style=\"width: 120px\">\n            <el-option\n              v-for=\"(item, index) in requestTypeList\"\n              :key=\"index\"\n              :value=\"item.value\"\n              :label=\"item.label\"\n            ></el-option>\n          </el-select>\n        </template>\n      </el-input>\n      <el-button class=\"ml20\" type=\"primary\" v-db-click @click=\"requestData\">请求</el-button>\n      <el-button v-if=\"codes\" class=\"ml10 copy-btn\" type=\"success\" v-db-click @click=\"insertCopy()\">复制结果</el-button>\n    </div>\n    <div class=\"params\">\n      <el-tabs class=\"mt10\" v-model=\"paramsType\" @tab-click=\"changeTab\">\n        <el-tab-pane label=\"Params\" name=\"Params\"> </el-tab-pane>\n        <el-tab-pane label=\"Body\" name=\"Body\"> </el-tab-pane>\n        <el-tab-pane label=\"Header\" name=\"Header\"> </el-tab-pane>\n      </el-tabs>\n      <div v-show=\"paramsType === 'Params'\">\n        <vxe-table\n          class=\"mt10\"\n          resizable\n          show-overflow\n          keep-source\n          ref=\"xTable\"\n          row-id=\"id\"\n          :print-config=\"{}\"\n          :export-config=\"{}\"\n          :tree-config=\"{ transform: true, rowField: 'id', parentField: 'parentId' }\"\n          :data=\"interfaceData.query\"\n        >\n          <vxe-column field=\"attribute\" width=\"150\" title=\"属性\" tree-node :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <vxe-input v-model=\"row.attribute\" type=\"text\"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"value\" title=\"参数值\" :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <vxe-input v-model=\"row.value\" type=\"text\"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"type\" title=\"类型\" width=\"120\" :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <vxe-select\n                v-model=\"row.type\"\n                transfer\n                @change=\"\n                  (val) => {\n                    handleChange(val, row, 'xTable');\n                  }\n                \"\n              >\n                <vxe-option\n                  v-for=\"item in typeList\"\n                  :key=\"item.value\"\n                  :value=\"item.value\"\n                  :label=\"item.label\"\n                ></vxe-option>\n              </vxe-select>\n            </template>\n          </vxe-column>\n          <!-- <vxe-column field=\"must\" title=\"必填\" width=\"50\" :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <span>{{ row.must == '1' ? '是' : '否' }}</span>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"trip\" width=\"150\" title=\"说明\" :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <vxe-input v-model=\"row.trip\" type=\"text\"></vxe-input>\n            </template>\n          </vxe-column> -->\n          <vxe-column title=\"操作\" width=\"120\">\n            <template #default=\"{ row }\">\n              <vxe-button\n                type=\"text\"\n                v-if=\"['array', 'object'].includes(row.type)\"\n                status=\"primary\"\n                v-db-click\n                @click=\"insertRow(row, 'xTable')\"\n                >插入</vxe-button\n              >\n              <vxe-button type=\"text\" status=\"primary\" v-db-click @click=\"removeRow(row, 'xTable')\">删除</vxe-button>\n            </template>\n          </vxe-column>\n        </vxe-table>\n        <el-button class=\"mt10\" type=\"primary\" v-db-click @click=\"insertEvent('xTable')\">添加参数</el-button>\n      </div>\n      <div v-show=\"paramsType === 'Body'\">\n        <el-radio-group v-model=\"bodyType\" class=\"mt10\">\n          <el-radio label=\"form-data\"></el-radio>\n          <el-radio label=\"json\"></el-radio>\n        </el-radio-group>\n        <vxe-table\n          v-if=\"bodyType == 'form-data'\"\n          class=\"mt10\"\n          resizable\n          show-overflow\n          keep-source\n          ref=\"yTable\"\n          row-id=\"id\"\n          :print-config=\"{}\"\n          :export-config=\"{}\"\n          :tree-config=\"{ transform: true, rowField: 'id', parentField: 'parentId' }\"\n          :data=\"interfaceData.request_body\"\n        >\n          <vxe-column field=\"attribute\" width=\"150\" title=\"属性\" tree-node :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <vxe-input v-model=\"row.attribute\" type=\"text\"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"value\" title=\"参数值\" :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <vxe-input v-model=\"row.value\" type=\"text\"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"type\" title=\"类型\" width=\"120\" :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <vxe-select\n                v-model=\"row.type\"\n                transfer\n                @change=\"\n                  (val) => {\n                    handleChange(val, row, 'yTable');\n                  }\n                \"\n              >\n                <vxe-option\n                  v-for=\"item in typeList\"\n                  :key=\"item.value\"\n                  :value=\"item.value\"\n                  :label=\"item.label\"\n                ></vxe-option>\n              </vxe-select>\n            </template>\n          </vxe-column>\n          <!-- <vxe-column field=\"must\" title=\"必填\" width=\"50\" :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <span>{{ row.must == '1' ? '是' : '否' }}</span>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"trip\" title=\"说明\" width=\"150\" :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <vxe-input v-model=\"row.trip\" type=\"text\"></vxe-input>\n            </template>\n          </vxe-column> -->\n          <vxe-column title=\"操作\" width=\"120\">\n            <template #default=\"{ row }\">\n              <vxe-button\n                type=\"text\"\n                v-if=\"['array', 'object'].includes(row.type)\"\n                status=\"primary\"\n                v-db-click\n                @click=\"insertRow(row, 'yTable')\"\n                >插入</vxe-button\n              >\n              <vxe-button type=\"text\" status=\"primary\" v-db-click @click=\"removeRow(row, 'yTable')\">删除</vxe-button>\n            </template>\n          </vxe-column>\n        </vxe-table>\n        <div v-else>\n          <el-input v-model=\"jsonBody\" type=\"textarea\" :rows=\"8\" placeholder=\"请求数据\" />\n        </div>\n        <el-button v-if=\"bodyType == 'form-data'\" class=\"mt10\" type=\"primary\" v-db-click @click=\"insertEvent('yTable')\"\n          >添加参数</el-button\n        >\n      </div>\n\n      <div v-show=\"paramsType === 'Header'\">\n        <vxe-table\n          class=\"mt10\"\n          resizable\n          show-overflow\n          keep-source\n          ref=\"zTable\"\n          row-id=\"id\"\n          :print-config=\"{}\"\n          :export-config=\"{}\"\n          :tree-config=\"{ transform: true, rowField: 'id', parentField: 'parentId' }\"\n          :data=\"interfaceData.headerData\"\n        >\n          <vxe-column field=\"attribute\" width=\"300\" title=\"属性\" tree-node :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <vxe-input v-model=\"row.attribute\" type=\"text\"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column field=\"value\" title=\"参数值\" :edit-render=\"{}\">\n            <template #default=\"{ row }\">\n              <vxe-input v-model=\"row.value\" type=\"text\"></vxe-input>\n            </template>\n          </vxe-column>\n          <vxe-column title=\"操作\" width=\"100\">\n            <template #default=\"{ row }\">\n              <vxe-button\n                type=\"text\"\n                v-if=\"['array', 'object'].includes(row.type)\"\n                status=\"primary\"\n                v-db-click\n                @click=\"insertRow(row, 'zTable')\"\n                >插入</vxe-button\n              >\n              <vxe-button type=\"text\" status=\"primary\" v-db-click @click=\"removeRow(row, 'zTable')\">删除</vxe-button>\n            </template>\n          </vxe-column>\n        </vxe-table>\n        <el-button class=\"mt10\" type=\"primary\" v-db-click @click=\"insertEvent('zTable')\">添加参数</el-button>\n      </div>\n    </div>\n    <div class=\"res mt10 mb10\" v-if=\"codes\">\n      <MonacoEditor :codes=\"codes\" :readOnly=\"true\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport request from './request';\nimport MonacoEditor from './components/MonacoEditor.vue';\nimport vuedraggable from 'vuedraggable';\nimport { getCookies } from '@/libs/util';\n\nfunction requestMethod(url, method, params, data, headerItem) {\n  return request({\n    url,\n    method,\n    params,\n    data,\n    headerItem,\n  });\n}\nexport default {\n  components: { MonacoEditor },\n  props: {\n    formValidate: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n    },\n    requestTypeList: {\n      type: Array,\n      default: () => {\n        return [];\n      },\n    },\n    typeList: {\n      type: Array,\n      default: () => {\n        return [];\n      },\n    },\n    apiType: {\n      type: String,\n      default: 'adminapi',\n    },\n  },\n  data() {\n    return {\n      bodyType: 'form-data',\n      interfaceData: undefined,\n      paramsType: 'Params',\n      editor: '', //当前编辑器对象\n      codes: '',\n      jsonBody: '',\n    };\n  },\n  created() {\n    this.interfaceData = this.formValidate;\n    this.interfaceData.request_body = JSON.parse(JSON.stringify(this.interfaceData.request));\n  },\n  mounted() {\n    if (!this.$refs.zTable.getTableData().tableData.length && this.apiType == 'adminapi') {\n      this.insertEvent('zTable', {\n        attribute: 'Authori-Zation',\n        value: 'Bearer ' + getCookies('token'),\n      });\n      // this.insertEvent('zaTable');\n    } else {\n      if (this.interfaceData.header) {\n        this.interfaceData.header.forEach((item, index) => {\n          this.insertEvent('zTable', {\n            attribute: item.attribute || '',\n            value: item.value || '',\n          });\n        });\n      }\n    }\n  },\n  methods: {\n    async handleChange(e, row, type) {\n      if (e.value !== 'array' && e.value !== 'object') {\n        if (row.children.length) {\n          let arr = this.$refs[type].getTableData().tableData;\n          let id = row.children[0].parentId;\n          const $table = this.$refs[type];\n          for (let i = 0; i < arr.length; i++) {\n            if (arr[i].parentId == id) {\n              await $table.remove(arr[i]);\n            }\n          }\n        }\n      }\n    },\n    insertCopy() {\n      this.$copyText(this.codes)\n        .then((message) => {\n          this.$message.success('复制成功');\n        })\n        .catch((err) => {\n          this.$message.error('复制失败');\n        });\n    },\n    async requestData() {\n      let url, method, params, body, headers;\n      url = this.apiType + '/' + this.interfaceData.path;\n      method = this.interfaceData.method;\n      params = this.filtersData((await this.$refs.xTable.getTableData().tableData) || []);\n      body =\n        this.bodyType === 'json'\n          ? this.jsonBody\n          : this.filtersData((await this.$refs.yTable.getTableData().tableData) || []);\n      let h = this.filtersData((await this.$refs.zTable.getTableData().tableData) || []);\n      headers = h;\n      this.codes = '';\n      requestMethod(url, method, params, body, headers)\n        .then((res) => {\n          if (!res) return this.$message.error('接口异常');\n          this.codes = JSON.stringify(res);\n        })\n        .catch((err) => {\n          if (!err) return this.$message.error('接口异常');\n          this.codes = JSON.stringify(err);\n        });\n    },\n    filtersData(arr) {\n      try {\n        let x = {};\n        arr.map((e) => {\n          if (!e.parentId) {\n            for (let i in e) {\n              if (i == 'attribute') {\n                if (e.type === 'object') {\n                  let obj = {};\n\n                  e.children.map((item, index) => {\n                    obj = this.filtersObj(item, 1);\n                  });\n                  x[e[i]] = obj;\n                } else if (e.type !== 'array') {\n                  x[e[i]] = e.value || '';\n                } else {\n                  let arr = [];\n                  e.children.map((item, index) => {\n                    arr[index] = this.filtersObj(item);\n                  });\n                  x[e[i]] = arr;\n                }\n              }\n            }\n          }\n        });\n        return x;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    // type 1 为obj属性\n    filtersObj(obj, type) {\n      let x = {};\n      for (let i in obj) {\n        if (i == 'attribute') {\n          if (obj.type === 'object') {\n            let oj = {};\n            obj.children.map((item, index) => {\n              oj[obj.attribute] = this.filtersObj(item);\n            });\n            x = oj;\n          } else if (obj.type !== 'array') {\n            if (type) {\n              x[obj.attribute] = obj.value || '';\n            } else {\n              x[obj[i]] = obj.value || '';\n            }\n          } else {\n            let arr = [];\n            obj.children.map((item, index) => {\n              arr[index] = this.filtersObj(item);\n            });\n            x[obj[i]] = arr;\n          }\n        }\n      }\n      return x;\n    },\n    changeTab(name) {\n      // if (name === 'Header') {\n      //   if (!this.$refs.zTable.getTableData().tableData.length) {\n      //     this.insertEvent('zTable', {\n      //       attribute: 'Authori-Zation',\n      //       value: 'Bearer ' + getCookies('token'),\n      //     });\n      //     this.insertEvent('zaTable');\n      //   }\n      // }\n    },\n    async insertEvent(type, d) {\n      const $table = this.$refs[type];\n      let newRow;\n      if (type == 'xTable') {\n        newRow = {\n          attribute: '',\n          type: 'string',\n          must: 0,\n          value: '',\n          trip: '',\n        };\n      } else if (type == 'yTable') {\n        newRow = {\n          attribute: '',\n          type: 'string',\n          value: '',\n          must: 0,\n          trip: '',\n        };\n      } else if (type == 'zTable') {\n        newRow = {\n          attribute: '',\n          type: '',\n          value: '',\n          trip: '',\n        };\n        newRow = { ...newRow, ...d };\n      } else if (type == 'zaTable') {\n        newRow = {\n          attribute: 'token',\n          type: 'string',\n          value: '',\n          must: 0,\n          trip: '',\n        };\n      } else {\n        newRow = {\n          code: '',\n          value: '',\n          solution: '',\n        };\n      }\n      const { row: data } = await $table.insertAt(newRow, -1);\n      await $table.setActiveCell(data, 'name');\n    },\n    async insertRow(currRow, type) {\n      const $table = this.$refs[type];\n      // 如果 null 则插入到目标节点顶部\n      // 如果 -1 则插入到目标节点底部\n      // 如果 row 则有插入到效的目标节点该行的位置\n      let record;\n      if (type == 'xTable') {\n        record = {\n          attribute: '',\n          type: 'string',\n          must: 0,\n          value: '',\n          trip: '',\n          id: Date.now(),\n          parentId: currRow.id, // 需要指定父节点，自动插入该节点中\n        };\n      } else {\n        record = {\n          code: '',\n          value: '',\n          solution: '',\n          id: Date.now(),\n          parentId: currRow.id, // 需要指定父节点，自动插入该节点中\n        };\n      }\n      const { row: newRow } = await $table.insertAt(record, -1);\n      await $table.setTreeExpand(currRow, true); // 将父节点展开\n      await $table.setActiveRow(newRow); // 插入子节点\n    },\n    async removeRow(row, type) {\n      const $table = this.$refs[type];\n      await $table.remove(row);\n    },\n  },\n};\n</script>\n<style>\n.vxe-select--panel.is--transfer {\n  z-index: 99999 !important;\n}\n</style>\n<style lang=\"scss\" scoped>\n.content {\n  padding: 12px;\n  .head {\n    display: flex;\n    align-items: center;\n    .item {\n      display: flex;\n      align-items: center;\n      margin-bottom: 12px;\n      font-size: 14px;\n      .title {\n        margin-right: 14px;\n      }\n    }\n  }\n}\n.copy-btn {\n  display: flex;\n  justify-content: right;\n}\n::v-deep .monaco-editor {\n  min-height: 700px;\n}\n</style>\n"]}]}