{"remainingRequest":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\statistic\\user\\components\\userRegion.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\statistic\\user\\components\\userRegion.vue","mtime":1730693823199},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1753254258567},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1753254260598}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["userRegion.vue"],"names":[],"mappings":";AAifile":"userRegion.vue","sourceRoot":"src/pages/statistic/user/components","sourcesContent":["<template>\n  <el-row :gutter=\"16\">\n    <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"18\">\n      <el-card :bordered=\"false\" shadow=\"never\" class=\"ivu-mt-16\">\n        <div class=\"acea-row row-between-wrapper\">\n          <h4 class=\"statics-header-title mb20\">用户地域分布</h4>\n        </div>\n        <el-row>\n          <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"10\">\n            <div class=\"echarts\">\n              <div :style=\"{ height: '400px', width: '100%' }\" ref=\"myEchart\"></div>\n            </div>\n          </el-col>\n          <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"14\">\n            <div class=\"tables\">\n              <el-table height=\"400\" :columns=\"columns1\" :data=\"resdataList\">\n                <el-table-column :label=\"item.title\" :min-width=\"100\" v-for=\"(item, index) in columns1\" :key=\"index\">\n                  <template slot-scope=\"scope\">\n                    <template v-if=\"item.key\">\n                      <div>\n                        <span>{{ scope.row[item.key] }}</span>\n                      </div>\n                    </template>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </div>\n          </el-col>\n        </el-row>\n      </el-card>\n    </el-col>\n    <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"6\">\n      <el-card :bordered=\"false\" shadow=\"never\" class=\"ivu-mt-16\">\n        <div class=\"acea-row row-between-wrapper\">\n          <h4 class=\"statics-header-title mb20\">用户性别比例</h4>\n        </div>\n        <echarts-new\n          :option-data=\"optionData\"\n          :styles=\"style\"\n          height=\"100%\"\n          width=\"100%\"\n          v-if=\"optionData\"\n        ></echarts-new>\n      </el-card>\n    </el-col>\n  </el-row>\n</template>\n\n<script>\nimport echarts from 'echarts';\nimport '../../../../../node_modules/echarts/map/js/china.js'; // 引入中国地图数据\nimport { statisticWechatRegionApi, statisticWechatSexApi } from '@/api/statistic';\nimport echartsNew from '@/components/echartsNew/index';\nexport default {\n  name: 'userRegion',\n  components: {\n    echartsNew,\n  },\n  props: {\n    formInline: {\n      type: Object,\n      default: function () {\n        return {\n          channel_type: '',\n          data: '',\n        };\n      },\n    },\n  },\n  data() {\n    return {\n      chart: null,\n      resdata: [],\n      resdataList: [],\n      columns1: [\n        {\n          title: 'TOP省份',\n          key: 'province',\n        },\n        {\n          title: '累积用户数',\n          key: 'allNum',\n          sortable: true,\n        },\n        {\n          title: '新增用户数',\n          key: 'newNum',\n          sortable: true,\n        },\n        {\n          title: '访客数',\n          key: 'visitNum',\n          sortable: true,\n        },\n        {\n          title: '支付金额',\n          key: 'payPrice',\n          sortable: true,\n        },\n      ],\n      style: { height: '400px' },\n      optionData: {},\n    };\n  },\n  mounted() {\n    this.getTrend();\n    this.getSex();\n  },\n  beforeDestroy() {\n    if (!this.chart) {\n      return;\n    }\n    this.chart.dispose();\n    this.chart = null;\n  },\n  methods: {\n    chinaConfigure() {\n      let myChart = echarts.init(this.$refs.myEchart); //这里是为了获得容器所在位置\n      window.onresize = myChart.resize;\n      myChart.setOption({\n        // 进行相关配置\n        backgroundColor: '#fff',\n        tooltip: {\n          trigger: 'item',\n          formatter: function (params) {\n            console.log(params, 'params');\n            return params.data\n              ? `地区:${params.name}</br>累计用户: ${params.data.value}</br>新增用户: ${params.data.newNum}</br>访客数: ${params.data.visitNum}</br>支付金额: ${params.data.payPrice}`\n              : `地区:${params.name}</br>累计用户: 0</br>新增用户: 0</br>访客数: 0</br>支付金额: 0`;\n          },\n        }, // 鼠标移到图里面的浮动提示框\n        dataRange: {\n          show: false,\n          min: 0,\n          max: 1000,\n          text: ['High', 'Low'],\n          realtime: true,\n          calculable: true,\n          color: ['orangered', 'yellow', 'lightskyblue'],\n        },\n        geo: {\n          // 这个是重点配置区\n          map: 'china', // 表示中国地图\n          roam: false,\n          label: {\n            normal: {\n              show: false, // 是否显示对应地名\n              textStyle: {\n                color: 'rgba(0,0,0,0.4)',\n              },\n            },\n          },\n          itemStyle: {\n            normal: {\n              borderColor: 'rgba(0, 0, 0, 0.2)',\n            },\n            emphasis: {\n              areaColor: null,\n              shadowOffsetX: 0,\n              shadowOffsetY: 0,\n              shadowBlur: 20,\n              borderWidth: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)',\n            },\n          },\n        },\n        series: [\n          {\n            type: 'scatter',\n            zoom: 1.2,\n            aspectScale: 1.75, //长宽比\n            coordinateSystem: 'geo', // 对应上方配置\n          },\n          {\n            type: 'map',\n            geoIndex: 0,\n            data: this.resdata,\n          },\n        ],\n      });\n    },\n    // 统计图\n    getTrend() {\n      statisticWechatRegionApi(this.formInline)\n        .then(async (res) => {\n          this.resdataList = res.data;\n          this.resdata = res.data.map((item) => {\n            let jsonData = {};\n            jsonData.name = item.province.replace('省', '');\n            jsonData.value = item.allNum;\n            jsonData.newNum = item.newNum;\n            jsonData.payPrice = item.payPrice;\n            jsonData.visitNum = item.visitNum;\n            return jsonData;\n          });\n          this.chinaConfigure();\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    //性别\n    getSex() {\n      statisticWechatSexApi(this.formInline)\n        .then(async (res) => {\n          let totalSumAll = 0;\n          res.data.forEach((item) => {\n            totalSumAll += item.value;\n          });\n          this.optionData = {\n            title: {\n              show: true,\n              text: '总用户数', // 当前写死\n              subtext: totalSumAll, // 当前写死\n              x: 'center',\n              y: 'center',\n              textStyle: {\n                fontSize: '14',\n                color: '#666666',\n              },\n              subtextStyle: {\n                fontSize: '30',\n                fontWeight: 'bold',\n                color: '#333333',\n              },\n            },\n            tooltip: {\n              trigger: 'item',\n              formatter: '{a} <br/>{b}: {c} ({d}%)',\n            },\n            legend: {\n              orient: 'vertical',\n              left: 10,\n              data: ['未知', '男', '女'],\n            },\n            series: [\n              {\n                name: '访问来源',\n                type: 'pie',\n                radius: ['50%', '70%'],\n                avoidLabelOverlap: false,\n                label: {\n                  show: false,\n                  position: 'center',\n                },\n                labelLine: {\n                  show: false,\n                },\n                data: res.data,\n                itemStyle: {\n                  emphasis: {\n                    shadowBlur: 10,\n                    shadowOffsetX: 0,\n                    shadowColor: 'rgba(0, 0, 0, 0.5)',\n                  },\n                  normal: {\n                    color: function (params) {\n                      //自定义颜色\n                      var colorList = ['#999999', '#1890FF', '#FFAB2B'];\n                      return colorList[params.dataIndex];\n                    },\n                  },\n                },\n              },\n            ],\n          };\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.echarts {\n  width: 100%;\n}\n.tables {\n  width: 100%;\n  ::v-deep .ivu-table-overflowY {\n    &::-webkit-scrollbar {\n      width: 0;\n    }\n    &::-webkit-scrollbar-track {\n      background-color: transparent;\n    }\n    &::-webkit-scrollbar-thumb {\n      background: #e8eaec;\n    }\n  }\n}\n</style>\n"]}]}