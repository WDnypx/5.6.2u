{"remainingRequest":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\product\\labelList\\index.vue?vue&type=style&index=0&id=183c2dc1&lang=scss&scoped=true","dependencies":[{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\product\\labelList\\index.vue","mtime":1746756078450},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\css-loader\\index.js","mtime":1753254259822},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1753254262918},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1753254258547},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1753254255270},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1753254260598}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5zaG93T24gewogIGNvbG9yOiAjMmQ4Y2YwOwogIGJhY2tncm91bmQ6ICNmMGZhZmY7CiAgei1pbmRleDogMjsKfQoKOjp2LWRlZXAgLml2dS1tZW51LXZlcnRpY2FsIC5pdnUtbWVudS1pdGVtLWdyb3VwLXRpdGxlIHsKICBkaXNwbGF5OiBub25lOwp9Cgo6OnYtZGVlcCAuaXZ1LW1lbnUtdmVydGljYWwuaXZ1LW1lbnUtbGlnaHQ6YWZ0ZXIgewogIGRpc3BsYXk6IG5vbmU7Cn0KCi5sZWZ0LXdyYXBwZXIgewogIGhlaWdodDogOTIwcHg7CiAgYmFja2dyb3VuZDogI2ZmZjsKICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZjJmMmYyOwp9Ci53LTQyMCB7CiAgd2lkdGg6IDQyMHB4Owp9Ci53b3Jkcy10YWcgewogIGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIHBhZGRpbmc6IDAgMTBweDsKICBmb250LXNpemU6IDEycHg7CiAgY29sb3I6ICM0ZjRmNGY7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICBoZWlnaHQ6IDI4cHg7CiAgbGluZS1oZWlnaHQ6IDI2cHg7Cn0KLnRhZy1pbWcgewogIGRpc3BsYXk6IGJsb2NrOwogIGhlaWdodDogMjhweDsKICBvYmplY3QtZml0OiBjb3ZlcjsKICBib3JkZXItcmFkaXVzOiA0cHg7Cn0KLm1lbnUtaXRlbSB7CiAgei1pbmRleDogNTA7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDsKCiAgLmljb24tYm94IHsKICAgIHotaW5kZXg6IDM7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICByaWdodDogMjBweDsKICAgIHRvcDogNTAlOwogICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpOwogICAgZGlzcGxheTogbm9uZTsKICB9CgogICY6aG92ZXIgLmljb24tYm94IHsKICAgIGRpc3BsYXk6IGJsb2NrOwogIH0KCiAgLnJpZ2h0LW1lbnUgewogICAgei1pbmRleDogMTA7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICByaWdodDogLTEwNnB4OwogICAgdG9wOiAtMTFweDsKICAgIHdpZHRoOiBhdXRvOwogICAgbWluLXdpZHRoOiAxMjFweDsKICB9Cn0KLnRpcCB7CiAgY29sb3I6ICM4ODg7CiAgZm9udC1zaXplOiAxMnB4OwogIGxpbmUtaGVpZ2h0OiAxNnB4Owp9Ci51cGxvYWQtc2VsZWN0IHsKICB3aWR0aDogNjRweDsKICBoZWlnaHQ6IDY0cHg7CiAgZm9udC1zaXplOiAzMnB4ICFpbXBvcnRhbnQ7CiAgYmFja2dyb3VuZDogI2Y1ZjVmNTsKICBjb2xvcjogI2NjYzsKICBtYXJnaW4tYm90dG9tOiA2cHg7Cn0KLnVwbG9hZC1pdGVtIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIHdpZHRoOiA2NHB4OwogIGhlaWdodDogNjRweDsKICBib3JkZXItcmFkaXVzOiA0cHg7CiAgbWFyZ2luOiAwIDE1cHggMTBweCAwOwogIGltZyB7CiAgICB3aWR0aDogNjRweDsKICAgIGhlaWdodDogNjRweDsKICAgIGJvcmRlci1yYWRpdXM6IDRweDsKICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CiAgfQogIC5jbG9zZSB7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgdG9wOiAwOwogICAgcmlnaHQ6IDA7CiAgICB3aWR0aDogMjBweDsKICAgIGhlaWdodDogMjBweDsKICAgIG1hcmdpbjogLTEwcHggLTEwcHggMCAwOwogICAgYmFja2dyb3VuZC1jb2xvcjogI2FhYTsKICAgIGNvbG9yOiAjZmZmOwogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAqefile":"index.vue","sourceRoot":"src/pages/product/labelList","sourcesContent":["<template>\n  <div>\n    <el-row class=\"ivu-mt box-wrapper\">\n      <el-col v-bind=\"grid1\" class=\"left-wrapper\">\n        <div class=\"tree_tit\" v-db-click @click=\"addSort\">\n          <i class=\"el-icon-circle-plus\"></i>\n          添加分组\n        </div>\n        <div class=\"tree\">\n          <el-tree\n            :data=\"labelSort\"\n            node-key=\"id\"\n            default-expand-all\n            highlight-current\n            :expand-on-click-node=\"false\"\n            @node-click=\"bindMenuItem\"\n            :current-node-key=\"treeId\"\n          >\n            <span class=\"custom-tree-node\" slot-scope=\"{ data }\">\n              <div class=\"file-name\">\n                <img class=\"icon\" src=\"@/assets/images/file.jpg\" />\n                <el-tooltip class=\"item\" effect=\"dark\" :content=\"data.name\" placement=\"top\">\n                  <div class=\"text line1\">\n                    {{ data.name }}\n                  </div>\n                </el-tooltip>\n              </div>\n              <span v-if=\"data.id\">\n                <el-dropdown @command=\"(command) => clickMenu(data, command)\">\n                  <i class=\"el-icon-more el-icon--right\"></i>\n                  <template slot=\"dropdown\">\n                    <el-dropdown-menu>\n                      <el-dropdown-item command=\"1\">编辑分类</el-dropdown-item>\n                      <el-dropdown-item v-if=\"data.id\" command=\"2\">删除分类</el-dropdown-item>\n                    </el-dropdown-menu>\n                  </template>\n                </el-dropdown>\n              </span>\n            </span>\n          </el-tree>\n        </div>\n      </el-col>\n      <el-col v-bind=\"grid2\" ref=\"rightBox\">\n        <el-card :bordered=\"false\" shadow=\"never\">\n          <el-row>\n            <el-col>\n              <el-button type=\"primary\" v-db-click @click=\"add\">添加标签</el-button>\n            </el-col>\n          </el-row>\n          <el-table\n            :data=\"labelLists\"\n            ref=\"table\"\n            class=\"mt14\"\n            v-loading=\"loading\"\n            highlight-current-row\n            no-userFrom-text=\"暂无数据\"\n            no-filtered-userFrom-text=\"暂无筛选结果\"\n          >\n            <el-table-column label=\"ID\" width=\"80\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.id }}</span>\n              </template>\n            </el-table-column>\n            <!-- <el-table-column label=\"标签名称\" width=\"80\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.name }}</span>\n              </template>\n            </el-table-column> -->\n            <el-table-column label=\"标签名称\" width=\"180\">\n              <template slot-scope=\"scope\">\n                <div\n                  v-if=\"scope.row.type == 1\"\n                  class=\"words-tag\"\n                  :style=\"{\n                    backgroundColor: scope.row.bg_color,\n                    color: scope.row.font_color,\n                    border: scope.row.border_color ? '1px solid ' + scope.row.border_color : 'none',\n                  }\"\n                >\n                  <span>{{ scope.row.name }}</span>\n                </div>\n                <img :src=\"scope.row.image\" class=\"tag-img\" v-else />\n              </template>\n            </el-table-column>\n            <el-table-column label=\"分类名称\" min-width=\"140\">\n              <template slot-scope=\"scope\">\n                <span>{{ scope.row.cate_name }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"状态\" min-width=\"140\">\n              <template slot-scope=\"scope\">\n                <el-switch\n                  class=\"defineSwitch\"\n                  :active-value=\"1\"\n                  :inactive-value=\"0\"\n                  v-model=\"scope.row.status\"\n                  :value=\"scope.row.status\"\n                  @change=\"onchangeStatus(scope.row)\"\n                  size=\"large\"\n                  active-text=\"开启\"\n                  inactive-text=\"关闭\"\n                >\n                </el-switch>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"移动端展示\" min-width=\"140\">\n              <template slot-scope=\"scope\">\n                <el-switch\n                  class=\"defineSwitch\"\n                  :active-value=\"1\"\n                  :inactive-value=\"0\"\n                  v-model=\"scope.row.is_show\"\n                  :value=\"scope.row.is_show\"\n                  @change=\"onchangeShow(scope.row)\"\n                  size=\"large\"\n                  active-text=\"开启\"\n                  inactive-text=\"关闭\"\n                >\n                </el-switch>\n              </template>\n            </el-table-column>\n            <el-table-column fixed=\"right\" label=\"操作\" width=\"100\">\n              <template slot-scope=\"scope\">\n                <a v-db-click @click=\"edit(scope.row.id)\">修改</a>\n                <el-divider direction=\"vertical\"></el-divider>\n                <a v-db-click @click=\"del(scope.row, '删除', scope.$index)\">删除</a>\n              </template>\n            </el-table-column>\n          </el-table>\n          <div class=\"acea-row row-right page\">\n            <pagination\n              v-if=\"total\"\n              :total=\"total\"\n              :page.sync=\"labelFrom.page\"\n              :limit.sync=\"labelFrom.limit\"\n              @pagination=\"getList\"\n            />\n          </div>\n        </el-card>\n        <el-dialog :visible.sync=\"modals\" closable :title=\"isEdit ? '编辑标签' : '添加标签'\" width=\"560\" @close=\"cancel\">\n          <div>\n            <el-form label-position=\"right\" size=\"small\" ref=\"form\" :rules=\"rules\" :model=\"form\" label-width=\"100px\">\n              <el-form-item label=\"标签名称：\" prop=\"name\">\n                <el-input v-model=\"form.name\" class=\"w-420\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"分组选择：\" prop=\"label_cate\">\n                <el-select v-model=\"form.cate_id\" clearable class=\"w-420\">\n                  <el-option\n                    v-for=\"item in labelSort.slice(1)\"\n                    :value=\"item.id\"\n                    :label=\"item.name\"\n                    :key=\"item.id\"\n                  ></el-option>\n                </el-select>\n              </el-form-item>\n              <el-form-item label=\"移动端展示：\">\n                <el-switch v-model=\"form.is_show\" :active-value=\"1\" :inactive-value=\"0\"> </el-switch>\n              </el-form-item>\n              <el-form-item label=\"效果设置：\">\n                <el-radio-group v-model=\"form.type\" :true-value=\"1\" :false-value=\"2\">\n                  <el-radio :label=\"1\">自定义</el-radio>\n                  <el-radio :label=\"2\">图片</el-radio>\n                </el-radio-group>\n              </el-form-item>\n              <el-form-item label=\"字体颜色：\" v-if=\"form.type == 1\">\n                <el-color-picker v-model=\"form.font_color\" show-alpha></el-color-picker>\n                <p class=\"tip\">若未设置颜色，则为默认色</p>\n              </el-form-item>\n              <el-form-item label=\"背景颜色：\" v-if=\"form.type == 1\">\n                <el-color-picker v-model=\"form.bg_color\" show-alpha></el-color-picker>\n                <p class=\"tip\">若未设置颜色，则为默认色</p>\n              </el-form-item>\n              <el-form-item label=\"边框颜色：\" v-if=\"form.type == 1\">\n                <el-color-picker v-model=\"form.border_color\" show-alpha></el-color-picker>\n                <p class=\"tip\">若未设置颜色，则无边框</p>\n              </el-form-item>\n              <el-form-item label=\"上传图标：\" v-if=\"form.type == 2\">\n                <div v-if=\"form.image\" class=\"upload-list\">\n                  <div class=\"upload-item\">\n                    <img :src=\"form.image\" />\n                    <div class=\"close\" @click=\"form.image = ''\">\n                      <i class=\"el-icon-close\"></i>\n                    </div>\n                  </div>\n                </div>\n                <el-button\n                  v-else\n                  class=\"upload-select\"\n                  type=\"dashed\"\n                  icon=\"el-icon-plus\"\n                  @click=\"modalPicTap(1)\"\n                ></el-button>\n                <p class=\"tip\">建议尺寸：80px*30px，若未上传则为空白</p>\n              </el-form-item>\n              <el-form-item label=\"排序：\">\n                <el-input-number v-model=\"form.sort\" :min=\"0\" :max=\"999\" class=\"selWidth\"></el-input-number>\n              </el-form-item>\n              <el-form-item label=\"是否开启：\">\n                <el-switch v-model=\"form.status\" :active-value=\"1\" :inactive-value=\"0\" size=\"large\">\n                  <span slot=\"open\">开启</span>\n                  <span slot=\"close\">关闭</span>\n                </el-switch>\n              </el-form-item>\n            </el-form>\n          </div>\n          <span slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"cancel\">取 消</el-button>\n            <el-button type=\"primary\" v-db-click @click=\"addWordsConfirm\">确 定</el-button>\n          </span>\n        </el-dialog>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport {\n  labelCateListApi,\n  productLabelListApi,\n  productLabelInfoApi,\n  productLabelSaveApi,\n  userLabelEdit,\n  productLabelCateFormApi,\n  labelStatusApi,\n  labelIsShowApi,\n} from '@/api/product';\nexport default {\n  name: 'labelList',\n  data() {\n    return {\n      treeId: '',\n      grid1: {\n        xl: 4,\n        lg: 4,\n        md: 6,\n        sm: 8,\n        xs: 0,\n      },\n      grid2: {\n        xl: 20,\n        lg: 20,\n        md: 18,\n        sm: 16,\n        xs: 24,\n      },\n\n      loading: false,\n      labelFrom: {\n        page: 1,\n        limit: 15,\n        cate_id: '',\n      },\n      labelLists: [],\n      total: 0,\n      theme3: 'light',\n      labelSort: [],\n      sortName: '',\n      current: 0,\n      modals: false,\n      isEdit: false,\n      form: {\n        id: 0,\n        cate_id: '',\n        name: '',\n        type: 1, //样式类型 1自定义 2图片\n        font_color: '#e93323',\n        bg_color: '#fff',\n        border_color: '#e93323',\n        sort: 0,\n        is_show: 1,\n        image: '',\n        status: 1,\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入标签名称', trigger: 'blur' },\n          { min: 2, max: 6, message: '长度在 2 到 6 个字符', trigger: 'blur' },\n        ],\n        cate_id: [{ required: true, message: '请选择分组' }],\n      },\n    };\n  },\n  computed: {\n    ...mapState('media', ['isMobile']),\n    labelWidth() {\n      return this.isMobile ? undefined : '80px';\n    },\n    labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    },\n  },\n  created() {\n    this.getLabelLabelAll();\n  },\n  methods: {\n    // 添加\n    add() {\n      this.modals = true;\n      this.isEdit = false;\n    },\n    modalPicTap() {\n      this.$imgModal((e) => {\n        this.form.image = e.att_dir;\n      });\n    },\n    // 分组列表\n    getList() {\n      this.loading = true;\n      productLabelListApi(this.labelFrom)\n        .then(async (res) => {\n          let data = res.data;\n          this.labelLists = data.list;\n          this.total = data.count;\n          this.loading = false;\n        })\n        .catch((res) => {\n          this.loading = false;\n          this.$message.error(res.msg);\n        });\n    },\n    // 修改\n    edit(id) {\n      productLabelInfoApi({ id: id }).then((res) => {\n        this.form = res.data;\n        this.isEdit = true;\n        this.modals = true;\n      });\n\n      // this.$modalForm(userLabelAddApi(id)).then(() => this.getList());\n    },\n    // 删除\n    del(row, tit, num) {\n      let delfromData = {\n        title: tit,\n        num: num,\n        url: `product/label/del/${row.id}`,\n        method: 'DELETE',\n        ids: '',\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$message.success(res.msg);\n          this.labelLists.splice(num, 1);\n          this.getList();\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    // 修改是否显示\n    onchangeStatus(row) {\n      labelStatusApi(row)\n        .then(async (res) => {\n          this.$message.success(res.msg);\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    onchangeShow(row) {\n      labelIsShowApi(row)\n        .then(async (res) => {\n          this.$message.success(res.msg);\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n\n    // 标签分类\n    getLabelLabelAll(key) {\n      labelCateListApi().then((res) => {\n        let obj = {\n          name: '全部',\n          id: '',\n        };\n        res.data.unshift(obj);\n        res.data.forEach((el) => {\n          el.status = false;\n        });\n        if (!key) {\n          this.sortName = res.data[0].id;\n          this.labelFrom.cate_id = res.data[0].id;\n          this.getList();\n        }\n        this.labelSort = res.data;\n      });\n    },\n    // 显示标签小菜单\n    showMenu(item) {\n      this.labelSort.forEach((el) => {\n        if (el.id == item.id) {\n          el.status = item.status ? false : true;\n        } else {\n          el.status = false;\n        }\n      });\n    },\n    addWordsConfirm() {\n      if (!this.form.cate_id) return this.$message.error('请选择分组');\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          productLabelSaveApi(this.form)\n            .then((res) => {\n              this.$message.success(res.msg);\n              this.modals = false;\n              this.cancel();\n              this.labelFrom.page = 1;\n              this.getList();\n            })\n            .catch((res) => {\n              this.$message.error(res.msg);\n            });\n        }\n      });\n    },\n    cancel() {\n      this.form = {\n        id: 0,\n        cate_id: '',\n        name: '',\n        type: 1, //样式类型 1自定义 2图片\n        font_color: '#e93323',\n        bg_color: '#ffffff',\n        border_color: '#e93323',\n        sort: 0,\n        is_show: 1,\n        image: '',\n        status: 1,\n      };\n      this.modals = false;\n    },\n    //编辑标签\n    labelEdit(item) {\n      this.$modalForm(productLabelCateFormApi(item.id)).then(() => this.getLabelLabelAll(1));\n    },\n    // 添加分类\n    addSort() {\n      this.$modalForm(productLabelCateFormApi(0)).then(() => this.getLabelLabelAll());\n    },\n    deleteSort(row, tit) {\n      let num = this.labelSort.findIndex((e) => {\n        return e.id == row.id;\n      });\n      let delfromData = {\n        title: tit,\n        num: num,\n        url: `product/label_cate/del/${row.id}`,\n        method: 'DELETE',\n        ids: '',\n      };\n      this.$modalSure(delfromData)\n        .then((res) => {\n          this.$message.success(res.msg);\n          this.labelSort.splice(num, 1);\n          this.labelSort = [];\n          this.getLabelLabelAll();\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    clickMenu(data, name) {\n      if (name == 1) {\n        this.labelEdit(data);\n      } else if (name == 2) {\n        this.deleteSort(data, '删除分类');\n      }\n    },\n    bindMenuItem(name, index) {\n      this.labelFrom.page = 1;\n      this.current = index;\n      this.labelSort.forEach((el) => {\n        el.status = false;\n      });\n      this.labelFrom.cate_id = name.id;\n      this.form.cate_id = name.id;\n      this.getList();\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.showOn {\n  color: #2d8cf0;\n  background: #f0faff;\n  z-index: 2;\n}\n\n::v-deep .ivu-menu-vertical .ivu-menu-item-group-title {\n  display: none;\n}\n\n::v-deep .ivu-menu-vertical.ivu-menu-light:after {\n  display: none;\n}\n\n.left-wrapper {\n  height: 920px;\n  background: #fff;\n  border-right: 1px solid #f2f2f2;\n}\n.w-420 {\n  width: 420px;\n}\n.words-tag {\n  background-color: #f4f4f4;\n  display: inline-block;\n  padding: 0 10px;\n  font-size: 12px;\n  color: #4f4f4f;\n  border-radius: 4px;\n  box-sizing: border-box;\n  white-space: nowrap;\n  height: 28px;\n  line-height: 26px;\n}\n.tag-img {\n  display: block;\n  height: 28px;\n  object-fit: cover;\n  border-radius: 4px;\n}\n.menu-item {\n  z-index: 50;\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  word-break: break-all;\n\n  .icon-box {\n    z-index: 3;\n    position: absolute;\n    right: 20px;\n    top: 50%;\n    transform: translateY(-50%);\n    display: none;\n  }\n\n  &:hover .icon-box {\n    display: block;\n  }\n\n  .right-menu {\n    z-index: 10;\n    position: absolute;\n    right: -106px;\n    top: -11px;\n    width: auto;\n    min-width: 121px;\n  }\n}\n.tip {\n  color: #888;\n  font-size: 12px;\n  line-height: 16px;\n}\n.upload-select {\n  width: 64px;\n  height: 64px;\n  font-size: 32px !important;\n  background: #f5f5f5;\n  color: #ccc;\n  margin-bottom: 6px;\n}\n.upload-item {\n  position: relative;\n  display: inline-block;\n  width: 64px;\n  height: 64px;\n  border-radius: 4px;\n  margin: 0 15px 10px 0;\n  img {\n    width: 64px;\n    height: 64px;\n    border-radius: 4px;\n    vertical-align: middle;\n  }\n  .close {\n    cursor: pointer;\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    top: 0;\n    right: 0;\n    width: 20px;\n    height: 20px;\n    margin: -10px -10px 0 0;\n    background-color: #aaa;\n    color: #fff;\n  }\n}\n</style>\n"]}]}