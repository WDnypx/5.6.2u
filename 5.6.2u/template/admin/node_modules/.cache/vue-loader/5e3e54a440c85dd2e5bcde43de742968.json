{"remainingRequest":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\product\\productAdd\\index.vue?vue&type=style&index=0&id=4f4fb64e&lang=scss&scoped=true","dependencies":[{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\product\\productAdd\\index.vue","mtime":1751246651273},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\css-loader\\index.js","mtime":1753254259822},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1753254262918},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1753254258547},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1753254255270},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1753254260598}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkB1c2UgJy4vcHJvZHVjdEFkZC5zY3NzJyBhcyAqOwo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AA2lEA","file":"index.vue","sourceRoot":"src/pages/product/productAdd","sourcesContent":["<template>\n  <div class=\"\" id=\"shopp-manager\" v-loading=\"spinShow\">\n    <pages-header\n      ref=\"pageHeader\"\n      :title=\"$route.params.id ? '编辑商品' : '添加商品'\"\n      :backUrl=\"$routeProStr + '/product/product_list'\"\n    ></pages-header>\n    <el-card :bordered=\"false\" shadow=\"never\" class=\"mt16\" :body-style=\"{ padding: '0px 20px' }\">\n      <el-tabs v-model=\"currentTab\">\n        <el-tab-pane v-for=\"(item, index) in headTab\" :key=\"index\" :label=\"item.tit\" :name=\"item.name\"></el-tab-pane>\n      </el-tabs>\n      <el-form\n        class=\"formValidate mt20\"\n        ref=\"formValidate\"\n        :rules=\"ruleValidate\"\n        :model=\"formValidate\"\n        :label-width=\"labelWidth\"\n        :label-position=\"labelPosition\"\n        @submit.native.prevent\n      >\n        <!-- 基础信息-->\n        <basic-info\n          v-show=\"currentTab === '1'\"\n          :isCai=\"type\"\n          :formValidate=\"formValidate\"\n          :goodsType=\"goodsType\"\n          :treeSelect=\"treeSelect\"\n          :tileLabelList=\"tileLabelList\"\n          :progress=\"progress\"\n          :upload=\"upload\"\n          :videoIng=\"videoIng\"\n          @virtualbtn=\"virtualbtn\"\n          @handleDragStart=\"handleDragStart\"\n          @handleDragOver=\"handleDragOver\"\n          @handleDragEnter=\"handleDragEnter\"\n          @handleDragEnd=\"handleDragEnd\"\n          @handleRemove=\"handleRemove\"\n          @modalPicTap=\"modalPicTap\"\n          @addVideo=\"addVideo\"\n          @delVideo=\"delVideo\"\n          @addCate=\"addCate\"\n          @addGoodsTag=\"addGoodsTag\"\n        ></basic-info>\n\n        <!-- 规格库存-->\n        <spec-stock\n          ref=\"specStock\"\n          v-show=\"currentTab === '2'\"\n          :formValidate=\"formValidate\"\n          :ruleList=\"ruleList\"\n          :attrs=\"attrs\"\n          :manyFormValidate=\"manyFormValidate\"\n          :oneFormValidate=\"oneFormValidate\"\n          :tableKey=\"tableKey\"\n          :oneFormBatch=\"oneFormBatch\"\n          :formDynamic=\"formDynamic\"\n          :canSel=\"canSel\"\n          @changeSpec=\"changeSpec\"\n          @confirm=\"confirm\"\n          @onMoveSpec=\"onMoveSpec\"\n          @changeCurrentIndex=\"changeCurrentIndex\"\n          @handleRemoveRole=\"handleRemoveRole\"\n          @attrChangeValue=\"attrChangeValue\"\n          @handleFocus=\"handleFocus\"\n          @addPic=\"addPic\"\n          @handleRemove2=\"handleRemove2\"\n          @attrDetailChangeValue=\"attrDetailChangeValue\"\n          @handleBlur=\"handleBlur\"\n          @handleSelImg=\"handleSelImg\"\n          @handleRemoveImg=\"handleRemoveImg\"\n          @handleShowPop=\"handleShowPop\"\n          @createAttr=\"createAttr\"\n          @handleAddRole=\"handleAddRole\"\n          @handleSaveAsTemplate=\"handleSaveAsTemplate\"\n          @batchAdd=\"batchAdd\"\n          @batchDel=\"batchDel\"\n          @modalPicTap=\"modalPicTap\"\n          @changeDefaultSelect=\"changeDefaultSelect\"\n          @changeDefaultShow=\"changeDefaultShow\"\n          @addGoodsCoupon=\"addGoodsCoupon\"\n          @see=\"see\"\n          @addVirtual=\"addVirtual\"\n        ></spec-stock>\n\n        <!-- 商品详情-->\n        <product-detail\n          v-show=\"currentTab === '3'\"\n          :contents=\"contents\"\n          :content=\"content\"\n          @getEditorContent=\"getEditorContent\"\n        ></product-detail>\n\n        <!-- 物流设置-->\n        <logistics-setting\n          v-show=\"headTab.length === 7 ? currentTab === '4' : false\"\n          :formValidate=\"formValidate\"\n          :templateList=\"templateList\"\n          @logisticsBtn=\"logisticsBtn\"\n          @addTemp=\"addTemp\"\n        ></logistics-setting>\n\n        <!-- 会员价/佣金 -->\n        <price-commission\n          v-show=\"headTab.length === 7 ? currentTab === '5' : currentTab === '4'\"\n          :formValidate=\"formValidate\"\n          :oneFormValidate=\"oneFormValidate\"\n          :manyFormValidate=\"manyFormValidate\"\n          :columnsInstall=\"columnsInstall\"\n          :columnsInstal2=\"columnsInstal2\"\n          :manyBrokerage.sync=\"manyBrokerage\"\n          :manyBrokerageTwo.sync=\"manyBrokerageTwo\"\n          :manyVipPrice.sync=\"manyVipPrice\"\n          :manyVipDiscount.sync=\"manyVipDiscount\"\n          @checkAllGroupChange=\"checkAllGroupChange\"\n          @changeVipPrice=\"changeVipPrice\"\n          @changeDiscount=\"changeDiscount\"\n          @brokerageSetUp=\"brokerageSetUp\"\n        ></price-commission>\n\n        <!-- 营销设置-->\n        <marketing-setting\n          v-show=\"headTab.length === 7 ? currentTab === '6' : currentTab === '5'\"\n          :formValidate=\"formValidate\"\n          :couponName=\"couponName\"\n          :dataLabel=\"dataLabel\"\n          :activity=\"activity\"\n          @handleClose=\"handleClose\"\n          @addCoupon=\"addCoupon\"\n          @openLabel=\"openLabel\"\n          @closeLabel=\"closeLabel\"\n          @addLabel=\"addLabel\"\n          @onchangeTime=\"onchangeTime\"\n          @handleRemoveRecommend=\"handleRemoveRecommend\"\n          @changeGoods=\"changeGoods\"\n        ></marketing-setting>\n\n        <!-- 其他设置-->\n        <other-setting\n          v-show=\"headTab.length === 7 ? currentTab === '7' : currentTab === '6'\"\n          :formValidate=\"formValidate\"\n          :customBtn.sync=\"customBtn\"\n          :paramsType=\"paramsType\"\n          :paramsTypeList=\"paramsTypeList\"\n          :protectionList=\"protectionList\"\n          :CustomList=\"CustomList\"\n          @modalPicTap=\"modalPicTap\"\n          @changeParamsType=\"changeParamsType\"\n          @deleteRow=\"deleteRow\"\n          @handleAddParams=\"handleAddParams\"\n          @addProtection=\"addProtection\"\n          @customMessBtn=\"customMessBtn\"\n          @delcustom=\"delcustom\"\n          @addcustom=\"addcustom\"\n        ></other-setting>\n\n        <el-form-item>\n          <el-button v-if=\"currentTab !== '1'\" v-db-click @click=\"upTab\">上一步</el-button>\n          <el-button\n            class=\"submission\"\n            v-if=\"currentTab !== '7' && formValidate.virtual_type == 0\"\n            v-db-click\n            @click=\"downTab\"\n            >下一步</el-button\n          >\n          <el-button\n            class=\"submission\"\n            v-if=\"currentTab !== '6' && formValidate.virtual_type != 0\"\n            v-db-click\n            @click=\"downTab\"\n            >下一步</el-button\n          >\n          <el-button\n            type=\"primary\"\n            class=\"submission\"\n            v-db-click\n            @click=\"handleSubmit('formValidate')\"\n            v-if=\"$route.params.id || currentTab !== '1'\"\n            >保存</el-button\n          >\n        </el-form-item>\n      </el-form>\n      <el-dialog :visible.sync=\"modalPic\" width=\"950px\" scrollable title=\"上传商品图\" :close-on-click-modal=\"false\">\n        <uploadPictures\n          :isChoice=\"isChoice\"\n          @getPic=\"getPic\"\n          @getPicD=\"getPicD\"\n          :gridBtn=\"gridBtn\"\n          :gridPic=\"gridPic\"\n          v-if=\"modalPic\"\n        ></uploadPictures>\n      </el-dialog>\n      <el-dialog\n        :visible.sync=\"addVirtualModel\"\n        width=\"720px\"\n        title=\"添加卡密\"\n        :show-close=\"true\"\n        :close-on-click-modal=\"false\"\n        @closed=\"initVirtualData\"\n      >\n        <div class=\"trip\"></div>\n        <div class=\"type-radio\">\n          <el-form label-width=\"85px\">\n            <el-form-item label=\"卡密类型：\">\n              <el-radio-group v-model=\"disk_type\" size=\"large\">\n                <el-radio :label=\"1\">固定卡密</el-radio>\n                <el-radio :label=\"2\">一次性卡密</el-radio>\n              </el-radio-group>\n              <div v-if=\"disk_type == 1\">\n                <div class=\"stock-disk\">\n                  <el-input v-model=\"disk_info\" size=\"large\" type=\"textarea\" :rows=\"4\" placeholder=\"填写卡密信息\" />\n                </div>\n                <div class=\"stock-input\">\n                  <!-- <el-input type=\"number\" v-model=\"stock\" size=\"large\" :min='0' placeholder=\"填写库存数量\">\n                    <span slot=\"append\">件</span>\n                  </el-input> -->\n                  <el-input-number :controls=\"false\" :max=\"100000\" :min=\"1\" :step=\"1\" :precision=\"0\" v-model=\"stock\" />\n                  <span class=\"pl10\">件</span>\n                </div>\n              </div>\n              <div class=\"scroll-virtual\" v-if=\"disk_type == 2\">\n                <div class=\"virtual-data mb10\" v-for=\"(item, index) in virtualList\" :key=\"index\">\n                  <span class=\"mr10 virtual-title\">卡号{{ index + 1 }}：</span>\n                  <el-input\n                    class=\"mr10\"\n                    type=\"text\"\n                    v-model.trim=\"item.key\"\n                    style=\"width: 150px\"\n                    placeholder=\"请输入卡号(非必填)\"\n                  ></el-input>\n                  <span class=\"mr10 virtual-title\">卡密{{ index + 1 }}：</span>\n                  <el-input\n                    class=\"mr10\"\n                    type=\"text\"\n                    v-model.trim=\"item.value\"\n                    style=\"width: 150px\"\n                    placeholder=\"请输入卡密\"\n                  ></el-input>\n                  <span class=\"deteal-btn\" v-db-click @click=\"removeVirtual(index)\">删除</span>\n                </div>\n              </div>\n              <div class=\"add-more\" v-if=\"disk_type == 2\">\n                <el-button class=\"h-33\" type=\"primary\" v-db-click @click=\"handleAdd\">新增</el-button>\n                <el-upload\n                  class=\"ml10\"\n                  :action=\"cardUrl\"\n                  :data=\"uploadData\"\n                  :headers=\"header\"\n                  :on-success=\"upFile\"\n                  :before-upload=\"beforeUpload\"\n                >\n                  <el-button>导入卡密</el-button>\n                </el-upload>\n              </div>\n            </el-form-item>\n          </el-form>\n        </div>\n        <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button v-db-click @click=\"closeVirtual\">取 消</el-button>\n          <el-button type=\"primary\" v-db-click @click=\"upVirtual\">确 定</el-button>\n        </span>\n      </el-dialog>\n    </el-card>\n    <freightTemplate\n      :template=\"template\"\n      v-on:changeTemplate=\"changeTemplate\"\n      @addSuccess=\"productGetTemplate\"\n      ref=\"templates\"\n    ></freightTemplate>\n    <add-attr ref=\"addattr\" @getList=\"userSearchs\"></add-attr>\n    <coupon-list\n      ref=\"couponTemplates\"\n      @nameId=\"nameId\"\n      :couponids=\"formValidate.coupon_ids\"\n      :updateIds=\"updateIds\"\n      :updateName=\"updateName\"\n    ></coupon-list>\n    <coupon-list ref=\"goodsCoupon\" many=\"one\" :luckDraw=\"true\" @getCouponId=\"goodsCouponId\"></coupon-list>\n    <!-- 生成淘宝京东表单-->\n    <el-dialog\n      :visible.sync=\"modals\"\n      @closed=\"cancel\"\n      class=\"Box\"\n      title=\"复制淘宝、天猫、京东、苏宁、1688\"\n      :close-on-click-modal=\"false\"\n      width=\"720px\"\n    >\n      <tao-bao ref=\"taobaos\" v-if=\"modals\" @on-close=\"onClose\"></tao-bao>\n    </el-dialog>\n    <el-dialog :visible.sync=\"goods_modals\" title=\"商品列表\" footerHide class=\"paymentFooter\" scrollable width=\"1000px\">\n      <goods-list v-if=\"goods_modals\" ref=\"goodslist\" :ischeckbox=\"true\" @getProductId=\"getProductId\"></goods-list>\n    </el-dialog>\n    <!-- 用户标签 -->\n    <el-dialog\n      :visible.sync=\"labelShow\"\n      title=\"请选择用户标签\"\n      :show-close=\"true\"\n      width=\"540px\"\n      :close-on-click-modal=\"false\"\n    >\n      <userLabel ref=\"userLabel\" @activeData=\"activeData\" @close=\"labelClose\"></userLabel>\n    </el-dialog>\n    <!-- 商品标签 -->\n    <el-dialog\n      :visible.sync=\"tagShow\"\n      title=\"请选择商品标签\"\n      :show-close=\"true\"\n      width=\"540px\"\n      :close-on-click-modal=\"false\"\n    >\n      <goodsLabel\n        ref=\"goodsLabel\"\n        :defaultLabelList=\"labelList\"\n        @activeLabel=\"activeLabel\"\n        @close=\"labelClose\"\n      ></goodsLabel>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport userLabel from '@/components/labelList';\nimport useLabel from '@/components/goodsLabel/useLabel';\nimport goodsLabel from '@/components/goodsLabel';\nimport { mapState } from 'vuex';\nimport uploadPictures from '@/components/uploadPictures';\nimport freightTemplate from '@/components/freightTemplate';\nimport couponList from '@/components/couponList';\nimport addAttr from '../productAttr/addAttr';\nimport goodsList from '@/components/goodsList/index';\nimport taoBao from './taoBao';\nimport { userLabelAddApi } from '@/api/user';\nimport {\n  productInfoApi,\n  cascaderListApi,\n  productAddApi,\n  generateAttrApi,\n  productGetRuleApi,\n  productGetTemplateApi,\n  productGetTempKeysApi,\n  checkActivityApi,\n  productCache,\n  cacheDelete,\n  uploadType,\n  importCard,\n  productCreateApi,\n  getProductTypeConfig,\n  ruleAddApi,\n  paramListApi,\n  paramInfoApi,\n  productProtectionListApi,\n  productLabelUseListApi,\n} from '@/api/product';\nimport Setting from '@/setting';\nimport { getCookies } from '@/libs/util';\nimport { uploadByPieces } from '@/utils/upload'; //引入uploadByPieces方法\nimport { isFileUpload, isVideoUpload, arraysEqual } from '@/utils';\nimport checkArray from '@/libs/permission';\nimport {\n  GoodsTableHead,\n  VirtualTableHead,\n  VirtualTableHead2,\n  columns2,\n  columns3,\n  CustomList,\n  RuleValidate,\n} from './defaultData.js';\nimport BasicInfo from './components/BasicInfo.vue';\nimport SpecStock from './components/SpecStock.vue';\nimport ProductDetail from './components/ProductDetail.vue';\nimport LogisticsSetting from './components/LogisticsSetting.vue';\nimport PriceCommission from './components/PriceCommission.vue';\nimport MarketingSetting from './components/MarketingSetting.vue';\nimport OtherSetting from './components/OtherSetting.vue';\nimport { formatRichText } from '@/utils/editorImg';\n\nexport default {\n  name: 'ProductAdd',\n  components: {\n    uploadPictures,\n    freightTemplate,\n    addAttr,\n    couponList,\n    taoBao,\n    goodsList,\n    userLabel,\n    goodsLabel,\n    useLabel,\n    BasicInfo,\n    SpecStock,\n    ProductDetail,\n    LogisticsSetting,\n    PriceCommission,\n    MarketingSetting,\n    OtherSetting,\n  },\n  data() {\n    return {\n      labelShow: false,\n      tagShow: false,\n      dataLabel: [],\n      headTab: [\n        { tit: '基础信息', name: '1' },\n        { tit: '规格库存', name: '2' },\n        { tit: '商品详情', name: '3' },\n        { tit: '物流设置', name: '4' },\n        { tit: '会员价/佣金', name: '5' },\n        { tit: '营销设置', name: '6' },\n        { tit: '其他设置', name: '7' },\n      ],\n      virtual: [\n        { tit: '普通商品', id: 0, tit2: '物流发货' },\n        { tit: '卡密/网盘', id: 1, tit2: '自动发货' },\n        { tit: '优惠券', id: 2, tit2: '自动发货' },\n        { tit: '虚拟商品', id: 3, tit2: '虚拟发货' },\n      ],\n      seletVideo: 0, //选择视频类型\n      customBtn: 0, //自定义留言开关\n      content: '',\n      contents: '',\n      fileUrl: Setting.apiBaseURL + '/file/upload',\n      fileUrl2: Setting.apiBaseURL + '/file/video_upload',\n      cardUrl: Setting.apiBaseURL + '/file/upload/1',\n      upload_type: '', //视频上传类型 1 本地上传 2 3 4 OSS上传\n      uploadData: {}, // 上传参数\n      header: {},\n      type: 0,\n      modals: false,\n      goods_modals: false,\n      spinShow: false,\n      openSubimit: false,\n      virtualList: [\n        {\n          key: '',\n          value: '',\n        },\n      ],\n      // 批量设置表格data\n      oneFormBatch: [\n        {\n          pic: '',\n          price: void 0,\n          cost: void 0,\n          ot_price: void 0,\n          stock: void 0,\n          bar_code: '',\n          bar_code_number: '',\n          weight: void 0,\n          volume: void 0,\n          virtual_list: [],\n        },\n      ],\n\n      // 规格数据\n      formDynamic: {\n        attrsName: '',\n        attrsVal: '',\n      },\n      disk_type: 1, //卡密类型\n      tabIndex: 0,\n      tabName: '',\n      formDynamicNameData: [],\n      isBtn: false,\n      columns2: columns2,\n      columns3: columns3,\n      columns: [],\n      columnsInstall: [],\n      columnsInstal2: [],\n      gridPic: {\n        xl: 6,\n        lg: 8,\n        md: 12,\n        sm: 12,\n        xs: 12,\n      },\n      gridBtn: {\n        xl: 4,\n        lg: 8,\n        md: 8,\n        sm: 8,\n        xs: 8,\n      },\n      //自定义留言下拉选择\n      CustomList: CustomList,\n      //自定义留言内容\n      currentIndex: 0,\n\n      formValidate: {\n        disk_info: '', //卡密类型\n        logistics: ['1'], //选择物流方式\n        freight: 2, //运费设置\n        postage: 0, //设置运费金额\n        recommend: [], //商品推荐\n        presale_day: 1, //预售发货时间-结束\n        presale: false, //预售商品开关\n        is_limit: false,\n        limit_type: 0,\n        limit_num: 0,\n        vip_product: false, //付费会员专属开关\n        custom_form: [], //自定义留言\n        store_name: '',\n        cate_id: [],\n        label_id: [],\n        keyword: '',\n        unit_name: '',\n        store_info: '',\n        image: '',\n        recommend_image: '',\n        slider_image: [],\n        description: '',\n        ficti: 0,\n        give_integral: 0,\n        sort: 0,\n        is_show: 1,\n        is_gift: 0, // 开启送礼品\n        gift_price: 0,\n        is_hot: 0,\n        is_benefit: 0,\n        is_best: 0,\n        is_new: 0,\n        is_good: 0,\n        is_postage: 0,\n        is_sub: [],\n        recommend_list: [],\n        params_list: [], //商品参数\n        virtual_type: 0,\n        // is_sub: 0,\n        id: 0,\n        spec_type: 0,\n        is_virtual: 0,\n        video_link: '',\n        // postage: 0,\n        temp_id: '',\n        attrs: [],\n        items: [\n          {\n            pic: '',\n            price: 0,\n            cost: 0,\n            ot_price: 0,\n            stock: 0,\n            bar_code: '',\n            bar_code_number: '',\n          },\n        ],\n        activity: ['默认', '秒杀', '砍价', '拼团'],\n        couponName: [],\n        header: [],\n        selectRule: '',\n        coupon_ids: [],\n        command_word: '',\n        min_qty: 1,\n        label_list: [],\n        protection_list: [],\n      },\n      ruleList: [],\n      templateList: [],\n      createBnt: true,\n      showIput: false,\n      manyFormValidate: [],\n      // 单规格表格data\n      oneFormValidate: [\n        {\n          pic: '',\n          price: 0,\n          cost: 0,\n          ot_price: 0,\n          stock: 0,\n          bar_code: '',\n          bar_code_number: '',\n          weight: 0,\n          volume: 0,\n          brokerage: 0,\n          brokerage_two: 0,\n          vip_price: 0,\n          virtual_list: [],\n          coupon_id: 0,\n        },\n      ],\n      images: [],\n      imagesTable: '',\n      currentTab: '1',\n      isChoice: '',\n      loading: false,\n      modalPic: false,\n      addVirtualModel: false,\n      template: false,\n      uploadList: [],\n      treeSelect: [],\n      picTit: '',\n      tableIndex: 0,\n      ruleValidate: RuleValidate,\n      manyBrokerage: undefined,\n      manyBrokerageTwo: undefined,\n      manyVipPrice: undefined,\n      manyVipDiscount: undefined,\n      upload: {\n        videoIng: false, // 是否显示进度条；\n      },\n      videoIng: false, // 是否显示进度条；\n      progress: 0, // 进度条默认0\n      stock: 0,\n      disk_info: '',\n      videoLink: '',\n      attrs: [],\n      activity: { 默认: 'red', 秒杀: 'blue', 砍价: 'green', 拼团: 'yellow' },\n      couponName: [],\n      updateIds: [],\n      updateName: [],\n      couponIds: '',\n      couponNames: [],\n      rakeBack: [\n        {\n          title: '一级返佣(元)',\n          slot: 'brokerage',\n          align: 'center',\n          width: 95,\n        },\n        {\n          title: '二级返佣(元)',\n          slot: 'brokerage_two',\n          align: 'center',\n          width: 95,\n        },\n      ],\n      member: [\n        {\n          title: '会员价',\n          slot: 'vip_price',\n          align: 'center',\n          width: 95,\n        },\n        {\n          title: '会员折扣',\n          slot: 'vip_proportion',\n          align: 'center',\n          width: 95,\n        },\n      ],\n      columnsInstalM: [],\n      moveIndex: '',\n      addValue: '',\n      visible: false,\n      typeConfig: [],\n      goodsType: [],\n      paramsTypeList: [],\n      paramsType: null,\n      canSel: true, // 规格图片添加判断\n      changeAttrValue: '', //修改的规格值\n      tableKey: 0,\n      protectionList: [], // 服务保障\n      labelList: [],\n      tileLabelList: [],\n    };\n  },\n  computed: {\n    ...mapState('media', ['isMobile']),\n    labelWidth() {\n      return this.isMobile ? undefined : '120px';\n    },\n    labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    },\n    labelBottom() {\n      return this.isMobile ? undefined : '15px';\n    },\n  },\n  watch: {\n    typeConfig(val) {\n      if (val.length) {\n        // 对virtual中的id等于val中的id的\n        this.goodsType = this.virtual.filter((item) => {\n          return val.includes(item.id + '');\n        });\n      } else {\n        this.goodsType = this.virtual;\n      }\n    },\n  },\n  beforeRouteUpdate(to, from, next) {\n    this.bus.$emit('onTagsViewRefreshRouterView', this.$route.path);\n    next();\n  },\n  created() {\n    this.columns = this.columns2.slice(0, 8);\n    this.getToken();\n  },\n  async mounted() {\n    if (this.$route.params.id !== '0' && this.$route.params.id) {\n      await this.getInfo();\n    } else if (this.$route.params.id === '0') {\n      this.getProductCache();\n    } else {\n      this.getproductLabelUseListApi();\n    }\n    if (this.$route.query.type) {\n      this.modals = true;\n      this.type = this.$route.query.type;\n    } else {\n      this.type = 0;\n    }\n    this.goodsCategory();\n    this.productGetRule();\n    this.productGetTemplate();\n    this.paramsGetTemplate();\n    this.uploadType();\n    this.productConfig();\n    this.watchActivity();\n    this.getProtectionList();\n  },\n  methods: {\n    getProductCache() {\n      productCache()\n        .then((res) => {\n          let data = res.data.info;\n          this.getproductLabelUseListApi();\n\n          if (!Array.isArray(data)) {\n            let cate_id = data.cate_id.map(Number);\n            let label_id = data.label_id.map(Number);\n            this.attrs = data.items || [];\n            let ids = [];\n            if (data.coupons) {\n              data.coupons.map((item) => {\n                ids.push(item.id);\n              });\n              this.couponName = data.coupons;\n            }\n\n            this.formValidate = data;\n            this.dataLabel = data.label_id;\n            this.formValidate.coupon_ids = ids;\n            this.updateIds = ids;\n            this.updateName = data.coupons;\n            this.formValidate.cate_id = cate_id;\n            this.oneFormValidate = data.attrs;\n            this.generateHeader(this.attrs);\n            this.formValidate.logistics = data.logistics || ['1'];\n            this.formValidate.header = [];\n            this.manyFormValidate = data.attrs;\n            this.spec_type = data.spec_type;\n            this.formValidate.is_virtual = data.is_virtual;\n            this.formValidate.custom_form = data.custom_form || [];\n            if (this.formValidate.custom_form.length != 0) {\n              this.customBtn = 1;\n            }\n            this.attrs.map((item) => {\n              if (item.add_pic) this.canSel = false;\n            });\n            this.virtualbtn(data.virtual_type, 1);\n            if (data.spec_type === 0) {\n              this.manyFormValidate = [];\n            } else {\n              this.createBnt = true;\n              this.oneFormValidate = [\n                {\n                  pic: data.image,\n                  price: 0,\n                  cost: 0,\n                  ot_price: 0,\n                  stock: 0,\n                  bar_code: '',\n                  bar_code_number: '',\n                  weight: 0,\n                  volume: 0,\n                  brokerage: 0,\n                  brokerage_two: 0,\n                  vip_price: 0,\n                  virtual_list: [],\n                  coupon_id: 0,\n                },\n              ];\n            }\n            this.watchActivity();\n            this.spinShow = false;\n          }\n        })\n        .catch((err) => {\n          this.$message.error(err.msg);\n        });\n    },\n    getProtectionList() {\n      productProtectionListApi({ page: 0, limit: 0, status: 1 }).then((res) => {\n        this.protectionList = res.data.list;\n      });\n    },\n    getproductLabelUseListApi() {\n      productLabelUseListApi().then((res) => {\n        // 合并数组中所有的list\n        this.tileLabelList = res.data.flatMap((item) => item.list);\n        let labelList = res.data;\n        if (this.formValidate.label_list.length) {\n          this.formValidate.label_list.map((el) => {\n            labelList.map((re) => {\n              re.list.map((label) => {\n                if (label.id === el) {\n                  label.active = true;\n                } else {\n                  label.active = false;\n                }\n              });\n            });\n          });\n        } else {\n          labelList.map((el) => {\n            el.list.map((label) => {\n              label.active = false;\n            });\n          });\n        }\n        this.labelList = labelList;\n      });\n    },\n    addProtection() {\n      this.$router.push({ path: this.$routeProStr + '/product/protection/list' });\n    },\n    productConfig() {\n      getProductTypeConfig().then((res) => {\n        this.typeConfig = res.data;\n      });\n    },\n    beforeUpload(file) {\n      return isFileUpload(file);\n    },\n    // 分片上传\n    videoSaveToUrl(file) {\n      if (isVideoUpload(file)) {\n        uploadByPieces({\n          file: file, // 视频实体\n          pieceSize: 3, // 分片大小\n          success: (data) => {\n            this.formValidate.video_link = data.file_path;\n            this.progress = 100;\n          },\n          error: (e) => {\n            this.$message.error(e.msg);\n          },\n          uploading: (chunk, allChunk) => {\n            this.videoIng = true;\n            let st = Math.floor((chunk / allChunk) * 100);\n            this.progress = st;\n          },\n        });\n      }\n      return false;\n    },\n    // 类型选择/填入内容判断\n    virtualbtn(index, type) {\n      if (type != 1) {\n        if (this.$route.params.id) return this.$message.error('编辑商品不支持切换商品类型');\n        this.formValidate.is_sub = [];\n        let id = this.$route.params.id;\n        if (id) {\n          checkActivityApi(id)\n            .then((res) => {})\n            .catch((res) => {\n              this.formValidate.spec_type = this.spec_type;\n              this.$message.error(res.msg);\n            });\n        } else {\n          if (this.formValidate.spec_type == 1) {\n            this.generate(1);\n          }\n        }\n      }\n      // 定义基础商品和虚拟商品的标签页配置\n      const baseHeadTabs = [\n        { tit: '基础信息', name: '1' },\n        { tit: '规格库存', name: '2' },\n        { tit: '商品详情', name: '3' },\n        { tit: '物流设置', name: '4' },\n        { tit: '会员价/佣金', name: '5' },\n        { tit: '营销设置', name: '6' },\n        { tit: '其他设置', name: '7' },\n      ];\n      const virtualHeadTabs = [\n        { tit: '基础信息', name: '1' },\n        { tit: '规格库存', name: '2' },\n        { tit: '商品详情', name: '3' },\n        { tit: '会员价/佣金', name: '4' },\n        { tit: '营销设置', name: '5' },\n        { tit: '其他设置', name: '6' },\n      ];\n\n      switch (index) {\n        case 0: // 普通商品\n          this.formValidate.virtual_type = 0;\n          this.formValidate.is_virtual = 0;\n          this.headTab = baseHeadTabs;\n          break;\n\n        case 1: // 卡密/网盘商品\n          this.formValidate.virtual_type = 1;\n          this.formValidate.postage = 0;\n          this.formValidate.is_virtual = 1;\n          this.headTab = virtualHeadTabs;\n          break;\n\n        case 2: // 优惠券商品\n          this.formValidate.virtual_type = 2;\n          this.formValidate.is_virtual = 1;\n          this.headTab = virtualHeadTabs;\n          break;\n\n        case 3: // 虚拟商品\n          this.formValidate.virtual_type = 3;\n          this.formValidate.is_virtual = 1;\n          this.headTab = virtualHeadTabs;\n          break;\n      }\n    },\n    // 新增分类\n    addCate() {\n      this.$modalForm(productCreateApi()).then(() => this.goodsCategory());\n    },\n    // 物流方式选择\n    logisticsBtn(e) {\n      this.formValidate.logistics = e;\n    },\n    // 新增标签\n    addLabel() {\n      this.$modalForm(userLabelAddApi(0)).then(() => this.userLabel());\n    },\n    // 选择标签\n    addGoodsTag() {\n      this.tagShow = true;\n    },\n    // 自定义留言 开启关闭\n    customMessBtn(e) {\n      if (!e) {\n        this.formValidate.custom_form = [];\n      }\n      this.customBtn = e;\n    },\n    // 自定义留言 新增表单\n    addcustom() {\n      if (this.formValidate.custom_form.length > 9) {\n        this.$message.warning('最多添加10条');\n      } else {\n        this.formValidate.custom_form.push({\n          title: '',\n          label: 'text',\n          value: '',\n          status: false,\n        });\n      }\n    },\n    // 删除\n    delcustom(index) {\n      this.formValidate.custom_form.splice(index, 1);\n    },\n    // 预售具体日期\n    onchangeTime(e) {\n      this.formValidate.presale_time = e;\n    },\n    // 商品详情\n    getEditorContent(data) {\n      this.content = data;\n    },\n    cancel() {\n      this.modals = false;\n    },\n    // 上传头部token\n    getToken() {\n      this.header['Authori-zation'] = 'Bearer ' + getCookies('token');\n    },\n    // 导入卡密\n    upFile(res) {\n      importCard({ file: res.data.src }).then((res) => {\n        this.virtualList = this.virtualList.concat(res.data);\n      });\n    },\n    //获取视频上传类型\n    uploadType() {\n      uploadType().then((res) => {\n        this.upload_type = res.data.upload_type;\n      });\n    },\n    // 初始化数据展示\n    infoData(data, isCopy) {\n      let cate_id = data.cate_id.map(Number);\n      let label_id = data.label_id.map(Number);\n      this.attrs = data.items || [];\n      let ids = [];\n      data.coupons.map((item) => {\n        ids.push(item.id);\n      });\n      this.formValidate = data;\n      this.seletVideo = data.seletVideo;\n      this.contents = data.description;\n      this.couponName = data.coupons;\n      this.formValidate.coupon_ids = ids;\n      this.updateIds = ids;\n      this.dataLabel = data.label_id;\n      this.updateName = data.coupons;\n      this.virtualbtn(data.virtual_type, 1);\n      this.formValidate.logistics = data.logistics || ['1'];\n      this.formValidate.custom_form = data.custom_form || [];\n      if (this.formValidate.custom_form.length != 0) {\n        this.customBtn = 1;\n      }\n      this.formValidate.cate_id = cate_id;\n      if (data.attr) {\n        this.oneFormValidate = [data.attr];\n        this.oneFormValidate[0].vip_proportion = (\n          (this.oneFormValidate[0].vip_price / this.oneFormValidate[0].price) *\n          100\n        ).toFixed(2);\n      }\n      this.getproductLabelUseListApi();\n\n      this.formValidate.header = [];\n      this.spec_type = data.spec_type;\n      this.formValidate.spec_type = this.spec_type;\n      this.formValidate.is_virtual = data.is_virtual;\n      this.attrs.map((item) => {\n        if (item.add_pic) this.canSel = false;\n      });\n      if (data.spec_type === 0) {\n        this.manyFormValidate = [];\n      } else {\n        this.createBnt = true;\n        this.oneFormValidate = [\n          {\n            pic: '',\n            price: 0,\n            cost: 0,\n            ot_price: 0,\n            stock: 0,\n            bar_code: '',\n            bar_code_number: '',\n            weight: 0,\n            volume: 0,\n            brokerage: 0,\n            brokerage_two: 0,\n            vip_price: 0,\n            virtual_list: [],\n            coupon_id: 0,\n          },\n        ];\n\n        this.generateHeader(this.attrs);\n        this.manyFormValidate = [...this.oneFormBatch, ...data.attrs];\n      }\n\n      setTimeout((e) => {\n        this.checkAllGroup(data.is_sub);\n      }, 1000);\n      this.watchActivity();\n    },\n    //关闭淘宝弹窗并生成数据；\n    onClose(data) {\n      this.modals = false;\n      this.infoData(data, 1);\n    },\n\n    checkMove(evt) {\n      this.moveIndex = evt.draggedContext.index;\n    },\n    end() {\n      this.moveIndex = '';\n      this.generate(1);\n    },\n    // 单独设置会员设置\n    checkAllGroupChange(data) {\n      this.checkAllGroup(data);\n    },\n    checkAllGroup(data) {\n      let endLength = this.attrs.length + 3;\n      if (this.formValidate.spec_type === 0) {\n        if (data.length === 2) {\n          this.columnsInstall = this.columns2.slice(0, endLength).concat(this.rakeBack).concat(this.member);\n        } else if (data.indexOf(0) > -1) {\n          this.columnsInstall = this.columns2.slice(0, endLength).concat(this.member);\n        } else if (data.indexOf(1) > -1) {\n          this.columnsInstall = this.columns2.slice(0, endLength).concat(this.rakeBack);\n        } else {\n          this.columnsInstall = this.columns2.slice(0, endLength);\n        }\n      } else {\n        if (data.length === 2) {\n          this.columnsInstal2 = this.columnsInstalM\n            .slice(0, endLength + 1)\n            .concat(this.rakeBack)\n            .concat(this.member);\n        } else if (data.indexOf(0) > -1) {\n          this.columnsInstal2 = this.columnsInstalM.slice(0, endLength).concat(this.member);\n        } else if (data.indexOf(1) > -1) {\n          this.columnsInstal2 = this.columnsInstalM.slice(0, endLength).concat(this.rakeBack);\n        } else {\n          this.columnsInstal2 = this.columnsInstalM.slice(0, endLength);\n        }\n      }\n    },\n    // 添加优惠券\n    addCoupon() {\n      this.$refs.couponTemplates.isTemplate = true;\n      this.$refs.couponTemplates.tableList();\n    },\n    // 规格中优惠券查看\n    see(data, name, index) {\n      this.tabName = name;\n      this.tabIndex = index;\n\n      if (this.formValidate.virtual_type === 1) {\n        if (data.disk_info != '') {\n          this.disk_type = 1;\n          this.disk_info = data.disk_info;\n          this.stock = data.stock;\n        } else if (data.virtual_list.length) {\n          this.disk_type = 2;\n          this.virtualList = data.virtual_list;\n        }\n        this.addVirtualModel = true;\n      } else {\n        this.$refs.goodsCoupon.isTemplate = true;\n        this.$refs.goodsCoupon.tableList(3);\n      }\n    },\n    // 修改分佣比例\n    changeDiscount(index, type = 'manyFormValidate') {\n      // 根据分佣比例 vip_proportion 修改会员价 保留2位小数\n      this[type][index].vip_price = (this[type][index].price * (this[type][index].vip_proportion / 100)).toFixed(2);\n    },\n    // 修改会员价\n    changeVipPrice(index, type = 'manyFormValidate') {\n      // 根据会员价计算出分佣比例\n      this[type][index].vip_proportion = ((this[type][index].vip_price / this[type][index].price) * 100).toFixed(2);\n    },\n    // 添加优惠券\n    addGoodsCoupon(index, name) {\n      this.tabIndex = index;\n      this.tabName = name;\n      this.$refs.goodsCoupon.isTemplate = true;\n      this.$refs.goodsCoupon.tableList(3);\n    },\n    addVirtual(index, name) {\n      this.tabIndex = index;\n      this.tabName = name;\n      this.addVirtualModel = true;\n    },\n    // 提交卡密信息\n    upVirtual() {\n      if (this.disk_type == 2) {\n        for (let i = 0; i < this.virtualList.length; i++) {\n          const element = this.virtualList[i];\n          if (!element.value) {\n            this.$message.error('请输入所有卡密');\n            return;\n          }\n        }\n        this.$set(this[this.tabName][this.tabIndex], 'virtual_list', this.virtualList);\n        this.$set(this[this.tabName][this.tabIndex], 'stock', this.virtualList.length);\n        this.virtualList = [\n          {\n            key: '',\n            value: '',\n          },\n        ];\n        this.$set(this[this.tabName][this.tabIndex], 'disk_info', '');\n      } else {\n        if (!this.disk_info.length) {\n          return this.$message.error('请填写卡密信息');\n        }\n        if (!this.stock) {\n          return this.$message.error('请填写库存数量');\n        }\n        this.$set(this[this.tabName][this.tabIndex], 'stock', Number(this.stock));\n        this.$set(this[this.tabName][this.tabIndex], 'stock', Number(this.stock));\n        this.$set(this[this.tabName][this.tabIndex], 'disk_info', this.disk_info);\n        this.$set(this[this.tabName][this.tabIndex], 'virtual_list', []);\n      }\n      this.addVirtualModel = false;\n      this.closeVirtual();\n    },\n    //  初始化卡密数据信息\n    closeVirtual() {\n      this.addVirtualModel = false;\n      this.virtualList = [\n        {\n          key: '',\n          value: '',\n        },\n      ];\n      this.disk_info = '';\n      this.stock = 0;\n    },\n    //对象数组去重；\n    uniqueArray(arr) {\n      const seen = {};\n      return arr.filter((item) => {\n        const key = JSON.stringify(item); // 使用 JSON.stringify 生成唯一键\n        if (seen[key]) {\n          return false;\n        } else {\n          seen[key] = true;\n          return true;\n        }\n      });\n    },\n    // 获取优惠券id数据\n    nameId(id, names) {\n      this.formValidate.coupon_ids = id;\n      this.couponName = this.uniqueArray(names);\n    },\n    // 获取优惠券信息\n    goodsCouponId(data) {\n      this.$set(this[this.tabName][this.tabIndex], 'coupon_id', data.id);\n      this.$set(this[this.tabName][this.tabIndex], 'coupon_name', data.title);\n      this.$refs.goodsCoupon.isTemplate = false;\n    },\n    handleClose(name) {\n      let index = this.couponName.indexOf(name);\n      this.couponName.splice(index, 1);\n      let couponIds = this.formValidate.coupon_ids;\n      couponIds.splice(index, 1);\n      this.updateIds = couponIds;\n      this.updateName = this.couponName;\n    },\n    // 添加运费模板\n    addTemp() {\n      this.$refs.templates.isTemplate = true;\n    },\n    addVideo() {\n      this.$videoModal((e) => {\n        this.formValidate.video_link = e;\n      });\n    },\n    // 删除视频；\n    delVideo() {\n      this.$set(this.formValidate, 'video_link', '');\n      this.$set(this, 'progress', 0);\n      this.videoIng = false;\n      this.upload.videoIng = false;\n    },\n    zh_uploadFile() {\n      if (this.seletVideo == 1) {\n        this.formValidate.video_link = this.videoLink;\n      } else {\n        this.$refs.refid.click();\n      }\n    },\n    // 上传视频\n    zh_uploadFile_change(evfile) {\n      let suffix = evfile.target.files[0].name.substr(evfile.target.files[0].name.indexOf('.'));\n      if (suffix.indexOf('.mp4') === -1) {\n        return this.$message.error('只能上传MP4文件');\n      }\n      let types = {\n        key: evfile.target.files[0].name,\n        contentType: evfile.target.files[0].type,\n      };\n      productGetTempKeysApi(types)\n        .then((res) => {\n          this.$videoCloud\n            .videoUpload({\n              type: res.data.type,\n              evfile: evfile,\n              res: res,\n              uploading(status, progress) {\n                this.upload.videoIng = status;\n                if (res.status == 200) {\n                  this.progress = 100;\n                }\n              },\n            })\n            .then((res) => {\n              this.formValidate.video_link = res.url;\n              this.$message.success('视频上传成功');\n              this.upload.videoIng = false;\n            })\n            .catch((res) => {\n              this.$message.error(res);\n            });\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    // 上一页；\n    upTab() {\n      this.currentTab = (Number(this.currentTab) - 1).toString();\n    },\n    // 下一页；\n    downTab() {\n      this.currentTab = (Number(this.currentTab) + 1).toString();\n    },\n    // 属性弹窗回调函数；\n    userSearchs() {\n      this.productGetRule();\n    },\n    // 添加规则；\n    addRule() {\n      this.$refs.addattr.modal = true;\n    },\n    // 批量设置分佣；\n    brokerageSetUp() {\n      if (this.formValidate.is_sub.indexOf(1) > -1) {\n        if (this.manyBrokerage <= 0 || this.manyBrokerageTwo <= 0) {\n          return this.$message.error('请填写返佣金额后进行批量添加');\n        }\n      } else if (this.formValidate.is_sub.indexOf(0) > -1) {\n        if (this.manyVipPrice <= 0) {\n          return this.$message.error('请填写会员价后进行批量添加');\n        }\n      }\n      if (this.formValidate.is_sub.length === 2) {\n        if (this.manyBrokerage <= 0 || this.manyBrokerageTwo <= 0) {\n          return this.$message.error('请填写完金额后进行批量添加');\n        }\n        if (this.manyVipPrice > 0 && this.manyVipDiscount > 0) {\n          return this.$message.error('会员价和会员折扣只能二选一添加');\n        }\n      }\n      for (let val of this.manyFormValidate) {\n        this.manyBrokerage != undefined && this.$set(val, 'brokerage', this.manyBrokerage);\n        this.manyBrokerageTwo != undefined && this.$set(val, 'brokerage_two', this.manyBrokerageTwo);\n        if (this.manyVipPrice != undefined) {\n          this.$set(val, 'vip_price', this.manyVipPrice);\n          this.$set(val, 'vip_proportion', ((val.vip_price / val.price) * 100).toFixed(2));\n        } else {\n          this.$set(val, 'vip_proportion', this.manyVipDiscount);\n          this.$set(val, 'vip_price', (val.price * (this.manyVipDiscount / 100)).toFixed(2));\n        }\n      }\n    },\n    // 批量设置会员价\n    vipPriceSetUp() {\n      if (this.manyVipPrice <= 0) {\n        return this.$message.error('请填写会员价在进行批量添加');\n      } else {\n        for (let val of this.manyFormValidate) {\n          this.$set(val, 'vip_price', this.manyVipPrice);\n        }\n      }\n    },\n    // 新增卡密\n    handleAdd() {\n      this.virtualList.push({\n        key: '',\n        value: '',\n      });\n    },\n    // 初始化卡密信息\n    initVirtualData(status) {\n      this.virtualList = [\n        {\n          key: '',\n          value: '',\n        },\n      ];\n    },\n    removeVirtual(index) {\n      this.virtualList.splice(index, 1);\n    },\n    // 清空批量规格信息\n    batchDel() {\n      this.oneFormBatch = [\n        {\n          pic: '',\n          price: void 0,\n          cost: void 0,\n          ot_price: void 0,\n          stock: void 0,\n          bar_code: '',\n          bar_code_number: '',\n          weight: void 0,\n          volume: void 0,\n          virtual_list: [],\n        },\n      ];\n    },\n    confirm(name) {\n      this.createBnt = true;\n      this.formValidate.selectRule = name;\n      this.attrs = [];\n      if (this.formValidate.selectRule.trim().length <= 0) {\n        return this.$message.error('请选择属性');\n      }\n      this.ruleList.forEach((item, index) => {\n        if (item.rule_name === this.formValidate.selectRule) {\n          this.attrs = [...item.rule_value];\n        }\n      });\n      this.canSel = true;\n      this.generateAttr(this.attrs);\n    },\n    // 选择规格模板\n    handleCommand(e) {},\n    // 获取商品属性模板；\n    productGetRule() {\n      productGetRuleApi().then((res) => {\n        this.ruleList = res.data;\n      });\n    },\n    // 获取运费模板；\n    productGetTemplate() {\n      productGetTemplateApi().then((res) => {\n        this.templateList = res.data;\n      });\n    },\n    paramsGetTemplate() {\n      paramListApi().then((res) => {\n        this.paramsTypeList = res.data.list;\n      });\n    },\n    changeParamsType(e) {\n      e ? this.getParams(e) : (this.formValidate.params_list = []);\n    },\n    getParams(id) {\n      paramInfoApi(id).then((res) => {\n        this.formValidate.params_list = res.data.value;\n      });\n    },\n    isSubset(arr1, arr2) {\n      // 将数组转换为 Set，以便进行高效的包含检查\n      const set1 = new Set(arr1);\n      const set2 = new Set(arr2);\n\n      // 检查 set2 中的每个元素是否都在 set1 中\n      for (let elem of set2) {\n        if (!set1.has(elem)) {\n          return false;\n        }\n      }\n      return true;\n    },\n    // 批量添加\n    batchAdd() {\n      let arr = [];\n      for (let val of this.attrs) {\n        if (this.oneFormBatch[0][val.value]) {\n          arr.push(this.oneFormBatch[0][val.value]);\n        }\n      }\n\n      // 批量设置商品规格属性\n      const batchFields = [\n        'pic',\n        'price',\n        'cost',\n        'ot_price',\n        'stock',\n        'weight',\n        'volume',\n        'bar_code',\n        'bar_code_number',\n      ];\n      // const defaultFields = ['bar_code', 'bar_code_number'];\n\n      for (let val of this.manyFormValidate) {\n        const batch = this.oneFormBatch[0];\n        // 如果存在筛选条件且满足条件,或无筛选条件时\n        if (!arr.length || this.isSubset(val.attr_arr, arr)) {\n          // 设置有值的批量字段\n          batchFields.forEach((field) => {\n            if (batch[field] && batch[field] !== undefined) {\n              if (field === 'pic' && batch[field]) {\n                this.$set(val, field, batch[field]);\n              } else if (field != 'pic') {\n                this.$set(val, field, batch[field]);\n              }\n            }\n          });\n\n          // 设置默认字段\n          // defaultFields.forEach((field) => {\n          //   this.$set(val, field, batch[field]);\n          // });\n        }\n      }\n    },\n    changeSpecImg(arr, img) {\n      // 判断是否存在规格图\n      let isHas = false;\n      for (let i = 1; i < this.manyFormValidate.length; i++) {\n        let item = this.manyFormValidate[i];\n        if (item.pic && this.isSubset(item.attr_arr, arr)) {\n          isHas = true;\n          break;\n        }\n      }\n      if (isHas) {\n        this.$confirm('可以同步修改下方该规格图片，确定要替换吗？', '提示', {\n          confirmButtonText: '替换',\n          cancelButtonText: '暂不',\n          type: 'warning',\n        })\n          .then(() => {\n            for (let val of this.manyFormValidate) {\n              if (this.isSubset(val.attr_arr, arr)) {\n                this.$set(val, 'pic', img);\n              }\n            }\n          })\n          .catch(() => {});\n      } else {\n        for (let val of this.manyFormValidate) {\n          if (this.isSubset(val.attr_arr, arr)) {\n            this.$set(val, 'pic', img);\n          }\n        }\n      }\n    },\n    // 立即生成\n    generate(type, isCopy, arr) {\n      this.manyFormValidate = [];\n      this.formValidate.header = [];\n    },\n    clearAttr() {\n      this.formDynamic.attrsName = '';\n      this.formDynamic.attrsVal = '';\n    },\n\n    // 删除规格\n    handleRemoveRole(index) {\n      this.attrs.splice(index, 1);\n      this.manyFormValidate.splice(index, 1);\n      if (!this.attrs.length) {\n        this.formValidate.header = [];\n        this.manyFormValidate = [];\n      } else {\n        this.generateAttr(this.attrs);\n      }\n    },\n    // 删除表格中 对应属性\n    delAttrTable(val) {\n      for (let i = 0; i < this.manyFormValidate.length; i++) {\n        let item = this.manyFormValidate[i];\n        if (item.attr_arr && item.attr_arr.includes(val)) {\n          this.manyFormValidate.splice(i, 1);\n          i--;\n        }\n      }\n    },\n    // 删除属性\n    handleRemove2(item, index, val) {\n      // 删除 manyFormValidate中 title = item.value 的属性值\n      item.splice(index, 1);\n      // this.generateAttr(this.attrs);\n      this.delAttrTable(val);\n    },\n    // 新增规格\n    handleAddRole() {\n      let data = {\n        value: this.formDynamic.attrsName,\n        add_pic: 0,\n        detail: [],\n      };\n      this.attrs.push(data);\n    },\n    handleAddParams() {\n      let data = {\n        name: '',\n        value: '',\n      };\n      this.formValidate.params_list.push(data);\n    },\n    handleSaveAsTemplate() {\n      this.$prompt('', '请输入模板名称', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n      })\n        .then(({ value }) => {\n          let spec = this.attrs.map((item) => {\n            return {\n              value: item.value,\n              detail: item.detail.map((e) => e.value),\n            };\n          });\n          let formDynamic = {\n            rule_name: value,\n            spec: spec,\n          };\n          ruleAddApi(formDynamic, 0)\n            .then((res) => {\n              this.$message.success(res.msg);\n              this.productGetRule();\n            })\n            .catch((res) => {\n              this.$message.error(res.msg);\n            });\n        })\n        .catch(() => {});\n    },\n    // 新增一条属性\n    addOneAttr(val, val2) {\n      this.generateAttr(this.attrs, val2);\n    },\n    handleFocus(val) {\n      this.changeAttrValue = val;\n    },\n    handleBlur() {\n      this.changeAttrValue = '';\n    },\n    handleSelImg(item) {\n      this.$imgModal((e) => {\n        item.pic = e.att_dir;\n        this.changeSpecImg([item.value], e.att_dir);\n      });\n    },\n    handleRemoveImg(item) {\n      item.pic = '';\n    },\n    // 规格名称改变\n    attrChangeValue(i, val) {\n      if (val.trim().length && this.attrs[i].detail.length) {\n        this.generateHeader(this.attrs);\n        if (this.manyFormValidate.length) {\n          this.manyFormValidate.map((item, i) => {\n            if (i > 0) {\n              if (Object.keys(item.detail).includes(this.changeAttrValue)) {\n                item.detail[val] = item.detail[this.changeAttrValue];\n                item[val] = item[this.changeAttrValue];\n                delete item.detail[this.changeAttrValue];\n                delete item[this.changeAttrValue];\n              }\n            }\n          });\n          this.changeAttrValue = val;\n        }\n      } else {\n        this.generateAttr(this.attrs);\n      }\n    },\n    // 规格值改变\n    attrDetailChangeValue(val, i) {\n      if (this.manyFormValidate.length) {\n        let key = this.attrs[i].value;\n        this.manyFormValidate.map((item, i) => {\n          if (i > 0) {\n            if (Object.keys(item.detail).includes(key) && item.detail[key] === this.changeAttrValue) {\n              item.detail[key] = val;\n              let index = item.attr_arr.findIndex((item) => item === this.changeAttrValue);\n              item.attr_arr[index] = val;\n            }\n          }\n        });\n        this.changeAttrValue = val;\n      } else {\n        this.generateAttr(this.attrs, 1);\n      }\n    },\n    // 规格图片添加开关\n    addPic(e, i) {\n      if (e) {\n        this.attrs.map((item, ii) => {\n          if (ii !== i) {\n            this.$set(item, 'add_pic', 0);\n          }\n        });\n        this.canSel = false;\n      } else {\n        this.canSel = true;\n      }\n    },\n    // 规格拖拽排序后\n    onMoveSpec() {\n      this.generateAttr(this.attrs);\n    },\n    changeCurrentIndex(i) {\n      this.currentIndex = i;\n    },\n    // 生成商品规格表头\n    generateHeader(data) {\n      let specificationsColumns = data.map((item) => ({\n        title: item.value,\n        key: item.value,\n        minWidth: 140,\n        fixed: 'left',\n      }));\n      let arr;\n      if ([1, 2].includes(Number(this.formValidate.virtual_type))) {\n        arr = [...specificationsColumns, ...VirtualTableHead];\n        // 找到slot 等于 fictitious 将title改为规格名称\n        this.formValidate.header.map((item) => {\n          if (item.slot === 'fictitious') {\n            item.title = this.formValidate.virtual_type == 1 ? '添加卡密/网盘' : '选择优惠券';\n          }\n        });\n      } else if (this.formValidate.virtual_type == 3) {\n        arr = [...specificationsColumns, ...VirtualTableHead2];\n      } else {\n        arr = [...specificationsColumns, ...GoodsTableHead];\n      }\n      this.$set(this.formValidate, 'header', arr);\n      this.tableKey += 1;\n      this.columnsInstalM = arr;\n    },\n    /*\n     * 生成属性\n     * @param {Array} data 规格数据\n     * */\n    generateAttr(data, val) {\n      this.generateHeader(data);\n      const combinations = this.generateCombinations(data);\n      console.log('规格组合总数：' + combinations.length);\n      const virtualType = this.formValidate.virtual_type;\n      // 如果combinations数量超过 500，则分批次生成属性\n      let rows = [];\n      if (combinations.length > 500) {\n        const batchSize = Math.ceil(combinations.length / 500);\n        for (let i = 0; i < combinations.length; i += batchSize) {\n          setTimeout((e) => {\n            let d = this.generateAttrBatch(data, combinations.slice(i, i + batchSize), val);\n            rows = [...rows, ...d];\n            this.manyFormValidate = [...this.oneFormBatch, ...rows];\n          }, 0);\n        }\n      } else {\n        rows = this.generateAttrBatch(data, combinations, val);\n        this.manyFormValidate = [...this.oneFormBatch, ...rows];\n      }\n    },\n    // 生成属性批次\n    generateAttrBatch(data, combinations, val) {\n      const existingItems = this.manyFormValidate.slice(1); // 排除第一项默认数据\n\n      const rows = combinations.map((combination) => {\n        const row = {\n          attr_arr: combination,\n          detail: {},\n          title: '',\n          key: '',\n          price: 0,\n          pic: '',\n          ot_price: 0,\n          cost: 0,\n          stock: 0,\n          is_show: 1,\n          is_default_select: 0,\n          unique: '',\n          weight: '',\n          volume: '',\n          brokerage: 0,\n          brokerage_two: 0,\n          vip_price: 0,\n          vip_proportion: 0,\n        };\n\n        // 设置虚拟类型相关属性\n        if (this.formValidate.virtual_type === 1) {\n          row.virtual_list = [];\n          row.disk_info = '';\n        } else if (this.formValidate.virtual_type === 2) {\n          row.coupon_id = 0;\n          row.coupon_name = '';\n        }\n\n        // 处理规格属性\n        data.forEach((item, i) => {\n          const value = combination[i];\n          row[item.value] = value;\n          row.title = item.value;\n          row.key = item.value;\n          row.detail[item.value] = value;\n\n          // 查找匹配的现有规格项\n          const matchedItem = existingItems.find((item) => item.attr_arr && arraysEqual(item.attr_arr, combination));\n\n          if (matchedItem) {\n            Object.assign(row, {\n              price: matchedItem.price,\n              cost: matchedItem.cost,\n              ot_price: matchedItem.ot_price,\n              stock: matchedItem.stock,\n              pic: matchedItem.pic,\n              unique: matchedItem.unique || '',\n              weight: matchedItem.weight || '',\n              volume: matchedItem.volume || '',\n              is_show: matchedItem.is_show || 1,\n              is_default_select: matchedItem.is_default_select || 0,\n              volume: matchedItem.volume || 0,\n              bar_code_number: matchedItem.bar_code_number || 0,\n              is_virtual: matchedItem.is_virtual,\n              brokerage: matchedItem.brokerage,\n              brokerage_two: matchedItem.brokerage_two,\n              vip_price: matchedItem.vip_price,\n              vip_proportion: matchedItem.vip_proportion,\n            });\n\n            if (this.formValidate.virtual_type === 1) {\n              row.virtual_list = matchedItem.virtual_list;\n              row.disk_info = matchedItem.disk_info;\n            } else if (this.formValidate.virtual_type === 2 && matchedItem.coupon_id) {\n              row.coupon_id = matchedItem.coupon_id;\n              row.coupon_name = matchedItem.coupon_name;\n            }\n          } else if (item.add_pic && combination.includes(val)) {\n            const picItem = item.detail.find((e) => combination.includes(e.value));\n            if (picItem) row.pic = picItem.pic;\n          }\n        });\n        return row;\n      });\n      return rows;\n    },\n    // 切换默认选中规格\n    changeDefaultSelect(e, index) {\n      // 一个开启 其他关闭\n      this.manyFormValidate.map((item, i) => {\n        if (i !== index) {\n          item.is_default_select = 0;\n        }\n      });\n      if (e) this.manyFormValidate[index].is_show = 1;\n    },\n    // 改变是否显示\n    changeDefaultShow(index) {\n      // 如果默认选中开启 则不可隐藏\n      if (this.manyFormValidate[index].is_default_select === 1) {\n        this.manyFormValidate[index].is_show = 1;\n        this.$message.error('默认规格不可隐藏');\n      }\n    },\n    // 生成规格组合\n    generateCombinations(arr, prefix = []) {\n      if (arr.length === 0) {\n        return [prefix];\n      }\n      const [first, ...rest] = arr;\n      return first.detail.flatMap((detail) => this.generateCombinations(rest, [...prefix, detail.value]));\n    },\n    // 添加属性\n    createAttr(num, idx) {\n      if (num) {\n        // 判断是否存在同样熟悉\n        var isExist = this.attrs[idx].detail.some((item) => item.value === num);\n        if (isExist) {\n          this.$message.error('规格值已存在');\n          return;\n        }\n        this.attrs[idx].detail.push({ value: num, pic: '' });\n        if (this.manyFormValidate.length) {\n          this.addOneAttr(this.attrs[idx].value, num);\n        } else {\n          this.generateAttr(this.attrs);\n        }\n\n        this.$refs.specStock.$refs['popoverRef_' + idx][0].doClose(); //关闭的\n        this.clearAttr();\n        setTimeout(() => {\n          if (this.$refs.specStock.$refs['popoverRef_' + idx]) {\n            //重点是以下两句\n            this.$refs.specStock.$refs['popoverRef_' + idx][0].doShow(); //打开的\n            //重点是以上两句\n          }\n        }, 20);\n      } else {\n        this.$refs.specStock.$refs['popoverRef_' + idx][0].doClose(); //关闭的\n      }\n    },\n    handleShowPop(index) {\n      this.$refs.specStock.$refs['inputRef_' + index][0].focus();\n    },\n    // 商品分类；\n    goodsCategory() {\n      cascaderListApi(1)\n        .then((res) => {\n          this.treeSelect = res.data;\n        })\n        .catch((res) => {\n          this.$message.error(res.msg);\n        });\n    },\n    // 改变规格\n    changeSpec() {\n      this.formValidate.is_sub = [];\n      let id = this.$route.params.id;\n      if (id) {\n        checkActivityApi(id)\n          .then((res) => {})\n          .catch((res) => {\n            this.formValidate.spec_type = this.spec_type;\n            this.$message.error(res.msg);\n          });\n      }\n    },\n    // 详情\n    getInfo() {\n      this.spinShow = true;\n      productInfoApi(this.$route.params.id)\n        .then(async (res) => {\n          let data = res.data.productInfo;\n          this.infoData(data);\n          this.spinShow = false;\n        })\n        .catch((res) => {\n          this.spinShow = false;\n          this.$message.error(res.msg);\n        });\n    },\n    handleRemove(i) {\n      this.images.splice(i, 1);\n      this.formValidate.slider_image.splice(i, 1);\n      this.oneFormValidate[0].pic = this.formValidate.slider_image[0];\n    },\n    // 关闭图片上传模态框\n    changeCancel(msg) {\n      this.modalPic = false;\n    },\n    // 点击商品图\n    modalPicTap(tit, picTit = '', index = 0) {\n      this.modalPic = true;\n      this.isChoice = tit === 'dan' ? '单选' : '多选';\n      this.picTit = picTit;\n      this.tableIndex = index;\n    },\n    // 获取单张图片信息\n    getPic(pc) {\n      switch (this.picTit) {\n        case 'danFrom':\n          this.formValidate.image = pc.att_dir;\n          if (!this.$route.params.id) {\n            if (this.formValidate.spec_type === 0) {\n              this.oneFormValidate[0].pic = pc.att_dir;\n            } else {\n              this.manyFormValidate.map((item) => {\n                item.pic = pc.att_dir;\n              });\n              this.oneFormBatch[0].pic = pc.att_dir;\n            }\n          }\n          break;\n        case 'danTable':\n          this.oneFormValidate[this.tableIndex].pic = pc.att_dir;\n          break;\n        case 'duopi':\n          this.oneFormBatch[this.tableIndex].pic = pc.att_dir;\n          break;\n        case 'recommend_image':\n          this.formValidate.recommend_image = pc.att_dir;\n          break;\n        default:\n          if (this.manyFormValidate.length) this.manyFormValidate[this.tableIndex].pic = pc.att_dir;\n      }\n      this.modalPic = false;\n    },\n    deleteRow(index) {\n      this.formValidate.params_list.splice(index, 1);\n    },\n    // 获取多张图信息\n    getPicD(pc) {\n      this.images = pc;\n      this.images.map((item) => {\n        this.formValidate.slider_image.push(item.att_dir);\n        this.formValidate.slider_image = this.formValidate.slider_image.splice(0, 10);\n      });\n      this.oneFormValidate[0].pic = this.formValidate.slider_image[0];\n      this.modalPic = false;\n    },\n    // 提交\n    handleSubmit(name) {\n      this.$refs[name].validate((valid) => {\n        if (valid) {\n          this.formValidate.type = this.type;\n          let arr = this.formValidate.spec_type === 0 ? this.oneFormValidate : this.manyFormValidate;\n          let item = JSON.parse(JSON.stringify(arr));\n          if (this.formValidate.spec_type === 1) {\n            if (item.length < 2) return this.$message.warning('商品规格-规格数量最少1个');\n            // 删除第一项\n            item.shift();\n          }\n          for (let i = 0; i < item.length; i++) {\n            if (item[i].stock > 1000000) {\n              return this.$message.error('规格库存-库存超出系统范围(1000000)');\n            }\n          }\n          if (this.formValidate.is_sub[0] === 1) {\n            for (let i = 0; i < item.length; i++) {\n              if (item[i].brokerage === null || item[i].brokerage_two === null) {\n                return this.$message.error('营销设置- 一二级返佣不能为空');\n              }\n            }\n          } else {\n            for (let i = 0; i < item.length; i++) {\n              if (item[i].vip_price === null) {\n                return this.$message.error('营销设置-会员价不能为空');\n              }\n            }\n          }\n          if (this.formValidate.is_sub.length === 2) {\n            for (let i = 0; i < item.length; i++) {\n              if (item[i].brokerage === null || item[i].brokerage_two === null || item[i].vip_price === null) {\n                return this.$message.error('营销设置- 一二级返佣和会员价不能为空');\n              }\n            }\n          }\n          if (this.formValidate.freight == 3 && !this.formValidate.temp_id) {\n            return this.$message.warning('商品信息-运费模板不能为空');\n          }\n          let activeIds = [];\n          this.dataLabel.forEach((item) => {\n            activeIds.push(item.id);\n          });\n          this.formValidate.label_id = activeIds;\n          if (this.openSubimit) return;\n          this.openSubimit = true;\n          this.formValidate.description = formatRichText(this.content);\n          if (this.formValidate.spec_type === 0) {\n            this.formValidate.attrs = item;\n            this.formValidate.header = [];\n            this.formValidate.items = [];\n            this.formValidate.is_copy = 0;\n          } else {\n            this.formValidate.items = this.attrs;\n            this.formValidate.attrs = item;\n            this.formValidate.is_copy = 1;\n          }\n          productAddApi(this.formValidate)\n            .then(async (res) => {\n              this.openSubimit = false;\n              this.$message.success(res.msg);\n              if (this.$route.params.id === '0') {\n                cacheDelete().catch((err) => {\n                  this.$message.error(err.msg);\n                });\n              }\n              setTimeout(() => {\n                this.openSubimit = false;\n                this.$router.push({ path: this.$routeProStr + '/product/product_list' });\n              }, 500);\n            })\n            .catch((res) => {\n              setTimeout((e) => {\n                this.openSubimit = false;\n              }, 1000);\n              this.$message.error(res.msg);\n            });\n        } else {\n          if (!this.formValidate.store_name) {\n            return this.$message.warning('商品信息-商品名称不能为空');\n          } else if (!this.formValidate.cate_id.length) {\n            return this.$message.warning('商品信息-商品分类不能为空');\n          } else if (!this.formValidate.unit_name) {\n            return this.$message.warning('商品信息-商品单位不能为空');\n          } else if (!this.formValidate.slider_image.length) {\n            return this.$message.warning('商品信息-商品轮播图不能为空');\n          } else if (!this.formValidate.logistics.length && !this.formValidate.virtual_type) {\n            return this.$message.warning('物流设置-至少选择一种物流方式');\n          } else if (!this.formValidate.temp_id && this.formValidate.freight == 3) {\n            return this.$message.warning('商品信息-运费模板不能为空');\n          }\n        }\n      });\n    },\n    changeTemplate(msg) {\n      this.template = msg;\n    },\n    // 表单验证\n    validate(prop, status, error) {\n      if (status === false) {\n        this.$message.warning(error);\n      }\n    },\n    // 移动\n    handleDragStart(e, item) {\n      this.dragging = item;\n    },\n    handleDragEnd(e, item) {\n      this.dragging = null;\n    },\n    handleDragOver(e) {\n      e.dataTransfer.dropEffect = 'move';\n    },\n    handleDragEnter(e, item) {\n      e.dataTransfer.effectAllowed = 'move';\n      if (item === this.dragging) {\n        return;\n      }\n      const newItems = [...this.formValidate.slider_image];\n      const src = newItems.indexOf(this.dragging);\n      const dst = newItems.indexOf(item);\n      newItems.splice(dst, 0, ...newItems.splice(src, 1));\n      this.formValidate.slider_image = newItems;\n    },\n    //对象数组去重；\n    unique(arr) {\n      const res = new Map();\n      return arr.filter((arr) => !res.has(arr.product_id) && res.set(arr.product_id, 1));\n    },\n    // 商品id\n    getProductId(data) {\n      this.goods_modals = false;\n      this.formValidate.recommend_list = this.unique(this.formValidate.recommend_list.concat(data));\n    },\n    // 选择推荐商品\n    changeGoods() {\n      this.goods_modals = true;\n      this.$refs.goodslist.getList();\n      this.$refs.goodslist.goodsCategory();\n    },\n    // 选择用户标签\n    activeData(dataLabel) {\n      this.labelShow = false;\n      this.dataLabel = dataLabel;\n    },\n    // 选择商品标签\n    activeLabel(data) {\n      this.tagShow = false;\n      this.formValidate.label_list = Array.from(new Set(data));\n    },\n    // 标签弹窗关闭\n    labelClose() {\n      this.labelShow = false;\n      this.tagShow = false;\n    },\n    // 删除用户标签\n    closeLabel(label) {\n      let index = this.dataLabel.indexOf(this.dataLabel.filter((d) => d.id == label.id)[0]);\n      this.dataLabel.splice(index, 1);\n    },\n    // 打开选择用户标签\n    openLabel(row) {\n      this.labelShow = true;\n    },\n    handleRemoveRecommend(i) {\n      this.formValidate.recommend_list.splice(i, 1);\n    },\n    // 打开的营销活动标签\n    watchActivity() {\n      let marketing = [];\n      // 使用对象映射优化权限判断逻辑\n      const permissionMap = {\n        默认: true,\n        秒杀: 'seckill',\n        砍价: 'bargain',\n        拼团: 'combination',\n      };\n      this.formValidate.activity.forEach((el) => {\n        if (permissionMap[el] === true || (permissionMap[el] && checkArray(permissionMap[el]))) {\n          marketing.push(el);\n        }\n      });\n      this.formValidate.activity = marketing;\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n@use './productAdd.scss' as *;\n</style>\n"]}]}