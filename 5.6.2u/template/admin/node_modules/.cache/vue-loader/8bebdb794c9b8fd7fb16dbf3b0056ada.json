{"remainingRequest":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\marketing\\storeIntegralOrder\\components\\tableFrom.vue?vue&type=style&index=0&id=561479d0&lang=scss&scoped=true","dependencies":[{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\marketing\\storeIntegralOrder\\components\\tableFrom.vue","mtime":1731313973082},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\css-loader\\index.js","mtime":1753254259822},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1753254262918},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1753254258547},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1753254255270},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1753254260598}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50YWJfZGF0YSA6OnYtZGVlcCAuaXZ1LWZvcm0taXRlbS1jb250ZW50IHsKICBtYXJnaW4tbGVmdDogMCAhaW1wb3J0YW50Owp9Ci50YWJsZV9ib3ggOjp2LWRlZXAgLml2dS1kaXZpZGVyLWhvcml6b250YWwgewogIG1hcmdpbi10b3A6IDBweCAhaW1wb3J0YW50Owp9Ci50YWJsZV9ib3ggOjp2LWRlZXAgLml2dS1mb3JtLWl0ZW0gewogIG1hcmdpbi1ib3R0b206IDE1cHggIWltcG9ydGFudDsKfQoudGFiZm9ybSB7CiAgbWFyZ2luLWJvdHRvbTogMTBweDsKfQouUmVmcmVzaCB7CiAgZm9udC1zaXplOiAxMnB4OwogIGNvbG9yOiB2YXIoLS1wcmV2LWNvbG9yLXByaW1hcnkpOwogIGN1cnNvcjogcG9pbnRlcjsKfQoub3JkZXItd3JhcHBlciB7CiAgbWFyZ2luLXRvcDogMTBweDsKICBwYWRkaW5nOiAxMHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7CiAgLnRpdGxlIHsKICAgIGZvbnQtc2l6ZTogMTZweDsKICB9CiAgLm9yZGVyLWJveCB7CiAgICBtYXJnaW4tdG9wOiAxMHB4OwogICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDsKICAgIC5pdGVtIHsKICAgICAgZGlzcGxheTogZmxleDsKICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7CiAgICAgICY6bGFzdC1jaGlsZCB7CiAgICAgICAgYm9yZGVyLWJvdHRvbTogMDsKICAgICAgfQogICAgICAubGFiZWwgewogICAgICAgIHdpZHRoOiAxMDBweDsKICAgICAgICBwYWRkaW5nOiAxMHB4IDAgMTBweCAxMHB4OwogICAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNkZGQ7CiAgICAgIH0KICAgICAgLmNvbiB7CiAgICAgICAgZmxleDogMTsKICAgICAgICBwYWRkaW5nOiAxMHB4IDAgMTBweCAxMHB4OwogICAgICB9CiAgICB9CiAgfQp9Ci5tYW51YWwtbW9kYWwgewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQouZGYgewogIGRpc3BsYXk6IGZsZXg7Cn0K"},{"version":3,"sources":["tableFrom.vue"],"names":[],"mappings":";AAuaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tableFrom.vue","sourceRoot":"src/pages/marketing/storeIntegralOrder/components","sourcesContent":["<template>\n  <div class=\"table_box\">\n    <el-form\n      ref=\"orderData\"\n      :model=\"orderData\"\n      :label-width=\"labelWidth\"\n      :label-position=\"labelPosition\"\n      @submit.native.prevent\n      inline\n    >\n      <el-form-item label=\"订单状态：\">\n        <el-select\n          placeholder=\"请选择\"\n          clearable\n          v-model=\"orderData.is_show\"\n          @change=\"selectChange2\"\n          class=\"form_content_width\"\n        >\n          <el-option value=\"\" label=\"全部\"></el-option>\n          <el-option value=\"1\" label=\"未发货\"></el-option>\n          <el-option value=\"2\" label=\"待收货\"></el-option>\n          <el-option value=\"3\" label=\"交易完成\"></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"创建时间：\">\n        <el-date-picker\n          clearable\n          v-model=\"timeVal\"\n          type=\"daterange\"\n          :editable=\"false\"\n          @change=\"onchangeTime\"\n          format=\"yyyy/MM/dd\"\n          value-format=\"yyyy/MM/dd\"\n          start-placeholder=\"开始日期\"\n          end-placeholder=\"结束日期\"\n          :picker-options=\"pickerOptions\"\n          style=\"width: 250px\"\n        ></el-date-picker>\n      </el-form-item>\n      <el-form-item label=\"订单搜索：\" prop=\"real_name\" label-for=\"real_name\">\n        <el-input clearable v-model=\"orderData.real_name\" placeholder=\"请输入\" class=\"form_content_width\">\n          <el-select v-model=\"orderData.field_key\" slot=\"prepend\" style=\"width: 100px\">\n            <el-option value=\"all\" label=\"全部\"></el-option>\n            <el-option value=\"order_id\" label=\"订单号\"></el-option>\n            <el-option value=\"uid\" label=\"UID\"></el-option>\n            <el-option value=\"real_name\" label=\"用户姓名\"></el-option>\n            <el-option value=\"user_phone\" label=\"用户电话\"></el-option>\n            <el-option value=\"store_name\" label=\"商品名称(模糊)\"></el-option>\n          </el-select>\n        </el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" v-db-click @click=\"orderSearch\">查询</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations } from 'vuex';\nimport { integralGetOrdes } from '@/api/marketing';\n\nimport {\n  putWrite,\n  storeOrderApi,\n  handBatchDelivery,\n  otherBatchDelivery,\n  exportExpressList,\n  storeIntegralOrder,\n} from '@/api/order';\nimport autoSend from '../handle/autoSend';\nimport queueList from '../handle/queueList';\nimport Setting from '@/setting';\nimport QueueList from '../handle/queueList.vue';\nexport default {\n  name: 'table_from',\n  components: {\n    autoSend,\n    queueList,\n  },\n  props: ['formSelection', 'autoDisabled', 'isAll'],\n  data() {\n    return {\n      currentTab: '',\n      // 搜索条件\n      orderData: {\n        status: '',\n        data: '',\n        real_name: '',\n        field_key: 'all',\n        pay_type: '',\n      },\n      modalTitleSs: '',\n      statusType: '',\n      time: '',\n      value2: [],\n      isDelIdList: [],\n      modals2: false,\n      timeVal: [],\n      payList: [\n        { label: '全部', val: '' },\n        { label: '微信支付', val: '1' },\n        { label: '支付宝支付', val: '4' },\n        { label: '余额支付', val: '2' },\n        { label: '线下支付', val: '3' },\n      ],\n      manualModal: false,\n      uploadAction: `${Setting.apiBaseURL}/file/upload/1`,\n      uploadHeaders: {},\n      file: '',\n      autoModal: false,\n      isShow: false,\n      recordModal: false,\n      sendOutValue: '',\n      exportList: [\n        {\n          name: '1',\n          label: '导出发货单',\n        },\n        {\n          name: '0',\n          label: '导出订单',\n        },\n      ],\n      exportListOn: 0,\n      fileList: [],\n      orderChartType: {},\n      pickerOptions: this.$timeOptions,\n    };\n  },\n  computed: {\n    ...mapState('media', ['isMobile']),\n    ...mapState('integralOrder', ['isDels', 'delIdList']),\n    labelWidth() {\n      return this.isMobile ? undefined : '80px';\n    },\n    labelPosition() {\n      return this.isMobile ? 'top' : 'right';\n    },\n    today() {\n      const end = new Date();\n      const start = new Date();\n      var datetimeStart = start.getFullYear() + '/' + (start.getMonth() + 1) + '/' + start.getDate();\n      var datetimeEnd = end.getFullYear() + '/' + (end.getMonth() + 1) + '/' + end.getDate();\n      return [datetimeStart, datetimeEnd];\n    },\n  },\n  watch: {\n    $route() {\n      if (this.$route.fullPath === this.$routeProStr + '/order/list?status=1') {\n        this.getPath();\n      }\n    },\n  },\n  created() {\n    // this.timeVal = this.today;\n    // this.orderData.data = this.timeVal ? this.timeVal.join('-') : '';\n    if (this.$route.fullPath === this.$routeProStr + '/order/list?status=1') {\n      this.getPath();\n    }\n    // this.getToken();\n    this.$parent.$emit('add');\n    let searchData = {\n      status: this.orderData.status,\n      product_id: this.$route.query.product_id || '',\n    };\n    this.integralGetOrdes(searchData);\n  },\n  methods: {\n    ...mapMutations('integralOrder', ['getOrderStatus', 'getOrderType', 'getOrderTime', 'getOrderNum', 'getfieldKey']),\n    integralGetOrdes(searchData) {\n      integralGetOrdes(searchData)\n        .then((res) => {\n          this.$set(this, 'orderChartType', res.data);\n        })\n        .catch((err) => {});\n    },\n    getPath() {\n      this.orderData.status = this.$route.query.status.toString();\n      this.getOrderStatus(this.orderData.status);\n      this.$emit('getList', 1);\n      this.$emit('order-data', this.orderData);\n    },\n    // 导出\n    // exports(value) {\n    //   this.exportListOn = this.exportList.findIndex(\n    //     (item) => item.name === value\n    //   );\n    //   let formValidate = this.orderData;\n    //   let data = {\n    //     status: formValidate.status,\n    //     data: formValidate.data,\n    //     real_name: formValidate.real_name,\n    //     type: value,\n    //   };\n    //   storeOrderApi(data)\n    //     .then((res) => {\n    //       location.href = res.data[0];\n    //     })\n    //     .catch((res) => {\n    //       this.$message.error(res.msg);\n    //     });\n    // },\n    // 数据导出；\n    async exports() {\n      let [th, filekey, data, fileName] = [[], [], [], ''];\n      let excelData = JSON.parse(JSON.stringify(this.orderData));\n      excelData.page = 1;\n      excelData.product_id = this.$route.query.product_id || '';\n      for (let i = 0; i < excelData.page + 1; i++) {\n        let lebData = await this.getExcelData(excelData);\n        if (!fileName) fileName = lebData.filename;\n        if (!filekey.length) {\n          filekey = lebData.filekey;\n        }\n        if (!th.length) th = lebData.header;\n        if (lebData.export.length) {\n          data = data.concat(lebData.export);\n          excelData.page++;\n        }\n      }\n      exportExcel(th, filekey, fileName, data);\n    },\n    getExcelData(excelData) {\n      return new Promise((resolve, reject) => {\n        storeIntegralOrder(excelData).then((res) => {\n          return resolve(res.data);\n        });\n      });\n    },\n    // 具体日期\n    onchangeTime(e) {\n      this.timeVal = e || [];\n      this.orderData.data = this.timeVal[0] ? (this.timeVal ? this.timeVal.join('-') : '') : '';\n      this.$store.dispatch('integralOrder/getOrderTabs', {\n        data: this.orderData.data,\n      });\n      this.getOrderTime(this.orderData.data);\n      this.$emit('getList', 1);\n      this.$emit('order-data', this.orderData);\n    },\n    // 选择时间\n    selectChange(tab) {\n      this.$store.dispatch('integralOrder/getOrderTabs', { data: tab });\n      this.orderData.data = tab;\n      this.getOrderTime(this.orderData.data);\n      this.timeVal = [];\n      this.$emit('getList');\n      this.$emit('order-data', this.orderData);\n    },\n    // 订单选择状态\n    selectChange2(tab) {\n      this.getOrderStatus(tab);\n      this.$emit('getList', 1);\n    },\n    userSearchs(type) {\n      this.getOrderType(type);\n      this.$emit('getList', 1);\n    },\n    // 时间状态\n    timeChange(time) {\n      this.getOrderTime(time);\n      this.$emit('getList');\n    },\n    // 订单号搜索\n    orderSearch() {\n      this.getOrderNum(this.orderData.real_name);\n      this.getfieldKey(this.orderData.field_key);\n      this.$emit('getList', 1);\n    },\n    // 点击订单类型\n    onClickTab() {\n      this.$emit('onChangeType', this.currentTab);\n    },\n    // 批量删除\n    delAll() {\n      if (this.delIdList.length === 0) {\n        this.$message.error('请先选择删除的订单！');\n      } else {\n        if (this.isDels) {\n          this.delIdList.filter((item) => {\n            this.isDelIdList.push(item.id);\n          });\n          let idss = {\n            ids: this.isDelIdList,\n            all: this.isAll,\n            where: this.orderData,\n          };\n          let delfromData = {\n            title: '删除订单',\n            url: `/order/dels`,\n            method: 'post',\n            ids: idss,\n          };\n          this.$modalSure(delfromData)\n            .then((res) => {\n              this.$message.success(res.msg);\n              this.tabList();\n            })\n            .catch((res) => {\n              this.$message.error(res.msg);\n            });\n        } else {\n          this.$message.error('您选择的的订单存在用户未删除的订单，无法删除用户未删除的订单！');\n        }\n      }\n    },\n    del(name) {\n      // this.orderInfo = ''\n      this.modals2 = false;\n      this.writeOffFrom.confirm = 0;\n      this.$refs[name].resetFields();\n    },\n    handleSubmit() {\n      this.$emit('on-submit', this.data);\n    },\n    // 刷新\n    Refresh() {\n      this.$emit('getList');\n    },\n    //\n    handleReset() {\n      this.$refs.form.resetFields();\n      this.$emit('on-reset');\n    },\n    // 上传头部token\n    // getToken() {\n    //   this.uploadHeaders[\"Authori-zation\"] =\n    //     \"Bearer \" + util.cookies.get(\"token\");\n    // },\n    // beforeUpload(file){\n    //     /* Boilerplate to set up FileReader */\n    // \tconst reader = new FileReader();\n    // \treader.onload = (e) => {\n    // \t\t/* Parse data */\n    // \t\tconst bstr = e.target.result;\n    // \t\tconst wb = XLSX.read(bstr, {type:'binary'});\n    // \t\t/* Get first worksheet */\n    // \t\tconst wsname = wb.SheetNames[0];\n    // \t\tconst ws = wb.Sheets[wsname];\n    // \t\t/* Convert array of arrays */\n    // \t\tconst data = XLSX.utils.sheet_to_json(ws, {header:1});\n    // \t\t/* Update state */\n    // \t\tthis.data5 = data;\n    //         this.cols5 = make_cols(ws['!ref']);\n    //         this.modal5 = true;\n    // \t};\n    // \treader.readAsBinaryString(file);\n    // },\n    // 上传成功\n    uploadSuccess(res, file, fileList) {\n      if (res.status === 200) {\n        this.$message.success(res.msg);\n        this.file = res.data.src;\n        this.fileList = fileList;\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    //移除文件\n    removeFile(file, fileList) {\n      this.file = '';\n      this.fileList = fileList;\n    },\n    // 手动批量发货-确定\n    manualModalOk() {\n      this.$refs.upload.clearFiles();\n      handBatchDelivery({\n        file: this.file,\n      })\n        .then((res) => {\n          this.$message.success(res.msg);\n          this.fileList = [];\n        })\n        .catch((err) => {\n          this.$message.error(err.msg);\n          this.fileList = [];\n        });\n    },\n    // 手动批量发货-取消\n    manualModalCancel() {\n      this.fileList = [];\n      this.$refs.upload.clearFiles();\n    },\n    // 自动批量发货-取消\n    autoModalOk() {\n      if (this.isAll == '全部' || this.formSelection.length) {\n        this.$refs.send.modals = true;\n        this.$refs.send.getList();\n        this.$refs.send.getDeliveryList();\n      } else {\n        this.$message.error('请选择本页订单');\n      }\n    },\n    // 自动批量发货-取消\n    autolModalCancel() {},\n    submitFail() {\n      otherBatchDelivery();\n    },\n    queuemModal() {\n      // this.$router.push({ path: 'queue/list' });\n      this.$refs.queue.modal = true;\n    },\n    onAuto() {\n      this.$refs.sends.modals = true;\n      this.$refs.sends.getList();\n      this.$refs.sends.getDeliveryList();\n    },\n    // 下载物流公司对照表\n    getExpressList() {\n      exportExpressList()\n        .then((res) => {\n          window.open(res.data[0]);\n        })\n        .catch((err) => {\n          this.$message.error(err.msg);\n        });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.tab_data ::v-deep .ivu-form-item-content {\n  margin-left: 0 !important;\n}\n.table_box ::v-deep .ivu-divider-horizontal {\n  margin-top: 0px !important;\n}\n.table_box ::v-deep .ivu-form-item {\n  margin-bottom: 15px !important;\n}\n.tabform {\n  margin-bottom: 10px;\n}\n.Refresh {\n  font-size: 12px;\n  color: var(--prev-color-primary);\n  cursor: pointer;\n}\n.order-wrapper {\n  margin-top: 10px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  .title {\n    font-size: 16px;\n  }\n  .order-box {\n    margin-top: 10px;\n    border: 1px solid #ddd;\n    .item {\n      display: flex;\n      align-items: center;\n      border-bottom: 1px solid #ddd;\n      &:last-child {\n        border-bottom: 0;\n      }\n      .label {\n        width: 100px;\n        padding: 10px 0 10px 10px;\n        border-right: 1px solid #ddd;\n      }\n      .con {\n        flex: 1;\n        padding: 10px 0 10px 10px;\n      }\n    }\n  }\n}\n.manual-modal {\n  display: flex;\n  align-items: center;\n}\n.df {\n  display: flex;\n}\n</style>\n"]}]}