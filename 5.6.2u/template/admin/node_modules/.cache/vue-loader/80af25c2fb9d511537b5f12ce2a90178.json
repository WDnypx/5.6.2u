{"remainingRequest":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\system\\codeGeneration\\components\\TableForm.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\system\\codeGeneration\\components\\TableForm.vue","mtime":1731313973102},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1753254258567},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1753254260598}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TableForm.vue"],"names":[],"mappings":";AAwfile":"TableForm.vue","sourceRoot":"src/pages/system/codeGeneration/components","sourcesContent":["<template>\n  <div class=\"main\">\n    <el-alert closable class=\"mb14\">\n      <template v-slot:title>crud生成说明</template>\n      <template>\n        <p>\n          1、字段配置中表存在生成的字段为表内列的信息,并且主键、伪删除字段不允许设置为列，主键默认展示在列表中，伪删除字段不允许展示\n        </p>\n        <p>2、在字段配置中新建表时，主键不需要增加列，会自动增加一行主键id</p>\n        <p>3、在字段配置中，表单类型为不生成时创建后不会生成对应的表单项</p>\n        <p>4、添加字段id、create_time、update_time、delete_time为不可用字段</p>\n      </template>\n    </el-alert>\n    <div class=\"df mb14\">\n      <el-button class=\"mr20\" type=\"primary\" v-db-click @click=\"addRow\">添加一行</el-button>\n      <el-checkbox class=\"mr10\" v-model=\"isCreate\" @change=\"addCreate\">添加与修改时间</el-checkbox>\n      <el-checkbox class=\"mr10\" v-model=\"isDelete\" @change=\"addDelete\">伪删除</el-checkbox>\n    </div>\n    <div>\n      <el-table\n        ref=\"selection\"\n        :data=\"tableField\"\n        empty-text=\"暂无数据\"\n        highlight-current-row\n        v-loading=\"loading\"\n        max-height=\"600\"\n        size=\"small\"\n      >\n        <el-table-column label=\"\" min-width=\"40\">\n          <template slot-scope=\"scope\">\n            <div class=\"drag\" v-if=\"!disabledInput(scope.$index)\">\n              <img class=\"handle\" src=\"@/assets/images/drag-icon.png\" alt=\"\" />\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"表单名\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <el-input\n              v-model=\"scope.row.table_name\"\n              :disabled=\"disabledInput(scope.$index) && scope.row.field == 'id'\"\n              @change=\"(e) => changeComment(e, scope.$index)\"\n            ></el-input>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"表单类型\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <el-select\n              clearable\n              v-model=\"scope.row.from_type\"\n              :disabled=\"disabledInput(scope.$index) && scope.row.field == 'id'\"\n              @change=\"(e) => fromTypeChange(e, scope.$index)\"\n            >\n              <el-option\n                v-for=\"item in fromTypeList\"\n                :value=\"item.value\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n              ></el-option>\n            </el-select>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"数据字典\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <div class=\"table-options\" v-if=\"['select', 'radio', 'checkbox'].includes(scope.row.from_type)\">\n              <el-select clearable v-model=\"scope.row.dictionary_id\">\n                <el-option\n                  v-for=\"item in dictionaryList\"\n                  :value=\"item.id\"\n                  :key=\"item.id\"\n                  :label=\"item.name\"\n                ></el-option>\n              </el-select>\n              <!-- <i class=\"el-icon-edit create\" v-db-click @click=\"eidtOptions(scope.$index)\" /> -->\n            </div>\n            <div v-else>--</div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"必填\" width=\"50\">\n          <template slot-scope=\"scope\">\n            <el-checkbox\n              v-model=\"scope.row.required\"\n              :disabled=\"disabledInput(scope.$index) && scope.row.field == 'id'\"\n            ></el-checkbox>\n          </template>\n        </el-table-column>\n\n        <el-table-column label=\"查询方式\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <el-select\n              clearable\n              v-model=\"scope.row.search\"\n              :disabled=\"disabledInput(scope.$index)\"\n              slot=\"prepend\"\n              placeholder=\"请选择\"\n            >\n              <el-option\n                :label=\"item.label\"\n                :value=\"item.value\"\n                v-for=\"item in searchType\"\n                :key=\"item.value\"\n              ></el-option>\n            </el-select>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"列表\" width=\"50\">\n          <template slot-scope=\"scope\">\n            <el-checkbox\n              v-model=\"scope.row.is_table\"\n              :disabled=\"disabledInput(scope.$index) && scope.row.field == 'id'\"\n            ></el-checkbox>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"字段名称\" min-width=\"120\">\n          <template slot-scope=\"scope\">\n            <el-input\n              :disabled=\"disabledInput(scope.$index)\"\n              v-model=\"scope.row.field\"\n              @blur=\"changeField(scope.$index)\"\n            ></el-input>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"字段类型\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <el-select\n              v-model=\"scope.row.field_type\"\n              :disabled=\"disabledInput(scope.$index)\"\n              clearable\n              @change=\"changeItemField($event, scope.$index)\"\n            >\n              <el-option v-for=\"item in columnTypeList\" :value=\"item\" :key=\"item\" :label=\"item\"></el-option>\n            </el-select>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"长度\" min-width=\"80\">\n          <template slot-scope=\"scope\">\n            <el-input\n              v-if=\"scope.row.field_type !== 'enum'\"\n              v-model=\"scope.row.limit\"\n              :disabled=\"disabledInput(scope.$index)\"\n            ></el-input>\n            <el-select\n              v-else\n              v-model=\"scope.row.limit\"\n              multiple\n              filterable\n              allow-create\n              clearable\n              default-first-option\n              placeholder=\"请添加\"\n            />\n          </template>\n        </el-table-column>\n        <el-table-column label=\"默认值\" min-width=\"180\">\n          <template slot-scope=\"scope\">\n            <el-input\n              class=\"input-with-select\"\n              v-model=\"scope.row.default\"\n              :disabled=\"disabledInput(scope.$index) || scope.row.default_type !== '1'\"\n            >\n              <el-select\n                class=\"code-table-sel\"\n                clearable\n                v-model=\"scope.row.default_type\"\n                slot=\"prepend\"\n                :disabled=\"disabledInput(scope.$index)\"\n                placeholder=\"请选择\"\n                style=\"width: 100px\"\n              >\n                <el-option\n                  :label=\"item.label\"\n                  :value=\"item.value\"\n                  v-for=\"item in defaultType\"\n                  :key=\"item.value\"\n                ></el-option>\n              </el-select>\n            </el-input>\n            <!-- <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"> </el-option> -->\n          </template>\n        </el-table-column>\n        <el-table-column label=\"字段描述\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <el-input v-model=\"scope.row.comment\" :disabled=\"disabledInput(scope.$index)\"></el-input>\n          </template>\n        </el-table-column>\n\n        <el-table-column label=\"关联表\" min-width=\"130\">\n          <template slot-scope=\"scope\">\n            <el-cascader\n              clearable\n              filterable\n              v-model=\"scope.row.hasOne\"\n              :disabled=\"disabledInput(scope.$index) && scope.row.field == 'id'\"\n              :options=\"associationTable\"\n              :props=\"props\"\n            ></el-cascader>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"索引\" width=\"50\">\n          <template slot-scope=\"scope\">\n            <el-checkbox\n              v-model=\"scope.row.index\"\n              :disabled=\"disabledInput(scope.$index) && scope.row.field == 'id'\"\n            ></el-checkbox>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" fixed=\"right\" width=\"100\">\n          <template slot-scope=\"scope\">\n            <a v-if=\"!scope.row.primaryKey && !disabledInput(scope.$index)\" v-db-click @click=\"del(row, scope.$index)\"\n              >删除</a\n            >\n            <span v-else>--</span>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <el-dialog\n      :visible.sync=\"optionsModal\"\n      title=\"字典配置\"\n      @close=\"beforeChange\"\n      :close-on-click-modal=\"false\"\n      width=\"600px\"\n    >\n      <div class=\"options-list\">\n        <el-form ref=\"form\" :inline=\"true\" label-width=\"80px\">\n          <div class=\"mb10\">\n            <el-form-item label=\"字典名称：\">\n              <el-input class=\"mr10\" v-model=\"dictionaryName\" placeholder=\"字典名称\" style=\"width: 310px\" />\n            </el-form-item>\n          </div>\n          <div class=\"item\" v-for=\"(item, index) in optionsList\" :key=\"index\">\n            <el-form-item label=\"数据名称：\">\n              <el-input class=\"mr10\" v-model=\"item.label\" placeholder=\"label\" style=\"width: 150px\" />\n            </el-form-item>\n            <el-form-item label=\"数据值：\">\n              <el-input class=\"mr10\" v-model=\"item.value\" placeholder=\"value\" style=\"width: 150px\" />\n            </el-form-item>\n            <div style=\"display: inline-block; margin-bottom: 14px\">\n              <i\n                v-if=\"index == optionsList.length - 1\"\n                class=\"el-icon-circle-plus-outline add\"\n                title=\"新增\"\n                v-db-click\n                @click=\"addOneOptions\"\n              />\n              <i\n                v-if=\"index > 0\"\n                class=\"el-icon-remove-outline delete\"\n                title=\"删除\"\n                v-db-click\n                @click=\"delOneOptions(index)\"\n              />\n            </div>\n          </div>\n        </el-form>\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button v-db-click @click=\"optionsModal = false\">取 消</el-button>\n        <el-button type=\"primary\" v-db-click @click=\"addOptions\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {\n  crudMenus,\n  crudColumnType,\n  crudDataDictionary,\n  crudFilePath,\n  crudAssociationTable,\n  crudAssociationTableName,\n  crudDataDictionaryList,\n  saveCrudDataDictionaryList,\n  getDataDictionaryList,\n} from '@/api/systemCodeGeneration';\nimport Sortable from 'sortablejs';\nexport default {\n  name: '',\n  props: {\n    foundation: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n    },\n    id: {\n      type: String | Number,\n    },\n  },\n  data() {\n    return {\n      foundationRules: {},\n      menusList: [],\n      columnTypeList: [],\n      optionsModal: false,\n      isCreate: false,\n      isDelete: false,\n      fromTypeList: [],\n      loading: false,\n      tableField: [],\n      optionsList: [],\n      index: 0,\n      deleteField: [],\n      searchType: [],\n      dictionaryName: '', // 字典名称\n      defaultType: [], // 默认类型\n      associationTable: [], // 关联表\n      dictionaryList: [],\n      props: {\n        lazy: true,\n        options: this.associationTable,\n        checkStrictly: true,\n        lazyLoad(node, resolve) {\n          const { value } = node;\n          if (value) {\n            crudAssociationTableName(value).then((res) => {\n              resolve(res.data);\n            });\n          }\n          // 通过调用resolve将子节点数据返回，通知组件数据加载完成\n        },\n      },\n    };\n  },\n  created() {\n    this.getCrudMenus();\n  },\n  mounted() {\n    this.$nextTick((e) => {\n      this.setSort();\n    });\n  },\n  methods: {\n    beforeChange() {\n      this.getCrudDataDictionary();\n    },\n    setSort() {\n      // ref一定跟table上面的ref一致\n      const el = this.$refs.selection.$el.querySelectorAll('.el-table__body-wrapper > table > tbody')[0];\n      this.sortable = Sortable.create(el, {\n        ghostClass: 'sortable-ghost',\n        handle: '.handle',\n        setData: function (dataTransfer) {\n          dataTransfer.setData('Text', '');\n        },\n        // 监听拖拽事件结束时触发\n        onEnd: (evt) => {\n          if (evt.newIndex === 0) {\n            setTimeout(() => {\n              this.elChangeExForArray(evt.oldIndex, evt.newIndex, this.tableField, true);\n            }, 100);\n          } else {\n            this.elChangeExForArray(evt.oldIndex, evt.newIndex, this.tableField);\n          }\n        },\n      });\n    },\n    elChangeExForArray(index1, index2, array, init) {\n      const arr = array;\n      const temp = array[index1];\n      const tempt = array[index2];\n      if (init) {\n        arr[index2] = tempt;\n        arr[index1] = temp;\n      } else {\n        arr[index1] = tempt;\n        arr[index2] = temp;\n      }\n      this.tableField = [];\n      this.$nextTick((e) => {\n        this.tableField = arr;\n      });\n    },\n    disabledInput(index) {\n      let fieldInfo = this.tableField[index];\n      let res = ['addTimestamps', 'addSoftDelete'].includes(this.tableField[index].field_type);\n      if (fieldInfo.primaryKey) {\n        res = true;\n      } else if (fieldInfo.field === 'delete_time' && fieldInfo.field_type === 'timestamp') {\n        res = true;\n      } else if (\n        (fieldInfo.field === 'create_time' || fieldInfo.field === 'update_time') &&\n        fieldInfo.field_type === 'timestamp'\n      ) {\n        res = true;\n      }\n      return res;\n    },\n    initfield() {\n      this.tableField = [];\n    },\n    changeItemField(e, i) {\n      if (e === 'addSoftDelete') {\n        this.$set(this.tableField[i], 'comment', '伪删除');\n      }\n      if (e === 'addTimestamps') {\n        this.$set(this.tableField[i], 'comment', '添加和修改时间');\n      }\n    },\n    eidtOptions(i) {\n      this.index = i;\n      this.dictionaryId = this.tableField[i].dictionary_id || 0;\n      this.optionsModal = true;\n      if (this.dictionaryId) {\n        crudDataDictionaryList(this.dictionaryId).then((res) => {\n          this.dictionaryName = res.data.name;\n          this.optionsList = res.data.value || [{ label: '', value: '' }];\n        });\n      } else {\n        this.optionsList = [{ label: '', value: '' }];\n      }\n    },\n    addOptions() {\n      // this.$set(this.tableField[this.index], 'options', this.optionsList);\n      let d = {\n        name: this.dictionaryName,\n        value: this.optionsList,\n      };\n      saveCrudDataDictionaryList(this.dictionaryId, d).then((res) => {\n        this.optionsModal = false;\n        this.getCrudDataDictionary();\n      });\n    },\n    changeRadio(status) {\n      this.tableField = [];\n      if (status) {\n        this.addRow();\n      }\n    },\n    initTableName() {\n      this.tableField = [];\n    },\n    addRow() {\n      for (let i = 0; i < this.tableField.length; i++) {\n        const el = this.tableField[i];\n        if ((!el.field || !el.field_type) && !['addTimestamps', 'addSoftDelete'].includes(el.field_type)) {\n          return this.$message.warning('请先完善上一条数据');\n        }\n        if (\n          el.is_table &&\n          !el.table_name &&\n          !Number(el.primaryKey) &&\n          !['addTimestamps', 'addSoftDelete'].includes(el.field_type)\n        ) {\n          return this.$message.warning('请输入列表名');\n        }\n      }\n      let i = this.tableField.length;\n      let spliceIndex = 0;\n      this.tableField.map((e) => {\n        if (e.field === 'create_time' || e.field === 'update_time') {\n          spliceIndex++;\n        }\n        if (e.field === 'delete_time') {\n          spliceIndex++;\n        }\n      });\n      i = this.tableField.length - spliceIndex;\n      this.tableField.splice(i, 0, {\n        field: '',\n        field_type: '',\n        default: '',\n        default_type: '-1',\n        comment: '',\n        required: false,\n        is_table: true,\n        table_name: '',\n        limit: '',\n        primaryKey: 0,\n        from_type: '',\n        search: '',\n        dictionary_id: 0,\n        hasOne: [],\n        index: false,\n      });\n      // this.tableField.push();\n    },\n    addCreate(status) {\n      if (status) {\n        let haveCre = this.tableField.findIndex((e) => e.field === 'create_time');\n        let haveUp = this.tableField.findIndex((e) => e.field === 'update_time');\n        if (haveCre > 0 || haveUp > 0) {\n          this.$nextTick((e) => {\n            this.isCreate = false;\n          });\n          return this.$message.warning('已存在 create_time或update_time');\n        }\n        let data = [\n          {\n            field: 'create_time',\n            field_type: 'timestamp',\n            default: '',\n            default_type: '-1',\n            comment: '添加时间',\n            required: false,\n            is_table: false,\n            table_name: '添加时间',\n            limit: '',\n            primaryKey: 0,\n            from_type: '',\n            search: '',\n            dictionary_id: 0,\n            hasOne: [],\n            index: false,\n          },\n          {\n            field: 'update_time',\n            field_type: 'timestamp',\n            default_type: '-1',\n            default: '',\n            comment: '修改时间',\n            required: false,\n            is_table: false,\n            table_name: '修改时间',\n            limit: '',\n            primaryKey: 0,\n            from_type: '',\n            search: '',\n            dictionary_id: 0,\n            hasOne: [],\n            index: false,\n          },\n        ];\n        this.tableField = [...this.tableField, ...data];\n      } else {\n        let i = this.tableField.findIndex((e) => e.field === 'create_time');\n        this.tableField.splice(i, 2);\n      }\n    },\n    addDelete(status) {\n      if (status) {\n        let haveDel = this.tableField.findIndex((e) => e.field === 'delete_time');\n        if (haveDel > 0) {\n          this.isDelete = false;\n          return this.$message.warning('已存在 delete_time');\n        }\n        let data = [\n          {\n            field: 'delete_time',\n            field_type: 'timestamp',\n            default: '',\n            default_type: '-1',\n            comment: '伪删除',\n            required: false,\n            is_table: false,\n            table_name: '伪删除',\n            limit: '',\n            primaryKey: 0,\n            from_type: '',\n            search: '',\n            dictionary_id: 0,\n            hasOne: [],\n            index: false,\n          },\n        ];\n        this.tableField = [...this.tableField, ...data];\n      } else {\n        let i = this.tableField.findIndex((e) => e.field === 'delete_time');\n        this.tableField.splice(i, 1);\n      }\n    },\n    changeField(index) {\n      if (this.tableField[index].field) {\n        for (let i = 0; i < this.tableField.length; i++) {\n          const e = this.tableField[i];\n          if (['id', 'create_time', 'update_time', 'delete_time'].includes(this.tableField[index].field)) {\n            this.$message.warning('列表中已存在该字段名称');\n            this.tableField[index].field = '';\n            return;\n          }\n        }\n      }\n    },\n    changeComment(e, index) {\n      if (!this.tableField[index].comment) this.tableField[index].comment = e;\n    },\n    fromTypeChange(e, index) {\n      this.fromTypeList.map((item) => {\n        if (item.value == e) {\n          this.tableField[index].limit = item.limit || '';\n          this.tableField[index].field_type = item.field_type || '';\n        }\n      });\n      // if (!this.tableField[index].comment) this.tableField[index].comment = e;\n    },\n    getCrudMenus() {\n      crudMenus().then((res) => {\n        this.menusList = res.data;\n      });\n      crudColumnType().then((res) => {\n        this.columnTypeList = res.data.types;\n        this.fromTypeList = res.data.form;\n        this.defaultType = res.data.default_type;\n        this.searchType = res.data.search_type;\n      });\n      this.getCrudDataDictionary();\n      crudAssociationTable().then((res) => {\n        this.associationTable = res.data;\n      });\n    },\n    getCrudDataDictionary() {\n      getDataDictionaryList().then((res) => {\n        this.dictionaryList = res.data.list;\n      });\n    },\n    getCrudAssociationTableName(name) {\n      crudAssociationTableName(name).then((res) => {\n        console.log(res);\n      });\n    },\n    del(row, index) {\n      this.tableField.splice(index, 1);\n      if (this.id) {\n        this.deleteField.push(row.field);\n      }\n    },\n    addOneOptions() {\n      this.optionsList.push({\n        label: '',\n        value: '',\n      });\n    },\n    delOneOptions(i) {\n      this.optionsList.splice(i, 1);\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.form-width {\n  width: 500px;\n}\n.item {\n  display: flex;\n  margin-bottom: 10px;\n  .row {\n    width: 140px;\n    margin-right: 10px;\n  }\n}\n.table-options {\n  display: flex;\n  align-items: center;\n  .create {\n    font-size: 16px;\n    margin-left: 10px;\n    cursor: pointer;\n  }\n}\n.options-list {\n  .item {\n    display: flex;\n    align-items: center;\n    .add {\n      font-size: 18px;\n      cursor: pointer;\n      margin-right: 5px;\n      // color: #2d8cf0;\n    }\n    .delete {\n      font-size: 18px;\n      cursor: pointer;\n      color: #fb0144;\n    }\n  }\n}\n::v-deep .el-input-group__prepend .el-select {\n  width: 86px;\n}\n.drag {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  .handle {\n    width: 9px;\n    height: 15px;\n  }\n}\n.code-table-sel ::v-deep .el-input__inner {\n  border: none;\n  border-color: transparent;\n  background-color: transparent;\n}\n::v-deep .el-input-group__prepend div.el-select .el-input__inner {\n  height: 28px !important;\n  line-height: 28px !important;\n}\n::v-deep .el-input-group__prepend div.el-select .el-input--small .el-input__icon {\n  line-height: 28px;\n}\n</style>\n"]}]}