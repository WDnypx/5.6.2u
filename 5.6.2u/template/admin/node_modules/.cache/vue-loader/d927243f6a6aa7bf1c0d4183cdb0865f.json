{"remainingRequest":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\marketing\\storeSeckill\\create.vue?vue&type=template&id=d2b919c0&scoped=true","dependencies":[{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\pages\\marketing\\storeSeckill\\create.vue","mtime":1740118394129},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1753254256661},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1753254258567},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1753254263096},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1753254260598}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}