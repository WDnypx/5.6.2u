{"remainingRequest":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\components\\linkaddress\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\src\\components\\linkaddress\\index.vue","mtime":1743470816353},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1753254256661},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1753254258567},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1753254255279},{"path":"D:\\pc\\zm\\昆明阔翔科技有限公司\\源码\\CRMEB-BZ v5.6.2(20250630)\\template\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1753254260598}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IHBhZ2VDYXRlZ29yeSwgcGFnZUxpbmssIHNhdmVMaW5rIH0gZnJvbSAnQC9hcGkvZGl5JzsKaW1wb3J0IHsgY2FzY2FkZXJMaXN0QXBpLCBjaGFuZ2VMaXN0QXBpIH0gZnJvbSAnQC9hcGkvcHJvZHVjdCc7CmltcG9ydCB7CiAgc2Vja2lsbExpc3RBcGksCiAgY29tYmluYXRpb25MaXN0QXBpLAogIGJhcmdhaW5MaXN0QXBpLAogIGludGVncmFsUHJvZHVjdExpc3RBcGksCiAgcHJlc2VsbExpc3RBcGksCn0gZnJvbSAnQC9hcGkvbWFya2V0aW5nJzsKaW1wb3J0IHsgbG90dGVyeUxpc3QgfSBmcm9tICdAL2FwaS9sb3R0ZXJ5JzsKaW1wb3J0IHsgY21zTGlzdEFwaSB9IGZyb20gJ0AvYXBpL2Ntcyc7CmltcG9ydCB7IGxpbmtMaXN0QXBpIH0gZnJvbSAnQC9hcGkvc2V0dGluZyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnbGlua2FkZHJlc3MnLAogIHByb3BzOiB7CiAgICBmcm9tVHlwZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnLAogICAgfSwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtb2RhbHM6IGZhbHNlLAogICAgICBjYXRlZ29yeURhdGE6IFtdLAogICAgICBjdXJyZW5UeXBlOiAnbGluaycsCiAgICAgIHByb3BzOiB7CiAgICAgICAgbGFiZWw6ICduYW1lJywKICAgICAgICBjaGlsZHJlbjogJ2NoaWxkcmVuJywKICAgICAgfSwKICAgICAgdGVtcGxhdGVSYWRpbzogMCwKICAgICAgY29sdW1uczogWwogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAnSUQnLAogICAgICAgICAga2V5OiAnaWQnLAogICAgICAgICAgd2lkdGg6IDYwLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGl0bGU6ICfpobXpnaLlkI3np7AnLAogICAgICAgICAga2V5OiAnbmFtZScsCiAgICAgICAgICB3aWR0aDogMTUwLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGl0bGU6ICfpobXpnaLpk77mjqUnLAogICAgICAgICAga2V5OiAndXJsJywKICAgICAgICB9LAogICAgICBdLAogICAgICBjb2x1bW5zNzogWwogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAnSUQnLAogICAgICAgICAga2V5OiAnaWQnLAogICAgICAgICAgd2lkdGg6IDYwLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGl0bGU6ICfliIbnsbvlkI3np7AnLAogICAgICAgICAga2V5OiAnY2F0ZV9uYW1lJywKICAgICAgICAgIHRyZWU6IHRydWUsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogJ+WIhuexu+WbvuaghycsCiAgICAgICAgICBzbG90OiAncGljJywKICAgICAgICB9LAogICAgICBdLAogICAgICBjb2x1bW5zODogWwogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAnSUQnLAogICAgICAgICAga2V5OiAnaWQnLAogICAgICAgICAgd2lkdGg6IDYwLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGl0bGU6ICfllYblk4Hlm77niYcnLAogICAgICAgICAgc2xvdDogJ2ltYWdlJywKICAgICAgICAgIHdpZHRoOiA5MCwKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAn5ZWG5ZOB5ZCN56ewJywKICAgICAgICAgIGtleTogJ3N0b3JlX25hbWUnLAogICAgICAgIH0sCiAgICAgIF0sCiAgICAgIGJhcmdhaW46IFsKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogJ0lEJywKICAgICAgICAgIGtleTogJ2lkJywKICAgICAgICAgIHdpZHRoOiA2MCwKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAn5ZWG5ZOB5Zu+54mHJywKICAgICAgICAgIHNsb3Q6ICdpbWFnZScsCiAgICAgICAgICB3aWR0aDogOTAsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogJ+WVhuWTgeWQjeensCcsCiAgICAgICAgICBrZXk6ICd0aXRsZScsCiAgICAgICAgfSwKICAgICAgXSwKICAgICAgbmV3czogWwogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAnSUQnLAogICAgICAgICAga2V5OiAnaWQnLAogICAgICAgICAgd2lkdGg6IDYwLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdGl0bGU6ICfmlofnq6Dlm77niYcnLAogICAgICAgICAgc2xvdDogJ2ltYWdlX2lucHV0JywKICAgICAgICAgIHdpZHRoOiA5MCwKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHRpdGxlOiAn5paH56ug5ZCN56ewJywKICAgICAgICAgIGtleTogJ3RpdGxlJywKICAgICAgICB9LAogICAgICBdLAogICAgICBsb3R0ZXJ5OiBbCiAgICAgICAgewogICAgICAgICAgdGl0bGU6ICdJRCcsCiAgICAgICAgICBrZXk6ICdpZCcsCiAgICAgICAgICB3aWR0aDogNjAsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0aXRsZTogJ+WQjeensCcsCiAgICAgICAgICBrZXk6ICduYW1lJywKICAgICAgICB9LAogICAgICBdLAogICAgICBmb3JtVmFsaWRhdGU6IHsKICAgICAgICBwYWdlOiAxLAogICAgICAgIGxpbWl0OiAxNSwKICAgICAgICBjYXRlX2lkOiAnJywKICAgICAgICBzdG9yZV9uYW1lOiAnJywKICAgICAgfSwKICAgICAgdG90YWw6IDAsCiAgICAgIGJhc2ljc0xpc3Q6IFtdLAogICAgICB1c2VyTGlzdDogW10sCiAgICAgIGRpc3RyaWJ1dGlvbkxpc3Q6IFtdLAogICAgICBjb3Vwb246IFtdLAogICAgICBsdWNrRHJhdzogW10sCiAgICAgIGludGVncmFsOiBbXSwKICAgICAgY3VycmVuSWQ6ICcnLAogICAgICBjdXJyZW5Vcmw6ICcnLAogICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgdGFibGVMaXN0OiBbXSwKICAgICAgcHJlc2VudElkOiAwLAogICAgICBjYXRlZ29yeUlkOiAnJywgLy/lt6bkvqfliIbnsbtpZAogICAgICB0cmVlU2VsZWN0OiBbXSwKICAgICAgY3VzdG9tZGF0ZTogewogICAgICAgIHVybDogJycsCiAgICAgICAgYXBwaWQ6ICcnLAogICAgICAgIG1wVXJsOiAnJywKICAgICAgICBzdGF0dXM6IDIsCiAgICAgIH0sCiAgICAgIGN1c3RvbU51bTogMSwKICAgICAgcnVsZVZhbGlkYXRlOiB7CiAgICAgICAgbmFtZTogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXpk77mjqXlkI3np7AnLCB0cmlnZ2VyOiAnYmx1cicgfV0sCiAgICAgICAgdXJsOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpei3s+i9rOi3r+W+hCcsIHRyaWdnZXI6ICdibHVyJyB9XSwKICAgICAgICBhcHBpZDogW3sgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaVBUFBJRCcsIHRyaWdnZXI6ICdibHVyJyB9XSwKICAgICAgfSwKICAgICAgdHJlZUlkOiAwLAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7fSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRTb3J0KCk7CiAgICB0aGlzLmdvb2RzQ2F0ZWdvcnkoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFRlbXBsYXRlUm93KHJvdykgewogICAgICB0aGlzLnByZXNlbnRJZCA9IHJvdy5pZDsKICAgICAgdGhpcy5jdXJyZW5VcmwgPSByb3cudXJsOwogICAgfSwKICAgIC8vIOWIoOmZpAogICAgZGVsTGluayhyb3csIHRpdCwgbnVtKSB7CiAgICAgIGxldCBkZWxmcm9tRGF0YSA9IHsKICAgICAgICB0aXRsZTogdGl0LAogICAgICAgIG51bTogbnVtLAogICAgICAgIHVybDogYGRpeS9kZWxfbGluay8ke3Jvdy5pZH1gLAogICAgICAgIG1ldGhvZDogJ0RFTEVURScsCiAgICAgICAgaWRzOiAnJywKICAgICAgfTsKICAgICAgdGhpcy4kbW9kYWxTdXJlKGRlbGZyb21EYXRhKQogICAgICAgIC50aGVuKChyZXMpID0+IHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2VzcyhyZXMubXNnKTsKICAgICAgICAgIHRoaXMudGFibGVMaXN0LnNwbGljZShudW0sIDEpOwogICAgICAgICAgaWYgKCF0aGlzLnRhYmxlTGlzdC5sZW5ndGgpIHsKICAgICAgICAgICAgdGhpcy5jdXN0b21OdW0gPSAyOwogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKChyZXMpID0+IHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgICAgfSk7CiAgICB9LAogICAgY3VzdG9tTGluaygpIHsKICAgICAgdGhpcy5jdXN0b21OdW0gPSAyOwogICAgfSwKICAgIGN1c3RvbUxpc3QoKSB7CiAgICAgIHRoaXMuY3VzdG9tTnVtID0gMTsKICAgIH0sCiAgICBnZXRDdXN0b21MaXN0KCkgewogICAgICBwYWdlTGluayh0aGlzLmNhdGVnb3J5SWQpCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgaWYgKCFyZXMuZGF0YS5saXN0Lmxlbmd0aCkgewogICAgICAgICAgICB0aGlzLmN1c3RvbU51bSA9IDI7CiAgICAgICAgICB9CiAgICAgICAgICB0aGlzLnRhYmxlTGlzdCA9IHJlcy5kYXRhLmxpc3Q7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKGVycikgPT4gewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihlcnIubXNnKTsKICAgICAgICB9KTsKICAgIH0sCiAgICBnZXRMb3R0ZXJ5TGlzdCgpIHt9LAogICAgaGFuZGxlU3VibWl0KG5hbWUpIHsKICAgICAgdGhpcy4kcmVmc1tuYW1lXS52YWxpZGF0ZSgodmFsaWQpID0+IHsKICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgIGxldCB1cmwgPSB0aGlzLmN1c3RvbWRhdGUudXJsOwogICAgICAgICAgaWYgKHRoaXMuY3VzdG9tZGF0ZS5zdGF0dXMgPT0gMSkgewogICAgICAgICAgICB1cmwgPSB0aGlzLmN1c3RvbWRhdGUudXJsOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdXJsID0gdGhpcy5jdXN0b21kYXRlLm1wVXJsICsgJ0BBUFBJRD0nICsgdGhpcy5jdXN0b21kYXRlLmFwcGlkOwogICAgICAgICAgfQogICAgICAgICAgdGhpcy4kZW1pdCgnbGlua1VybCcsIHVybCk7CiAgICAgICAgICB0aGlzLm1vZGFscyA9IGZhbHNlOwogICAgICAgICAgdGhpcy5yZXNldCgpOwogICAgICAgICAgLy8gc2F2ZUxpbmsodGhpcy5jdXN0b21kYXRlLHRoaXMuY2F0ZWdvcnlJZCkudGhlbihyZXM9PnsKICAgICAgICAgIC8vIAl0aGlzLmdldEN1c3RvbUxpc3QoKTsKICAgICAgICAgIC8vIAl0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgICAvLyAJdGhpcy4kZW1pdCgibGlua1VybCIsdGhpcy5jdXN0b21kYXRlLnVybCk7CiAgICAgICAgICAvLyAJdGhpcy5tb2RhbHMgPSBmYWxzZQogICAgICAgICAgLy8gCXRoaXMucmVzZXQoKTsKICAgICAgICAgIC8vIH0pLmNhdGNoKGVycj0+ewogICAgICAgICAgLy8gCXRoaXMuJG1lc3NhZ2UuZXJyb3IoZXJyLm1zZyk7CiAgICAgICAgICAvLyB9KQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfor7floavlhpnkv6Hmga8nKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZVJlc2V0KG5hbWUpIHsKICAgICAgdGhpcy4kcmVmc1tuYW1lXS5yZXNldEZpZWxkcygpOwogICAgfSwKICAgIC8vIOWVhuWTgeWIhuexu++8mwogICAgZ29vZHNDYXRlZ29yeSgpIHsKICAgICAgY2FzY2FkZXJMaXN0QXBpKDEpCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgdGhpcy50cmVlU2VsZWN0ID0gcmVzLmRhdGE7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKHJlcykgPT4gewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICB9KTsKICAgIH0sCiAgICAvLyDooajmoLzmkJzntKIKICAgIHVzZXJTZWFyY2hzKCkgewogICAgICB0aGlzLmZvcm1WYWxpZGF0ZS5wYWdlID0gMTsKICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICB9LAogICAgcmVzZXQoKSB7CiAgICAgIHRoaXMuY3VycmVuVXJsID0gJyc7CiAgICAgIHRoaXMucHJlc2VudElkID0gMDsKICAgICAgdGhpcy5jdXJyZW5JZCA9ICcnOwogICAgICAvLyB0aGlzLmN1c3RvbWRhdGUubmFtZT0iIjsKICAgICAgdGhpcy5jdXN0b21kYXRlLnVybCA9ICcnOwogICAgfSwKICAgIGdldFVybChpdGVtKSB7CiAgICAgIHRoaXMuY3VycmVuSWQgPSBpdGVtLmlkOwogICAgICB0aGlzLmN1cnJlblVybCA9IGl0ZW0udXJsOwogICAgfSwKICAgIGdldFNvcnQoKSB7CiAgICAgIHBhZ2VDYXRlZ29yeSgpCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgcmVzLmRhdGFbMF0uY2hpbGRyZW5bMF0uc2VsZWN0ZWQgPSB0cnVlOwogICAgICAgICAgdGhpcy5jYXRlZ29yeURhdGEgPSByZXMuZGF0YTsKICAgICAgICAgIGlmICh0aGlzLmZyb21UeXBlID09PSAnZGl5UGFnZScpIHsKICAgICAgICAgICAgdGhpcy5oYW5kbGVDaGVja0NoYW5nZShyZXMuZGF0YVswXS5jaGlsZHJlblsyXSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLmhhbmRsZUNoZWNrQ2hhbmdlKHJlcy5kYXRhWzBdLmNoaWxkcmVuWzBdLmNoaWxkcmVuWzBdKTsKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKGVyci5tc2cpOwogICAgICAgIH0pOwogICAgfSwKICAgIGdldExpc3QoKSB7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgIHRoaXMuZm9ybVZhbGlkYXRlLmxpbWl0ID0gMTU7CiAgICAgIGlmICh0aGlzLmN1cnJlblR5cGUgPT0gJ3Byb2R1Y3QnKSB7CiAgICAgICAgY2hhbmdlTGlzdEFwaSh0aGlzLmZvcm1WYWxpZGF0ZSkKICAgICAgICAgIC50aGVuKGFzeW5jIChyZXMpID0+IHsKICAgICAgICAgICAgbGV0IGRhdGEgPSByZXMuZGF0YTsKICAgICAgICAgICAgZGF0YS5saXN0LmZvckVhY2goKGUpID0+IHsKICAgICAgICAgICAgICBlLnVybCA9IGAvcGFnZXMvZ29vZHNfZGV0YWlscy9pbmRleD9pZD0ke2UuaWR9YDsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHRoaXMudGFibGVMaXN0ID0gZGF0YS5saXN0OwogICAgICAgICAgICB0aGlzLnRvdGFsID0gcmVzLmRhdGEuY291bnQ7CiAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgfSkKICAgICAgICAgIC5jYXRjaCgocmVzKSA9PiB7CiAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgICAgfSk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5jdXJyZW5UeXBlID09ICdzZWNraWxsJykgewogICAgICAgIHNlY2tpbGxMaXN0QXBpKHRoaXMuZm9ybVZhbGlkYXRlKQogICAgICAgICAgLnRoZW4oYXN5bmMgKHJlcykgPT4gewogICAgICAgICAgICBsZXQgZGF0YSA9IHJlcy5kYXRhOwogICAgICAgICAgICBkYXRhLmxpc3QuZm9yRWFjaCgoZSkgPT4gewogICAgICAgICAgICAgIGUudXJsID0gYC9wYWdlcy9hY3Rpdml0eS9nb29kc19zZWNraWxsX2RldGFpbHMvaW5kZXg/aWQ9JHtlLmlkfSZzdGF0dXM9MWA7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICB0aGlzLnRhYmxlTGlzdCA9IGRhdGEubGlzdDsKICAgICAgICAgICAgdGhpcy50b3RhbCA9IHJlcy5kYXRhLmNvdW50OwogICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIH0pCiAgICAgICAgICAuY2F0Y2goKHJlcykgPT4gewogICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICAgIH0pOwogICAgICB9IGVsc2UgaWYgKHRoaXMuY3VycmVuVHlwZSA9PSAnYWR2YW5jZScpIHsKICAgICAgICBwcmVzZWxsTGlzdEFwaSh0aGlzLmZvcm1WYWxpZGF0ZSkKICAgICAgICAgIC50aGVuKGFzeW5jIChyZXMpID0+IHsKICAgICAgICAgICAgbGV0IGRhdGEgPSByZXMuZGF0YTsKICAgICAgICAgICAgZGF0YS5saXN0LmZvckVhY2goKGUpID0+IHsKICAgICAgICAgICAgICBlLnVybCA9IGAvcGFnZXMvYWN0aXZpdHkvcHJlc2VsbC9pbmRleD9pZD0ke2UuaWR9JnN0YXR1cz0xYDsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHRoaXMudGFibGVMaXN0ID0gZGF0YS5saXN0OwogICAgICAgICAgICB0aGlzLnRvdGFsID0gcmVzLmRhdGEuY291bnQ7CiAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgfSkKICAgICAgICAgIC5jYXRjaCgocmVzKSA9PiB7CiAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tc2cpOwogICAgICAgICAgICBhZHZhbmNlOwogICAgICAgICAgfSk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5jdXJyZW5UeXBlID09ICdiYXJnYWluJykgewogICAgICAgIGJhcmdhaW5MaXN0QXBpKHRoaXMuZm9ybVZhbGlkYXRlKQogICAgICAgICAgLnRoZW4oYXN5bmMgKHJlcykgPT4gewogICAgICAgICAgICBsZXQgZGF0YSA9IHJlcy5kYXRhOwogICAgICAgICAgICBkYXRhLmxpc3QuZm9yRWFjaCgoZSkgPT4gewogICAgICAgICAgICAgIGUudXJsID0gYC9wYWdlcy9hY3Rpdml0eS9nb29kc19iYXJnYWluX2RldGFpbHMvaW5kZXg/aWQ9JHtlLmlkfWA7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICB0aGlzLnRhYmxlTGlzdCA9IGRhdGEubGlzdDsKICAgICAgICAgICAgdGhpcy50b3RhbCA9IHJlcy5kYXRhLmNvdW50OwogICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIH0pCiAgICAgICAgICAuY2F0Y2goKHJlcykgPT4gewogICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICAgIH0pOwogICAgICB9IGVsc2UgaWYgKHRoaXMuY3VycmVuVHlwZSA9PSAnY29tYmluYXRpb24nKSB7CiAgICAgICAgY29tYmluYXRpb25MaXN0QXBpKHRoaXMuZm9ybVZhbGlkYXRlKQogICAgICAgICAgLnRoZW4oYXN5bmMgKHJlcykgPT4gewogICAgICAgICAgICBsZXQgZGF0YSA9IHJlcy5kYXRhOwogICAgICAgICAgICBkYXRhLmxpc3QuZm9yRWFjaCgoZSkgPT4gewogICAgICAgICAgICAgIGUudXJsID0gYC9wYWdlcy9hY3Rpdml0eS9nb29kc19jb21iaW5hdGlvbl9kZXRhaWxzL2luZGV4P2lkPSR7ZS5pZH1gOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgdGhpcy50YWJsZUxpc3QgPSBkYXRhLmxpc3Q7CiAgICAgICAgICAgIHRoaXMudG90YWwgPSByZXMuZGF0YS5jb3VudDsKICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICB9KQogICAgICAgICAgLmNhdGNoKChyZXMpID0+IHsKICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgICAgICB9KTsKICAgICAgfSBlbHNlIGlmICh0aGlzLmN1cnJlblR5cGUgPT0gJ25ld3MnKSB7CiAgICAgICAgY21zTGlzdEFwaSh0aGlzLmZvcm1WYWxpZGF0ZSkKICAgICAgICAgIC50aGVuKGFzeW5jIChyZXMpID0+IHsKICAgICAgICAgICAgbGV0IGRhdGEgPSByZXMuZGF0YTsKICAgICAgICAgICAgZGF0YS5saXN0LmZvckVhY2goKGUpID0+IHsKICAgICAgICAgICAgICBlLnVybCA9IGAvcGFnZXMvZXh0ZW5zaW9uL25ld3NfZGV0YWlscy9pbmRleD9pZD0ke2UuaWR9YDsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHRoaXMudGFibGVMaXN0ID0gZGF0YS5saXN0OwogICAgICAgICAgICB0aGlzLnRvdGFsID0gZGF0YS5jb3VudDsKICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICB9KQogICAgICAgICAgLmNhdGNoKChyZXMpID0+IHsKICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgICAgICB9KTsKICAgICAgfSBlbHNlIGlmICh0aGlzLmN1cnJlblR5cGUgPT0gJ2xvdHRlcnlfbGlzdCcpIHsKICAgICAgICB0aGlzLmZvcm1WYWxpZGF0ZSA9IHsKICAgICAgICAgIHBhZ2U6IDEsCiAgICAgICAgICBsaW1pdDogMTUsCiAgICAgICAgICBmYWN0b3I6IDEsCiAgICAgICAgfTsKICAgICAgICBsb3R0ZXJ5TGlzdCh0aGlzLmZvcm1WYWxpZGF0ZSkKICAgICAgICAgIC50aGVuKGFzeW5jIChyZXMpID0+IHsKICAgICAgICAgICAgbGV0IGRhdGEgPSByZXMuZGF0YTsKICAgICAgICAgICAgZGF0YS5saXN0LmZvckVhY2goKGUpID0+IHsKICAgICAgICAgICAgICBlLnVybCA9IGAvcGFnZXMvZ29vZHMvbG90dGVyeS9ncmlkcy9pbmRleD90eXBlPTEmbG90dGVyeV9pZD0ke2UuaWR9YDsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHRoaXMudGFibGVMaXN0ID0gZGF0YS5saXN0OwogICAgICAgICAgICB0aGlzLnRvdGFsID0gZGF0YS5jb3VudDsKICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICB9KQogICAgICAgICAgLmNhdGNoKChyZXMpID0+IHsKICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzLm1zZyk7CiAgICAgICAgICB9KTsKICAgICAgfSBlbHNlIGlmICh0aGlzLmN1cnJlblR5cGUgPT0gJ2ludGVncmFsJykgewogICAgICAgIGludGVncmFsUHJvZHVjdExpc3RBcGkodGhpcy5mb3JtVmFsaWRhdGUpCiAgICAgICAgICAudGhlbihhc3luYyAocmVzKSA9PiB7CiAgICAgICAgICAgIGxldCBkYXRhID0gcmVzLmRhdGE7CiAgICAgICAgICAgIGRhdGEubGlzdC5mb3JFYWNoKChlKSA9PiB7CiAgICAgICAgICAgICAgZS51cmwgPSBgL3BhZ2VzL3BvaW50c19tYWxsL2ludGVncmFsX2dvb2RzX2RldGFpbHM/aWQ9JHtlLmlkfWA7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICB0aGlzLnRhYmxlTGlzdCA9IGRhdGEubGlzdDsKICAgICAgICAgICAgdGhpcy50b3RhbCA9IHJlcy5kYXRhLmNvdW50OwogICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIH0pCiAgICAgICAgICAuY2F0Y2goKHJlcykgPT4gewogICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMubXNnKTsKICAgICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgaGFuZGxlQ2hlY2tDaGFuZ2UoZGF0YSkgewogICAgICB0aGlzLnJlc2V0KCk7CiAgICAgIGxldCBpZCA9ICcnOwogICAgICB0aGlzLnRyZWVJZCA9IGRhdGEuaWQ7CiAgICAgIGlmIChkYXRhLnBpZCkgewogICAgICAgIGlkID0gZGF0YS5pZDsKICAgICAgICB0aGlzLmNhdGVnb3J5SWQgPSBkYXRhLmlkOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICB0aGlzLmN1cnJlblR5cGUgPSBkYXRhLnR5cGU7CiAgICAgIGlmICgKICAgICAgICB0aGlzLmN1cnJlblR5cGUgPT0gJ3Byb2R1Y3QnIHx8CiAgICAgICAgdGhpcy5jdXJyZW5UeXBlID09ICdzZWNraWxsJyB8fAogICAgICAgIHRoaXMuY3VycmVuVHlwZSA9PSAnYmFyZ2FpbicgfHwKICAgICAgICB0aGlzLmN1cnJlblR5cGUgPT0gJ2NvbWJpbmF0aW9uJyB8fAogICAgICAgIHRoaXMuY3VycmVuVHlwZSA9PSAnbmV3cycgfHwKICAgICAgICB0aGlzLmN1cnJlblR5cGUgPT0gJ2FkdmFuY2UnIHx8CiAgICAgICAgdGhpcy5jdXJyZW5UeXBlID09ICdpbnRlZ3JhbCcgfHwKICAgICAgICB0aGlzLmN1cnJlblR5cGUgPT0gJ2xvdHRlcnlfbGlzdCcKICAgICAgKSB7CiAgICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5jdXJyZW5UeXBlID09ICdjdXN0b20nKSB7CiAgICAgICAgdGhpcy5nZXRDdXN0b21MaXN0KCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5mb3JtVmFsaWRhdGUgPSB7CiAgICAgICAgICBpZCwKICAgICAgICAgIHBhZ2U6IDEsCiAgICAgICAgfTsKICAgICAgICBsaW5rTGlzdEFwaSh0aGlzLmZvcm1WYWxpZGF0ZSkKICAgICAgICAgIC50aGVuKChyZXMpID0+IHsKICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgIGxldCBkYXRhID0gcmVzLmRhdGEubGlzdDsKICAgICAgICAgICAgdGhpcy50b3RhbCA9IHJlcy5kYXRhLmNvdW50OwogICAgICAgICAgICBpZiAodGhpcy5jdXJyZW5UeXBlID09ICdzcGVjaWFsJykgewogICAgICAgICAgICAgIGxldCBsaXN0ID0gW107CiAgICAgICAgICAgICAgZGF0YS5mb3JFYWNoKChlKSA9PiB7CiAgICAgICAgICAgICAgICBlLnVybCA9IGAvcGFnZXMvYW5uZXgvc3BlY2lhbC9pbmRleD9pZD0ke2UuaWR9Jm5hbWU9JHtlLm5hbWV9YDsKICAgICAgICAgICAgICAgIGlmIChlLmlzX2RpeSkgewogICAgICAgICAgICAgICAgICBsaXN0LnB1c2goZSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgdGhpcy50YWJsZUxpc3QgPSBsaXN0OwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHRoaXMudGFibGVMaXN0ID0gZGF0YTsKICAgICAgICAgICAgfQogICAgICAgICAgICAvLyBpZiAodGhpcy5jdXJyZW5UeXBlID09ICdtYXJrZXRpbmdfbGluaycgfHwgdGhpcy5jdXJyZW5UeXBlID09ICdsaW5rJykgewogICAgICAgICAgICAvLyAgIGxldCBiYXNpY3NMaXN0ID0gW107CiAgICAgICAgICAgIC8vICAgbGV0IGRpc3RyaWJ1dGlvbkxpc3QgPSBbXTsKICAgICAgICAgICAgLy8gICBsZXQgdXNlckxpc3QgPSBbXTsKICAgICAgICAgICAgLy8gICBsZXQgaW50ZWdyYWwgPSBbXTsKICAgICAgICAgICAgLy8gICBsZXQgbHVja0RyYXcgPSBbXTsKICAgICAgICAgICAgLy8gICBsZXQgY291cG9uID0gW107CiAgICAgICAgICAgIC8vICAgZGF0YS5mb3JFYWNoKChlKSA9PiB7CiAgICAgICAgICAgIC8vICAgICBpZiAoZS50eXBlID09IDEpIHsKICAgICAgICAgICAgLy8gICAgICAgYmFzaWNzTGlzdC5wdXNoKGUpOwogICAgICAgICAgICAvLyAgICAgfSBlbHNlIGlmIChlLnR5cGUgPT0gMikgewogICAgICAgICAgICAvLyAgICAgICBkaXN0cmlidXRpb25MaXN0LnB1c2goZSk7CiAgICAgICAgICAgIC8vICAgICB9IGVsc2UgaWYgKGUudHlwZSA9PSAzKSB7CiAgICAgICAgICAgIC8vICAgICAgIHVzZXJMaXN0LnB1c2goZSk7CiAgICAgICAgICAgIC8vICAgICB9IGVsc2UgaWYgKGUudHlwZSA9PSA0KSB7CiAgICAgICAgICAgIC8vICAgICAgIGludGVncmFsLnB1c2goZSk7CiAgICAgICAgICAgIC8vICAgICB9IGVsc2UgaWYgKGUudHlwZSA9PSA1KSB7CiAgICAgICAgICAgIC8vICAgICAgIGx1Y2tEcmF3LnB1c2goZSk7CiAgICAgICAgICAgIC8vICAgICB9IGVsc2UgewogICAgICAgICAgICAvLyAgICAgICBjb3Vwb24ucHVzaChlKTsKICAgICAgICAgICAgLy8gICAgIH0KICAgICAgICAgICAgLy8gICB9KTsKICAgICAgICAgICAgLy8gICB0aGlzLmJhc2ljc0xpc3QgPSBiYXNpY3NMaXN0OwogICAgICAgICAgICAvLyAgIHRoaXMuZGlzdHJpYnV0aW9uTGlzdCA9IGRpc3RyaWJ1dGlvbkxpc3Q7CiAgICAgICAgICAgIC8vICAgdGhpcy51c2VyTGlzdCA9IHVzZXJMaXN0OwogICAgICAgICAgICAvLyAgIHRoaXMuY291cG9uID0gY291cG9uOwogICAgICAgICAgICAvLyAgIHRoaXMubHVja0RyYXcgPSBsdWNrRHJhdzsKICAgICAgICAgICAgLy8gICB0aGlzLmludGVncmFsID0gaW50ZWdyYWw7CiAgICAgICAgICAgIC8vIH0gZWxzZSBpZiAodGhpcy5jdXJyZW5UeXBlID09ICdzcGVjaWFsJykgewogICAgICAgICAgICAvLyAgIGxldCBsaXN0ID0gW107CiAgICAgICAgICAgIC8vICAgZGF0YS5mb3JFYWNoKChlKSA9PiB7CiAgICAgICAgICAgIC8vICAgICBlLnVybCA9IGAvcGFnZXMvYW5uZXgvc3BlY2lhbC9pbmRleD9pZD0ke2UuaWR9Jm5hbWU9JHtlLm5hbWV9YDsKICAgICAgICAgICAgLy8gICAgIGlmIChlLmlzX2RpeSkgewogICAgICAgICAgICAvLyAgICAgICBsaXN0LnB1c2goZSk7CiAgICAgICAgICAgIC8vICAgICB9CiAgICAgICAgICAgIC8vICAgfSk7CiAgICAgICAgICAgIC8vICAgdGhpcy50YWJsZUxpc3QgPSBsaXN0OwogICAgICAgICAgICAvLyB9IGVsc2UgaWYgKHRoaXMuY3VycmVuVHlwZSA9PSAncHJvZHVjdF9jYXRlZ29yeScpIHsKICAgICAgICAgICAgLy8gICBkYXRhLmZvckVhY2goKGUpID0+IHsKICAgICAgICAgICAgLy8gICAgIGlmIChlLmhhc093blByb3BlcnR5KCdjaGlsZHJlbicpKSB7CiAgICAgICAgICAgIC8vICAgICAgIGUuY2hpbGRyZW4uZm9yRWFjaCgoaikgPT4gewogICAgICAgICAgICAvLyAgICAgICAgIGoudXJsID0gYC9wYWdlcy9nb29kcy9nb29kc19saXN0L2luZGV4P3NpZD0ke2ouaWR9JnRpdGxlPSR7ai5jYXRlX25hbWV9YDsKICAgICAgICAgICAgLy8gICAgICAgfSk7CiAgICAgICAgICAgIC8vICAgICB9CiAgICAgICAgICAgIC8vICAgICBlLnVybCA9IGAvcGFnZXMvZ29vZHMvZ29vZHNfbGlzdC9pbmRleD9jaWQ9JHtlLmlkfSZ0aXRsZT0ke2UuY2F0ZV9uYW1lfWA7CiAgICAgICAgICAgIC8vICAgfSk7CiAgICAgICAgICAgIC8vICAgdGhpcy50YWJsZUxpc3QgPSBkYXRhOwogICAgICAgICAgICAvLyB9CiAgICAgICAgICB9KQogICAgICAgICAgLmNhdGNoKChlcnIpID0+IHsKICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoZXJyLm1zZyk7CiAgICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIG9rKCkgewogICAgICBpZiAodGhpcy5jdXJyZW5VcmwgPT0gJycpIHsKICAgICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZS53YXJuaW5nKCfor7fpgInmi6npk77mjqUnKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRlbWl0KCdsaW5rVXJsJywgdGhpcy5jdXJyZW5VcmwpOwogICAgICAgIHRoaXMubW9kYWxzID0gZmFsc2U7CiAgICAgICAgdGhpcy5yZXNldCgpOwogICAgICB9CiAgICB9LAogICAgY2FuY2VsKCkgewogICAgICB0aGlzLm1vZGFscyA9IGZhbHNlOwogICAgICB0aGlzLnJlc2V0KCk7CiAgICB9LAogIH0sCn07Cg=="},null]}